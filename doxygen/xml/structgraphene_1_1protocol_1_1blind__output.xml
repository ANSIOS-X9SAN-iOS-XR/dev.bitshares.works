<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1blind__output" kind="class" language="C++" prot="public">
    <compoundname>graphene::protocol::blind_output</compoundname>
    <includes refid="confidential_8hpp" local="no">confidential.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1blind__output_1a9f769b81ea0d838c59987453005ed31c" prot="public" static="no" mutable="no">
        <type>fc::ecc::commitment_type</type>
        <definition>fc::ecc::commitment_type graphene::protocol::blind_output::commitment</definition>
        <argsstring></argsstring>
        <name>commitment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="137" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1blind__output_1af2a7dba1e847babffa9f1e7179e07e9f" prot="public" static="no" mutable="no">
        <type>range_proof_type</type>
        <definition>range_proof_type graphene::protocol::blind_output::range_proof</definition>
        <argsstring></argsstring>
        <name>range_proof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>only required if there is more than one blind output </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="139" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1blind__output_1aefb4b4d8b5396fe9c946d270d3ab494a" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1authority" kindref="compound">authority</ref></type>
        <definition>authority graphene::protocol::blind_output::owner</definition>
        <argsstring></argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="140" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1blind__output_1aaa51bddef9ca43bd33740ecb2c00e7d4" prot="public" static="no" mutable="no">
        <type>optional&lt; <ref refid="structgraphene_1_1protocol_1_1stealth__confirmation" kindref="compound">stealth_confirmation</ref> &gt;</type>
        <definition>optional&lt;stealth_confirmation&gt; graphene::protocol::blind_output::stealth_memo</definition>
        <argsstring></argsstring>
        <name>stealth_memo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="141" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines data required to create a new blind commitment</para><para>The blinded output that must be proven to be greater than 0. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1403">
        <label>range_proof_type</label>
      </node>
      <node id="1404">
        <label>commitment_type</label>
      </node>
      <node id="1402">
        <label>optional&lt; graphene::protocol::stealth_confirmation &gt;</label>
      </node>
      <node id="1408">
        <label>flat_map&lt; graphene::protocol::address, weight_type &gt;</label>
      </node>
      <node id="1401">
        <label>graphene::protocol::blind_output</label>
        <link refid="structgraphene_1_1protocol_1_1blind__output"/>
        <childnode refid="1402" relation="usage">
          <edgelabel>stealth_memo</edgelabel>
        </childnode>
        <childnode refid="1403" relation="usage">
          <edgelabel>range_proof</edgelabel>
        </childnode>
        <childnode refid="1404" relation="usage">
          <edgelabel>commitment</edgelabel>
        </childnode>
        <childnode refid="1405" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="1406">
        <label>flat_map&lt; graphene::protocol::public_key_type, weight_type &gt;</label>
      </node>
      <node id="1405">
        <label>graphene::protocol::authority</label>
        <link refid="structgraphene_1_1protocol_1_1authority"/>
        <childnode refid="1406" relation="usage">
          <edgelabel>key_auths</edgelabel>
        </childnode>
        <childnode refid="1407" relation="usage">
          <edgelabel>account_auths</edgelabel>
        </childnode>
        <childnode refid="1408" relation="usage">
          <edgelabel>address_auths</edgelabel>
        </childnode>
      </node>
      <node id="1407">
        <label>flat_map&lt; account_id_type, weight_type &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="136" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="135" bodyend="142"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1blind__output_1a9f769b81ea0d838c59987453005ed31c" prot="public" virt="non-virtual"><scope>graphene::protocol::blind_output</scope><name>commitment</name></member>
      <member refid="structgraphene_1_1protocol_1_1blind__output_1aefb4b4d8b5396fe9c946d270d3ab494a" prot="public" virt="non-virtual"><scope>graphene::protocol::blind_output</scope><name>owner</name></member>
      <member refid="structgraphene_1_1protocol_1_1blind__output_1af2a7dba1e847babffa9f1e7179e07e9f" prot="public" virt="non-virtual"><scope>graphene::protocol::blind_output</scope><name>range_proof</name></member>
      <member refid="structgraphene_1_1protocol_1_1blind__output_1aaa51bddef9ca43bd33740ecb2c00e7d4" prot="public" virt="non-virtual"><scope>graphene::protocol::blind_output</scope><name>stealth_memo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
