<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hmac__test_8cpp" kind="file" language="C++">
    <compoundname>hmac_test.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="hex_8hpp" local="no">fc/crypto/hex.hpp</includes>
    <includes refid="hmac_8hpp" local="no">fc/crypto/hmac.hpp</includes>
    <includes refid="sha224_8hpp" local="no">fc/crypto/sha224.hpp</includes>
    <includes refid="sha256_8hpp" local="no">fc/crypto/sha256.hpp</includes>
    <includes refid="sha512_8hpp" local="no">fc/crypto/sha512.hpp</includes>
    <includes local="no">array</includes>
    <incdepgraph>
      <node id="38887">
        <label>boost/endian/buffers.hpp</label>
      </node>
      <node id="38931">
        <label>functional</label>
      </node>
      <node id="38910">
        <label>boost/preprocessor/seq/seq.hpp</label>
      </node>
      <node id="38932">
        <label>limits</label>
      </node>
      <node id="38902">
        <label>assert.h</label>
      </node>
      <node id="38901">
        <label>fc/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="38902" relation="include">
        </childnode>
        <childnode refid="38903" relation="include">
        </childnode>
      </node>
      <node id="38906">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="38885">
        <label>fc/crypto/hmac.hpp</label>
        <link refid="hmac_8hpp"/>
        <childnode refid="38886" relation="include">
        </childnode>
        <childnode refid="38933" relation="include">
        </childnode>
        <childnode refid="38934" relation="include">
        </childnode>
      </node>
      <node id="38880">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="38905">
        <label>fc/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="38888" relation="include">
        </childnode>
        <childnode refid="38901" relation="include">
        </childnode>
        <childnode refid="38883" relation="include">
        </childnode>
      </node>
      <node id="38890">
        <label>fc/config.hpp</label>
        <link refid="fc_2include_2fc_2config_8hpp"/>
      </node>
      <node id="38882">
        <label>stdint.h</label>
      </node>
      <node id="38891">
        <label>fc/container/flat_fwd.hpp</label>
        <link refid="flat__fwd_8hpp"/>
        <childnode refid="38892" relation="include">
        </childnode>
        <childnode refid="38893" relation="include">
        </childnode>
        <childnode refid="38894" relation="include">
        </childnode>
        <childnode refid="38890" relation="include">
        </childnode>
      </node>
      <node id="38899">
        <label>fc/log/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="38890" relation="include">
        </childnode>
        <childnode refid="38900" relation="include">
        </childnode>
        <childnode refid="38919" relation="include">
        </childnode>
        <childnode refid="38921" relation="include">
        </childnode>
        <childnode refid="38924" relation="include">
        </childnode>
        <childnode refid="38920" relation="include">
        </childnode>
        <childnode refid="38907" relation="include">
        </childnode>
        <childnode refid="38908" relation="include">
        </childnode>
        <childnode refid="38909" relation="include">
        </childnode>
        <childnode refid="38910" relation="include">
        </childnode>
        <childnode refid="38911" relation="include">
        </childnode>
        <childnode refid="38929" relation="include">
        </childnode>
      </node>
      <node id="38883">
        <label>string</label>
      </node>
      <node id="38917">
        <label>map</label>
      </node>
      <node id="38879">
        <label>libraries/fc/tests/hmac_test.cpp</label>
        <link refid="hmac__test_8cpp"/>
        <childnode refid="38880" relation="include">
        </childnode>
        <childnode refid="38881" relation="include">
        </childnode>
        <childnode refid="38885" relation="include">
        </childnode>
        <childnode refid="38886" relation="include">
        </childnode>
        <childnode refid="38933" relation="include">
        </childnode>
        <childnode refid="38934" relation="include">
        </childnode>
        <childnode refid="38915" relation="include">
        </childnode>
      </node>
      <node id="38925">
        <label>unordered_set</label>
      </node>
      <node id="38919">
        <label>fc/log/appender.hpp</label>
        <link refid="appender_8hpp"/>
        <childnode refid="38920" relation="include">
        </childnode>
        <childnode refid="38883" relation="include">
        </childnode>
      </node>
      <node id="38929">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="38930">
        <label>exception</label>
      </node>
      <node id="38921">
        <label>fc/log/log_message.hpp</label>
        <link refid="log__message_8hpp"/>
        <childnode refid="38890" relation="include">
        </childnode>
        <childnode refid="38900" relation="include">
        </childnode>
        <childnode refid="38922" relation="include">
        </childnode>
        <childnode refid="38920" relation="include">
        </childnode>
        <childnode refid="38883" relation="include">
        </childnode>
      </node>
      <node id="38928">
        <label>boost/multi_index_container_fwd.hpp</label>
      </node>
      <node id="38923">
        <label>fc/variant.hpp</label>
        <link refid="variant_8hpp"/>
        <childnode refid="38915" relation="include">
        </childnode>
        <childnode refid="38924" relation="include">
        </childnode>
        <childnode refid="38916" relation="include">
        </childnode>
        <childnode refid="38917" relation="include">
        </childnode>
        <childnode refid="38920" relation="include">
        </childnode>
        <childnode refid="38918" relation="include">
        </childnode>
        <childnode refid="38896" relation="include">
        </childnode>
        <childnode refid="38925" relation="include">
        </childnode>
        <childnode refid="38884" relation="include">
        </childnode>
        <childnode refid="38912" relation="include">
        </childnode>
        <childnode refid="38901" relation="include">
        </childnode>
        <childnode refid="38926" relation="include">
        </childnode>
        <childnode refid="38891" relation="include">
        </childnode>
        <childnode refid="38881" relation="include">
        </childnode>
        <childnode refid="38887" relation="include">
        </childnode>
        <childnode refid="38928" relation="include">
        </childnode>
        <childnode refid="38904" relation="include">
        </childnode>
      </node>
      <node id="38900">
        <label>fc/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="38882" relation="include">
        </childnode>
        <childnode refid="38883" relation="include">
        </childnode>
        <childnode refid="38901" relation="include">
        </childnode>
        <childnode refid="38904" relation="include">
        </childnode>
      </node>
      <node id="38911">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="38909">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="38926">
        <label>fc/uint128.hpp</label>
        <link refid="uint128_8hpp"/>
        <childnode refid="38927" relation="include">
        </childnode>
      </node>
      <node id="38881">
        <label>fc/crypto/hex.hpp</label>
        <link refid="hex_8hpp"/>
        <childnode refid="38882" relation="include">
        </childnode>
        <childnode refid="38883" relation="include">
        </childnode>
        <childnode refid="38884" relation="include">
        </childnode>
      </node>
      <node id="38894">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="38888">
        <label>fc/fwd.hpp</label>
        <link refid="fwd_8hpp"/>
      </node>
      <node id="38912">
        <label>string.h</label>
      </node>
      <node id="38893">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="38922">
        <label>fc/variant_object.hpp</label>
        <link refid="variant__object_8hpp"/>
        <childnode refid="38923" relation="include">
        </childnode>
        <childnode refid="38920" relation="include">
        </childnode>
      </node>
      <node id="38914">
        <label>fc/reflect/typename.hpp</label>
        <link refid="typename_8hpp"/>
        <childnode refid="38915" relation="include">
        </childnode>
        <childnode refid="38916" relation="include">
        </childnode>
        <childnode refid="38917" relation="include">
        </childnode>
        <childnode refid="38918" relation="include">
        </childnode>
        <childnode refid="38883" relation="include">
        </childnode>
        <childnode refid="38884" relation="include">
        </childnode>
        <childnode refid="38901" relation="include">
        </childnode>
        <childnode refid="38905" relation="include">
        </childnode>
        <childnode refid="38891" relation="include">
        </childnode>
      </node>
      <node id="38884">
        <label>vector</label>
      </node>
      <node id="38898">
        <label>fc/exception/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="38899" relation="include">
        </childnode>
        <childnode refid="38901" relation="include">
        </childnode>
        <childnode refid="38930" relation="include">
        </childnode>
        <childnode refid="38931" relation="include">
        </childnode>
        <childnode refid="38896" relation="include">
        </childnode>
      </node>
      <node id="38895">
        <label>fc/io/varint.hpp</label>
        <link refid="varint_8hpp"/>
        <childnode refid="38882" relation="include">
        </childnode>
        <childnode refid="38896" relation="include">
        </childnode>
      </node>
      <node id="38903">
        <label>utility</label>
      </node>
      <node id="38915">
        <label>array</label>
      </node>
      <node id="38934">
        <label>fc/crypto/sha512.hpp</label>
        <link refid="sha512_8hpp"/>
        <childnode refid="38887" relation="include">
        </childnode>
        <childnode refid="38889" relation="include">
        </childnode>
        <childnode refid="38888" relation="include">
        </childnode>
        <childnode refid="38904" relation="include">
        </childnode>
      </node>
      <node id="38927">
        <label>boost/multiprecision/integer.hpp</label>
      </node>
      <node id="38924">
        <label>cstddef</label>
      </node>
      <node id="38916">
        <label>deque</label>
      </node>
      <node id="38896">
        <label>unordered_map</label>
      </node>
      <node id="38933">
        <label>fc/crypto/sha256.hpp</label>
        <link refid="sha256_8hpp"/>
        <childnode refid="38887" relation="include">
        </childnode>
        <childnode refid="38888" relation="include">
        </childnode>
        <childnode refid="38905" relation="include">
        </childnode>
        <childnode refid="38889" relation="include">
        </childnode>
        <childnode refid="38904" relation="include">
        </childnode>
      </node>
      <node id="38908">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="38892">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="38897">
        <label>fc/safe.hpp</label>
        <link refid="safe_8hpp"/>
        <childnode refid="38898" relation="include">
        </childnode>
        <childnode refid="38904" relation="include">
        </childnode>
        <childnode refid="38932" relation="include">
        </childnode>
      </node>
      <node id="38904">
        <label>fc/reflect/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="38905" relation="include">
        </childnode>
        <childnode refid="38906" relation="include">
        </childnode>
        <childnode refid="38907" relation="include">
        </childnode>
        <childnode refid="38908" relation="include">
        </childnode>
        <childnode refid="38909" relation="include">
        </childnode>
        <childnode refid="38910" relation="include">
        </childnode>
        <childnode refid="38911" relation="include">
        </childnode>
        <childnode refid="38882" relation="include">
        </childnode>
        <childnode refid="38912" relation="include">
        </childnode>
        <childnode refid="38913" relation="include">
        </childnode>
        <childnode refid="38914" relation="include">
        </childnode>
      </node>
      <node id="38913">
        <label>type_traits</label>
      </node>
      <node id="38918">
        <label>set</label>
      </node>
      <node id="38886">
        <label>fc/crypto/sha224.hpp</label>
        <link refid="sha224_8hpp"/>
        <childnode refid="38887" relation="include">
        </childnode>
        <childnode refid="38888" relation="include">
        </childnode>
        <childnode refid="38889" relation="include">
        </childnode>
        <childnode refid="38904" relation="include">
        </childnode>
      </node>
      <node id="38920">
        <label>memory</label>
      </node>
      <node id="38907">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="38889">
        <label>fc/io/raw_fwd.hpp</label>
        <link refid="raw__fwd_8hpp"/>
        <childnode refid="38887" relation="include">
        </childnode>
        <childnode refid="38890" relation="include">
        </childnode>
        <childnode refid="38891" relation="include">
        </childnode>
        <childnode refid="38895" relation="include">
        </childnode>
        <childnode refid="38897" relation="include">
        </childnode>
        <childnode refid="38926" relation="include">
        </childnode>
        <childnode refid="38915" relation="include">
        </childnode>
        <childnode refid="38916" relation="include">
        </childnode>
        <childnode refid="38920" relation="include">
        </childnode>
        <childnode refid="38884" relation="include">
        </childnode>
        <childnode refid="38883" relation="include">
        </childnode>
        <childnode refid="38925" relation="include">
        </childnode>
        <childnode refid="38896" relation="include">
        </childnode>
        <childnode refid="38918" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="hmac__test_8cpp_1a6b2a3852db8bb19ab6909bac01859985" prot="public" static="no">
        <name>BOOST_TEST_MODULE</name>
        <initializer>HmacTest</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="1" column="9" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hmac__test_8cpp_1a4b70273020788d2dfed2d968d37e2924" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST1_KEY</definition>
        <argsstring></argsstring>
        <name>TEST1_KEY</name>
        <initializer>= &quot;0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="13" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a3911edea82a3f508c49b1b02684a618e" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST1_DATA</definition>
        <argsstring></argsstring>
        <name>TEST1_DATA</name>
        <initializer>= &quot;4869205468657265&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="14" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1aaa0739b4d8e678403764528414d34142" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST1_224</definition>
        <argsstring></argsstring>
        <name>TEST1_224</name>
        <initializer>= &quot;896fb1128abbdf196832107cd49df33f47b4b1169912ba4f53684b22&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="15" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a8de099b8f58bf2cf472e7e15ceabbc9d" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST1_256</definition>
        <argsstring></argsstring>
        <name>TEST1_256</name>
        <initializer>= &quot;b0344c61d8db38535ca8afceaf0bf12b881dc200c9833da726e9376c2e32cff7&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="16" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a2867a08d9525f4a649a781147eb6bba4" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST1_512</definition>
        <argsstring></argsstring>
        <name>TEST1_512</name>
        <initializer>= &quot;87aa7cdea5ef619d4ff0b4241a1d6cb02379f4e2ce4ec2787ad0b30545e17cde&quot;
                                    &quot;daa833b7d6b8a702038b274eaea3f4e4be9d914eeb61f1702e696c203a126854&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="17" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1ae3afb099558e4070f49f3c96678da81b" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST2_KEY</definition>
        <argsstring></argsstring>
        <name>TEST2_KEY</name>
        <initializer>= &quot;4a656665&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="20" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a2ca10d5d26f351b34a552f6aaccdde1a" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST2_DATA</definition>
        <argsstring></argsstring>
        <name>TEST2_DATA</name>
        <initializer>= &quot;7768617420646f2079612077616e7420666f72206e6f7468696e673f&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="21" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a60887a65c1925be4f39ed612e0691135" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST2_224</definition>
        <argsstring></argsstring>
        <name>TEST2_224</name>
        <initializer>= &quot;a30e01098bc6dbbf45690f3a7e9e6d0f8bbea2a39e6148008fd05e44&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="22" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1ab2d32587b9e130c42cd0e158b6482e3e" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST2_256</definition>
        <argsstring></argsstring>
        <name>TEST2_256</name>
        <initializer>= &quot;5bdcc146bf60754e6a042426089575c75a003f089d2739839dec58b964ec3843&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="23" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a47edacbb887d0f4664120e7f2d6f2f42" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST2_512</definition>
        <argsstring></argsstring>
        <name>TEST2_512</name>
        <initializer>= &quot;164b7a7bfcf819e2e395fbe73b56e0a387bd64222e831fd610270cd7ea250554&quot;
                                    &quot;9758bf75c05a994a6d034f65f8f0e6fdcaeab1a34d4a6b4b636e070a38bce737&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="24" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1ac3e3229b20ed4f42f375b564a5605709" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST3_KEY</definition>
        <argsstring></argsstring>
        <name>TEST3_KEY</name>
        <initializer>= &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="27" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a5ccefc3a710ab040fe3b38014f470516" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST3_DATA</definition>
        <argsstring></argsstring>
        <name>TEST3_DATA</name>
        <initializer>= &quot;dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd&quot;
                                     &quot;dddddddddddddddddddddddddddddddddddd&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="28" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a792d546a81b7ffb7d19a3391eb0a6a19" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST3_224</definition>
        <argsstring></argsstring>
        <name>TEST3_224</name>
        <initializer>= &quot;7fb3cb3588c6c1f6ffa9694d7d6ad2649365b0c1f65d69d1ec8333ea&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="30" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a854c305dc97c11dc2ea8c31599dcd03e" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST3_256</definition>
        <argsstring></argsstring>
        <name>TEST3_256</name>
        <initializer>= &quot;773ea91e36800e46854db8ebd09181a72959098b3ef8c122d9635514ced565fe&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="31" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a9bf81110c8e7296a41aef337aba59ee6" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST3_512</definition>
        <argsstring></argsstring>
        <name>TEST3_512</name>
        <initializer>= &quot;fa73b0089d56a284efb0f0756c890be9b1b5dbdd8ee81a3655f83e33b2279d39&quot;
                                    &quot;bf3e848279a722c806b485a47e67c807b946a337bee8942674278859e13292fb&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="32" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a71e63e1fe0e9c16f175c86b633d49bc7" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST4_KEY</definition>
        <argsstring></argsstring>
        <name>TEST4_KEY</name>
        <initializer>= &quot;0102030405060708090a0b0c0d0e0f10111213141516171819&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="35" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1adc198337d06601cd982b56295bc86fef" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST4_DATA</definition>
        <argsstring></argsstring>
        <name>TEST4_DATA</name>
        <initializer>= &quot;cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd&quot;
                                     &quot;cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="36" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a6d0568835ae2f147742330c561d88eba" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST4_224</definition>
        <argsstring></argsstring>
        <name>TEST4_224</name>
        <initializer>= &quot;6c11506874013cac6a2abc1bb382627cec6a90d86efc012de7afec5a&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="38" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a2be26fd891fbb8ee8910de1f51b9e6d0" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST4_256</definition>
        <argsstring></argsstring>
        <name>TEST4_256</name>
        <initializer>= &quot;82558a389a443c0ea4cc819899f2083a85f0faa3e578f8077a2e3ff46729665b&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="39" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a8abdf2314cc2fd63a24034a6376940a1" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST4_512</definition>
        <argsstring></argsstring>
        <name>TEST4_512</name>
        <initializer>= &quot;b0ba465637458c6990e5a8c5f61d4af7e576d97ff94b872de76f8050361ee3db&quot;
                                    &quot;a91ca5c11aa25eb4d679275cc5788063a5f19741120c4f2de2adebeb10a298dd&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="40" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a1e72f6143f04401043d7ec1872218e2e" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST6_KEY</definition>
        <argsstring></argsstring>
        <name>TEST6_KEY</name>
        <initializer>= &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaa&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="45" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a48e3f860fddbc074bd6981912a2d446d" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST6_DATA</definition>
        <argsstring></argsstring>
        <name>TEST6_DATA</name>
        <initializer>= &quot;54657374205573696e67204c6172676572205468616e20426c6f636b2d53697a&quot;
                                     &quot;65204b6579202d2048617368204b6579204669727374&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="50" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a4f9721a4e4e7c64592aec94cd5e35d8b" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST6_224</definition>
        <argsstring></argsstring>
        <name>TEST6_224</name>
        <initializer>= &quot;95e9a0db962095adaebe9b2d6f0dbce2d499f112f2d2b7273fa6870e&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="52" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1aa340feff8235c48606a63c6200b32090" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST6_256</definition>
        <argsstring></argsstring>
        <name>TEST6_256</name>
        <initializer>= &quot;60e431591ee0b67f0d8a26aacbf5b77f8e0bc6213728c5140546040f0ee37f54&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="53" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a7fc2c0cadfcb07d8fdcae886602ecd49" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST6_512</definition>
        <argsstring></argsstring>
        <name>TEST6_512</name>
        <initializer>= &quot;80b24263c7c1a3ebb71493c1dd7be8b49b46d1f41b4aeec1121b013783f8f352&quot;
                                    &quot;6b56d037e05f2598bd0fd2215d6a1e5295e64f73f63f0aec8b915a985d786598&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="54" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1ad53b3389310df493b41162f55dedbbb5" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST7_KEY</definition>
        <argsstring></argsstring>
        <name>TEST7_KEY</name>
        <initializer>= &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;
                                     &quot;aaaaaa&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="57" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a6a01b777027287fe10e20e3d695f4490" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST7_DATA</definition>
        <argsstring></argsstring>
        <name>TEST7_DATA</name>
        <initializer>= &quot;5468697320697320612074657374207573696e672061206c6172676572207468&quot;
                                     &quot;616e20626c6f636b2d73697a65206b657920616e642061206c61726765722074&quot;
                                     &quot;68616e20626c6f636b2d73697a6520646174612e20546865206b6579206e6565&quot;
                                     &quot;647320746f20626520686173686564206265666f7265206265696e6720757365&quot;
                                     &quot;642062792074686520484d414320616c676f726974686d2e&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="62" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1ae51dd134d57d8e56b7dbdda1885f6974" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST7_224</definition>
        <argsstring></argsstring>
        <name>TEST7_224</name>
        <initializer>= &quot;3a854166ac5d9f023f54d517d0b39dbd946770db9c2b95c9f6f565d1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="67" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1aadbeeabd097a0771fae3bbaa2a77886f" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST7_256</definition>
        <argsstring></argsstring>
        <name>TEST7_256</name>
        <initializer>= &quot;9b09ffa71b942fcb27635fbcd5b0e944bfdc63644f0713938a7f51535c3a35e2&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="68" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1ab293b1943a2846a092bd391cc9ff294b" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TEST7_512</definition>
        <argsstring></argsstring>
        <name>TEST7_512</name>
        <initializer>= &quot;e37b6a775dc87dbaa4dfa9f96e5e3ffddebd71f8867289865df5a32d20cdc944&quot;
                                    &quot;b6022cac3c4982b10d5eeb55c3e4de15134676fb6de0446065c97440fa8c6a58&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="69" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a9d1251b08eb97b87a98d56ccbd959872" prot="public" static="yes" mutable="no">
        <type><ref refid="classfc_1_1hmac" kindref="compound">fc::hmac</ref>&lt; <ref refid="classfc_1_1sha224" kindref="compound">fc::sha224</ref> &gt;</type>
        <definition>fc::hmac&lt;fc::sha224&gt; mac_224</definition>
        <argsstring></argsstring>
        <name>mac_224</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="72" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1a1131739a01f21d970ce5befcc8323290" prot="public" static="yes" mutable="no">
        <type><ref refid="classfc_1_1hmac" kindref="compound">fc::hmac</ref>&lt; <ref refid="classfc_1_1sha256" kindref="compound">fc::sha256</ref> &gt;</type>
        <definition>fc::hmac&lt;fc::sha256&gt; mac_256</definition>
        <argsstring></argsstring>
        <name>mac_256</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="73" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hmac__test_8cpp_1ae4379f533d6f0a791c16daf7e84beec2" prot="public" static="yes" mutable="no">
        <type><ref refid="classfc_1_1hmac" kindref="compound">fc::hmac</ref>&lt; <ref refid="classfc_1_1sha512" kindref="compound">fc::sha512</ref> &gt;</type>
        <definition>fc::hmac&lt;fc::sha512&gt; mac_512</definition>
        <argsstring></argsstring>
        <name>mac_512</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="74" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hmac__test_8cpp_1a7b5c91d3f4eeb37773b5f72d2287dcb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void run_test</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;data, const std::string &amp;expect_224, const std::string &amp;expect_256, const std::string &amp;expect_512)</argsstring>
        <name>run_test</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expect_224</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expect_256</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expect_512</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="77" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="77" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="hmac__test_8cpp_1ae8a8a8ed2bc83d51467fbe412268b6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(hmac_test_1)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>hmac_test_1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="91" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="hmac__test_8cpp_1a2e73e838d1528e239688890a141be899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(hmac_test_2)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>hmac_test_2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="96" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="hmac__test_8cpp_1a1a752bb0ec619e362dda914858ba6c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(hmac_test_3)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>hmac_test_3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="101" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="hmac__test_8cpp_1a1c394fc3982e6d33b20c29037e76a81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(hmac_test_4)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>hmac_test_4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="106" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="hmac__test_8cpp_1a1e0368fa66b4513ae6dddc048d38ad89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(hmac_test_6)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>hmac_test_6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="111" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="hmac__test_8cpp_1a4004bc68371f4047e225f942fb03e170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(hmac_test_7)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>hmac_test_7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/hmac_test.cpp" line="116" column="1" bodyfile="libraries/fc/tests/hmac_test.cpp" bodystart="116" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/hmac_test.cpp"/>
  </compounddef>
</doxygen>
