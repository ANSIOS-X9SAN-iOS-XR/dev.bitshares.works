<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="non__preemptable__scope__check_8hpp" kind="file" language="C++">
    <compoundname>non_preemptable_scope_check.hpp</compoundname>
    <includes refid="time_8hpp" local="no">fc/time.hpp</includes>
    <includes refid="spin__yield__lock_8hpp" local="no">fc/thread/spin_yield_lock.hpp</includes>
    <includedby refid="non__preemptable__scope__check_8cpp" local="no">libraries/fc/src/thread/non_preemptable_scope_check.cpp</includedby>
    <includedby refid="node_8cpp" local="no">libraries/net/node.cpp</includedby>
    <incdepgraph>
      <node id="37547">
        <label>fc/fwd.hpp</label>
        <link refid="fwd_8hpp"/>
      </node>
      <node id="37568">
        <label>functional</label>
      </node>
      <node id="37552">
        <label>boost/preprocessor/seq/seq.hpp</label>
      </node>
      <node id="37543">
        <label>assert.h</label>
      </node>
      <node id="37562">
        <label>fc/container/flat_fwd.hpp</label>
        <link refid="flat__fwd_8hpp"/>
        <childnode refid="37563" relation="include">
        </childnode>
        <childnode refid="37564" relation="include">
        </childnode>
        <childnode refid="37565" relation="include">
        </childnode>
        <childnode refid="37566" relation="include">
        </childnode>
      </node>
      <node id="37548">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="37545">
        <label>fc/reflect/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="37546" relation="include">
        </childnode>
        <childnode refid="37548" relation="include">
        </childnode>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37550" relation="include">
        </childnode>
        <childnode refid="37551" relation="include">
        </childnode>
        <childnode refid="37552" relation="include">
        </childnode>
        <childnode refid="37553" relation="include">
        </childnode>
        <childnode refid="37540" relation="include">
        </childnode>
        <childnode refid="37554" relation="include">
        </childnode>
        <childnode refid="37555" relation="include">
        </childnode>
        <childnode refid="37556" relation="include">
        </childnode>
        <childnode refid="37567" relation="include">
        </childnode>
      </node>
      <node id="37540">
        <label>stdint.h</label>
      </node>
      <node id="37556">
        <label>fc/reflect/typename.hpp</label>
        <link refid="typename_8hpp"/>
        <childnode refid="37557" relation="include">
        </childnode>
        <childnode refid="37558" relation="include">
        </childnode>
        <childnode refid="37559" relation="include">
        </childnode>
        <childnode refid="37560" relation="include">
        </childnode>
        <childnode refid="37541" relation="include">
        </childnode>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37542" relation="include">
        </childnode>
        <childnode refid="37546" relation="include">
        </childnode>
        <childnode refid="37562" relation="include">
        </childnode>
      </node>
      <node id="37569">
        <label>fc/thread/spin_yield_lock.hpp</label>
        <link refid="spin__yield__lock_8hpp"/>
      </node>
      <node id="37541">
        <label>string</label>
      </node>
      <node id="37559">
        <label>map</label>
      </node>
      <node id="37553">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="37551">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="37565">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="37554">
        <label>string.h</label>
      </node>
      <node id="37564">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="37561">
        <label>vector</label>
      </node>
      <node id="37539">
        <label>fc/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="37540" relation="include">
        </childnode>
        <childnode refid="37541" relation="include">
        </childnode>
        <childnode refid="37542" relation="include">
        </childnode>
        <childnode refid="37545" relation="include">
        </childnode>
      </node>
      <node id="37567">
        <label>fc/reflect/typelist.hpp</label>
        <link refid="typelist_8hpp"/>
        <childnode refid="37555" relation="include">
        </childnode>
        <childnode refid="37568" relation="include">
        </childnode>
      </node>
      <node id="37544">
        <label>utility</label>
      </node>
      <node id="37557">
        <label>array</label>
      </node>
      <node id="37546">
        <label>fc/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="37547" relation="include">
        </childnode>
        <childnode refid="37542" relation="include">
        </childnode>
        <childnode refid="37541" relation="include">
        </childnode>
      </node>
      <node id="37558">
        <label>deque</label>
      </node>
      <node id="37538">
        <label>libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp</label>
        <link refid="non_preemptable_scope_check.hpp"/>
        <childnode refid="37539" relation="include">
        </childnode>
        <childnode refid="37569" relation="include">
        </childnode>
      </node>
      <node id="37566">
        <label>fc/config.hpp</label>
        <link refid="fc_2include_2fc_2config_8hpp"/>
      </node>
      <node id="37550">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="37563">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="37555">
        <label>type_traits</label>
      </node>
      <node id="37560">
        <label>set</label>
      </node>
      <node id="37542">
        <label>fc/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="37543" relation="include">
        </childnode>
        <childnode refid="37544" relation="include">
        </childnode>
      </node>
      <node id="37549">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="37571">
        <label>libraries/fc/src/thread/non_preemptable_scope_check.cpp</label>
        <link refid="non__preemptable__scope__check_8cpp"/>
      </node>
      <node id="37570">
        <label>libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp</label>
        <link refid="non_preemptable_scope_check.hpp"/>
        <childnode refid="37571" relation="include">
        </childnode>
        <childnode refid="37572" relation="include">
        </childnode>
      </node>
      <node id="37572">
        <label>libraries/net/node.cpp</label>
        <link refid="node_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classfc_1_1non__preemptable__scope__check" prot="public">fc::non_preemptable_scope_check</innerclass>
    <innernamespace refid="namespacefc">fc</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1a46397a84d4848e076623297f0731b56e" prot="public" static="no">
        <name>FC_NON_PREEMPTABLE_SCOPE_COMBINE_HELPER</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x ## y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="17" column="9" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1acc6e1ea0c8f3ca541d1c50be1985f7b8" prot="public" static="no">
        <name>FC_NON_PREEMPTABLE_SCOPE_COMBINE</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="non__preemptable__scope__check_8hpp_1a46397a84d4848e076623297f0731b56e" kindref="member">FC_NON_PREEMPTABLE_SCOPE_COMBINE_HELPER</ref>(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="18" column="9" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1ae506494c9fb0a5f88dd9ca13b2d06ccd" prot="public" static="no">
        <name>ASSERT_TASK_NOT_PREEMPTED</name>
        <param></param>
        <initializer><ref refid="classfc_1_1non__preemptable__scope__check" kindref="compound">fc::non_preemptable_scope_check</ref> <ref refid="non__preemptable__scope__check_8hpp_1acc6e1ea0c8f3ca541d1c50be1985f7b8" kindref="member">FC_NON_PREEMPTABLE_SCOPE_COMBINE</ref>(scope_checker_, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="23" column="11" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp"/>
  </compounddef>
</doxygen>
