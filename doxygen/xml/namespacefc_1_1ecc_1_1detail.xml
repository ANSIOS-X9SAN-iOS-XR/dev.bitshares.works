<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc_1_1ecc_1_1detail" kind="namespace" language="C++">
    <compoundname>fc::ecc::detail</compoundname>
    <innerclass refid="classfc_1_1ecc_1_1detail_1_1private__key__impl" prot="public">fc::ecc::detail::private_key_impl</innerclass>
    <innerclass refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" prot="public">fc::ecc::detail::public_key_impl</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacefc_1_1ecc_1_1detail_1ae1339dacb195d0a41490d95c03092bf3" prot="public" static="no">
        <type>std::array&lt; unsigned char, 37 &gt;</type>
        <definition>typedef std::array&lt; unsigned char, 37 &gt; fc::ecc::detail::chr37</definition>
        <argsstring></argsstring>
        <name>chr37</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="22" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a4138faaa4bbcbe043c94ee637c694c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const secp256k1_context_t *</type>
        <definition>const secp256k1_context_t * fc::ecc::detail::_get_context</definition>
        <argsstring>()</argsstring>
        <name>_get_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_priv.hpp" line="11" column="1" bodyfile="libraries/fc/src/crypto/elliptic_secp256k1.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a71a18cd0920a238991d70c5dd2868570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::ecc::detail::_init_lib</definition>
        <argsstring>()</argsstring>
        <name>_init_lib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_priv.hpp" line="12" column="1" bodyfile="libraries/fc/src/crypto/elliptic_secp256k1.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1ab7363d849635fb8ae78b79d30da3f81f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1sha256" kindref="compound">fc::sha256</ref></type>
        <definition>fc::sha256 fc::ecc::detail::_left</definition>
        <argsstring>(const fc::sha512 &amp;v)</argsstring>
        <name>_left</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">fc::sha512</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="24" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a87091140a69385a95d2c4adf833cc0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1sha256" kindref="compound">fc::sha256</ref></type>
        <definition>fc::sha256 fc::ecc::detail::_right</definition>
        <argsstring>(const fc::sha512 &amp;v)</argsstring>
        <name>_right</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">fc::sha512</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="31" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1aeaf2ae6328c09a5d0743525f3b9deaf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fc::ecc::detail::_put</definition>
        <argsstring>(unsigned char **dest, unsigned int i)</argsstring>
        <name>_put</name>
        <param>
          <type>unsigned char **</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="38" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a44b2433fd1f6624c96b22239b476b533" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int fc::ecc::detail::_get</definition>
        <argsstring>(unsigned char **src)</argsstring>
        <name>_get</name>
        <param>
          <type>unsigned char **</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="46" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1aa2d58568487b370f9a478daa5fb2a2ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1_1ecc_1_1detail_1ae1339dacb195d0a41490d95c03092bf3" kindref="member">chr37</ref></type>
        <definition>static chr37 fc::ecc::detail::_derive_message</definition>
        <argsstring>(unsigned char first, const unsigned char *key32, int i)</argsstring>
        <name>_derive_message</name>
        <param>
          <type>unsigned char</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>key32</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="55" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a16acb379a6eab07fd47f36da4ca3f7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1_1ecc_1_1detail_1ae1339dacb195d0a41490d95c03092bf3" kindref="member">chr37</ref></type>
        <definition>chr37 fc::ecc::detail::_derive_message</definition>
        <argsstring>(const public_key_data &amp;key, int i)</argsstring>
        <name>_derive_message</name>
        <param>
          <type>const <ref refid="namespacefc_1_1ecc_1af1dc74a983548f8f8f167644826acced" kindref="member">public_key_data</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="65" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a348335640d80cddc4bde7b772861da6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1_1ecc_1_1detail_1ae1339dacb195d0a41490d95c03092bf3" kindref="member">chr37</ref></type>
        <definition>static chr37 fc::ecc::detail::_derive_message</definition>
        <argsstring>(const private_key_secret &amp;key, int i)</argsstring>
        <name>_derive_message</name>
        <param>
          <type>const <ref refid="namespacefc_1_1ecc_1aac05b92a409a08d0d6b06ce2d07eb54b" kindref="member">private_key_secret</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="70" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a0367eb3e2e8d3c9df370ec2d62e78d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const ec_group &amp;</type>
        <definition>const ec_group &amp; fc::ecc::detail::get_curve</definition>
        <argsstring>()</argsstring>
        <name>get_curve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="75" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1ad8b79daa804fea1c8a0ee277e5322f27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1_1ecc_1aac05b92a409a08d0d6b06ce2d07eb54b" kindref="member">private_key_secret</ref></type>
        <definition>static private_key_secret fc::ecc::detail::_get_curve_order</definition>
        <argsstring>()</argsstring>
        <name>_get_curve_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="81" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="81" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1a5d3c23a148b0c76d429302dd5ea9392d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacefc_1_1ecc_1aac05b92a409a08d0d6b06ce2d07eb54b" kindref="member">private_key_secret</ref> &amp;</type>
        <definition>const private_key_secret &amp; fc::ecc::detail::get_curve_order</definition>
        <argsstring>()</argsstring>
        <name>get_curve_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="93" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1afbda2d0d8f85c31921809b69d5b66cab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1_1ecc_1aac05b92a409a08d0d6b06ce2d07eb54b" kindref="member">private_key_secret</ref></type>
        <definition>static private_key_secret fc::ecc::detail::_get_half_curve_order</definition>
        <argsstring>()</argsstring>
        <name>_get_half_curve_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="99" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="99" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ecc_1_1detail_1ae9379c81933688e390e45efbe0a75d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacefc_1_1ecc_1aac05b92a409a08d0d6b06ce2d07eb54b" kindref="member">private_key_secret</ref> &amp;</type>
        <definition>const private_key_secret &amp; fc::ecc::detail::get_half_curve_order</definition>
        <argsstring>()</argsstring>
        <name>get_half_curve_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_common.cpp" line="112" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="15" column="1"/>
  </compounddef>
</doxygen>
