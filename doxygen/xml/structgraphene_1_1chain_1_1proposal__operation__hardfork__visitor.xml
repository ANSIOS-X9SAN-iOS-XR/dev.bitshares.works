<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::proposal_operation_hardfork_visitor</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1adb804e5e83320af04f6cdb29b944a36d" prot="public" static="no">
        <type>void</type>
        <definition>typedef void graphene::chain::proposal_operation_hardfork_visitor::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="38" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4d984fd0d3673e8dd5d232e7674b90ab" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
        <definition>const database&amp; graphene::chain::proposal_operation_hardfork_visitor::db</definition>
        <argsstring></argsstring>
        <name>db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="39" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a49d262acc4a43da659e0aee75d1665d1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>const fc::time_point_sec graphene::chain::proposal_operation_hardfork_visitor::block_time</definition>
        <argsstring></argsstring>
        <name>block_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="40" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a60e8c44ebd54d5aa07097f0321d48756" prot="public" static="no" mutable="no">
        <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>const fc::time_point_sec graphene::chain::proposal_operation_hardfork_visitor::next_maintenance_time</definition>
        <argsstring></argsstring>
        <name>next_maintenance_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="41" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a80b3700e7234cbb7f4990e7b00c3fa30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::proposal_operation_hardfork_visitor::proposal_operation_hardfork_visitor</definition>
        <argsstring>(const database &amp;_db, const fc::time_point_sec bt)</argsstring>
        <name>proposal_operation_hardfork_visitor</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>_db</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
          <declname>bt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="43" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="43" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4b670c3dbd01f7bd5bae1068af9701af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const T &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="47" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a5a0ca408e157392966a90af280c7367b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::call_order_update_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1call__order__update__operation" kindref="compound">graphene::chain::call_order_update_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="49" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="49" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a56618d4712e99e76d9b423f0f13dac32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_create_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__create__operation" kindref="compound">graphene::chain::asset_create_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="61" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1add434bd02a501d483afec4a8c35b7d65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_update_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__operation" kindref="compound">graphene::chain::asset_update_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="65" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a3de3c4f1392f8951fa79ba3d1e13cadb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::vesting_balance_create_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1vesting__balance__create__operation" kindref="compound">graphene::chain::vesting_balance_create_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="69" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a20e3afcb35c0dfd43812d97692fb6a48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_settle_cancel_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__settle__cancel__operation" kindref="compound">graphene::chain::asset_settle_cancel_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="91" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1af9f10d72d34a461351aa3484063ae588" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::committee_member_update_global_parameters_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1committee__member__update__global__parameters__operation" kindref="compound">graphene::chain::committee_member_update_global_parameters_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="96" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1ae55b70a472da87689818ef543997a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_create_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__create__operation" kindref="compound">graphene::chain::htlc_create_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="104" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7535d1b108b235a9a36254755b31657c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_redeem_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__redeem__operation" kindref="compound">graphene::chain::htlc_redeem_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="107" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a98a7675a8f24ef0c6d01ade1bba81b0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_extend_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__extend__operation" kindref="compound">graphene::chain::htlc_extend_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="110" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a8198469d601b9c7fd58e91ce7044398b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::proposal_create_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1proposal__create__operation" kindref="compound">graphene::chain::proposal_create_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="114" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="114" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4749">
        <label>graphene::chain::proposal_operation_hardfork_visitor</label>
        <link refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor"/>
        <childnode refid="4750" relation="usage">
          <edgelabel>block_time</edgelabel>
          <edgelabel>next_maintenance_time</edgelabel>
        </childnode>
        <childnode refid="4751" relation="usage">
          <edgelabel>db</edgelabel>
        </childnode>
      </node>
      <node id="4750">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="4752">
        <label>graphene::db::object_database</label>
        <link refid="classgraphene_1_1db_1_1object__database"/>
        <childnode refid="4753" relation="usage">
          <edgelabel>_undo_db</edgelabel>
        </childnode>
      </node>
      <node id="4751">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="4752" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4753">
        <label>graphene::db::undo_database</label>
        <link refid="classgraphene_1_1db_1_1undo__database"/>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/proposal_evaluator.cpp" line="37" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="36" bodyend="128"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a49d262acc4a43da659e0aee75d1665d1" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>block_time</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4d984fd0d3673e8dd5d232e7674b90ab" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>db</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a60e8c44ebd54d5aa07097f0321d48756" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>next_maintenance_time</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4b670c3dbd01f7bd5bae1068af9701af" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a5a0ca408e157392966a90af280c7367b" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a56618d4712e99e76d9b423f0f13dac32" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1add434bd02a501d483afec4a8c35b7d65" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a3de3c4f1392f8951fa79ba3d1e13cadb" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a20e3afcb35c0dfd43812d97692fb6a48" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1af9f10d72d34a461351aa3484063ae588" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1ae55b70a472da87689818ef543997a2" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7535d1b108b235a9a36254755b31657c" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a98a7675a8f24ef0c6d01ade1bba81b0b" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a8198469d601b9c7fd58e91ce7044398b" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a80b3700e7234cbb7f4990e7b00c3fa30" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>proposal_operation_hardfork_visitor</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1adb804e5e83320af04f6cdb29b944a36d" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
