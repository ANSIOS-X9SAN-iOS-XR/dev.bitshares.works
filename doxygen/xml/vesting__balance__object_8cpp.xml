<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="vesting__balance__object_8cpp" kind="file" language="C++">
    <compoundname>vesting_balance_object.cpp</compoundname>
    <includes refid="vesting__balance__object_8hpp" local="no">graphene/chain/vesting_balance_object.hpp</includes>
    <includes local="no">fc/io/raw.hpp</includes>
    <incdepgraph>
      <node id="10052">
        <label>boost/multi_index/identity.hpp</label>
      </node>
      <node id="10037">
        <label>fc/reflect/reflect.hpp</label>
      </node>
      <node id="10033">
        <label>fc/crypto/sha1.hpp</label>
      </node>
      <node id="10023">
        <label>boost/preprocessor/seq/transform.hpp</label>
      </node>
      <node id="10036">
        <label>fc/crypto/elliptic.hpp</label>
      </node>
      <node id="10021">
        <label>cstdint</label>
      </node>
      <node id="10013">
        <label>libraries/chain/vesting_balance_object.cpp</label>
        <link refid="vesting__balance__object_8cpp"/>
        <childnode refid="10014" relation="include">
        </childnode>
        <childnode refid="10053" relation="include">
        </childnode>
      </node>
      <node id="10039">
        <label>fc/optional.hpp</label>
      </node>
      <node id="10032">
        <label>fc/crypto/ripemd160.hpp</label>
      </node>
      <node id="10026">
        <label>boost/preprocessor/tuple/elem.hpp</label>
      </node>
      <node id="10024">
        <label>boost/preprocessor/seq/elem.hpp</label>
      </node>
      <node id="10016">
        <label>graphene/protocol/asset.hpp</label>
        <link refid="asset_8hpp"/>
        <childnode refid="10017" relation="include">
        </childnode>
      </node>
      <node id="10040">
        <label>fc/safe.hpp</label>
      </node>
      <node id="10053">
        <label>fc/io/raw.hpp</label>
      </node>
      <node id="10034">
        <label>fc/crypto/sha224.hpp</label>
      </node>
      <node id="10028">
        <label>boost/rational.hpp</label>
      </node>
      <node id="10014">
        <label>graphene/chain/vesting_balance_object.hpp</label>
        <link refid="vesting__balance__object_8hpp"/>
        <childnode refid="10015" relation="include">
        </childnode>
        <childnode refid="10016" relation="include">
        </childnode>
        <childnode refid="10050" relation="include">
        </childnode>
        <childnode refid="10051" relation="include">
        </childnode>
        <childnode refid="10052" relation="include">
        </childnode>
        <childnode refid="10046" relation="include">
        </childnode>
        <childnode refid="10045" relation="include">
        </childnode>
      </node>
      <node id="10015">
        <label>graphene/db/generic_index.hpp</label>
      </node>
      <node id="10046">
        <label>fc/static_variant.hpp</label>
      </node>
      <node id="10038">
        <label>fc/reflect/variant.hpp</label>
      </node>
      <node id="10035">
        <label>fc/crypto/sha256.hpp</label>
      </node>
      <node id="10043">
        <label>fc/io/datastream.hpp</label>
      </node>
      <node id="10048">
        <label>fc/exception/exception.hpp</label>
      </node>
      <node id="10019">
        <label>vector</label>
      </node>
      <node id="10031">
        <label>fc/io/enum_type.hpp</label>
      </node>
      <node id="10017">
        <label>graphene/protocol/types.hpp</label>
        <link refid="protocol_2include_2graphene_2protocol_2types_8hpp"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10019" relation="include">
        </childnode>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10021" relation="include">
        </childnode>
        <childnode refid="10022" relation="include">
        </childnode>
        <childnode refid="10023" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="10027" relation="include">
        </childnode>
        <childnode refid="10028" relation="include">
        </childnode>
        <childnode refid="10029" relation="include">
        </childnode>
        <childnode refid="10030" relation="include">
        </childnode>
        <childnode refid="10031" relation="include">
        </childnode>
        <childnode refid="10032" relation="include">
        </childnode>
        <childnode refid="10033" relation="include">
        </childnode>
        <childnode refid="10034" relation="include">
        </childnode>
        <childnode refid="10035" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10037" relation="include">
        </childnode>
        <childnode refid="10038" relation="include">
        </childnode>
        <childnode refid="10039" relation="include">
        </childnode>
        <childnode refid="10040" relation="include">
        </childnode>
        <childnode refid="10041" relation="include">
        </childnode>
        <childnode refid="10042" relation="include">
        </childnode>
        <childnode refid="10043" relation="include">
        </childnode>
        <childnode refid="10044" relation="include">
        </childnode>
        <childnode refid="10045" relation="include">
        </childnode>
        <childnode refid="10046" relation="include">
        </childnode>
        <childnode refid="10047" relation="include">
        </childnode>
        <childnode refid="10049" relation="include">
        </childnode>
      </node>
      <node id="10051">
        <label>boost/multi_index/hashed_index.hpp</label>
      </node>
      <node id="10041">
        <label>fc/container/flat.hpp</label>
      </node>
      <node id="10050">
        <label>boost/multi_index/composite_key.hpp</label>
      </node>
      <node id="10047">
        <label>graphene/protocol/object_id.hpp</label>
        <link refid="object__id_8hpp"/>
        <childnode refid="10048" relation="include">
        </childnode>
        <childnode refid="10030" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
      </node>
      <node id="10020">
        <label>deque</label>
      </node>
      <node id="10027">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="10025">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="10030">
        <label>fc/io/varint.hpp</label>
      </node>
      <node id="10029">
        <label>fc/container/flat_fwd.hpp</label>
      </node>
      <node id="10044">
        <label>fc/io/raw_fwd.hpp</label>
      </node>
      <node id="10042">
        <label>fc/string.hpp</label>
      </node>
      <node id="10045">
        <label>fc/uint128.hpp</label>
      </node>
      <node id="10049">
        <label>graphene/protocol/config.hpp</label>
        <link refid="protocol_2include_2graphene_2protocol_2config_8hpp"/>
      </node>
      <node id="10018">
        <label>memory</label>
      </node>
      <node id="10022">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegraphene">graphene</innernamespace>
    <innernamespace refid="namespacegraphene_1_1chain">graphene::chain</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="vesting__balance__object_8cpp_1a679079687d3fc4686413f95d6d6d0fea" prot="public" static="no">
        <name>VESTING_VISITOR</name>
        <param><defname>NAME</defname></param>
        <param><defname>MAYBE_CONST</defname></param>
        <initializer>struct NAME ## _visitor                                       \
{                                                             \
   typedef decltype(                                          \
      std::declval&lt;linear_vesting_policy&gt;().NAME(             \
         std::declval&lt;vesting_policy_context&gt;())              \
     ) result_type;                                           \
                                                              \
   NAME ## _visitor(                                          \
      const asset&amp; balance,                                   \
      const time_point_sec&amp; now,                              \
      const asset&amp; amount                                     \
     )                                                        \
   : ctx(balance, now, amount) {}                             \
                                                              \
   template&lt; typename Policy &gt;                                \
   result_type                                                \
   operator()(MAYBE_CONST Policy&amp; policy) MAYBE_CONST         \
   {                                                          \
      return policy.NAME(ctx);                                \
   }                                                          \
                                                              \
   vesting_policy_context ctx;                                \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="192" column="9" bodyfile="libraries/chain/vesting_balance_object.cpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/vesting_balance_object.cpp"/>
  </compounddef>
</doxygen>
