<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classoptionals__api" kind="class" language="C++" prot="public">
    <compoundname>optionals_api</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classoptionals__api_1a0484bd6f056ca4984e92385cfac6ee3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string optionals_api::foo</definition>
        <argsstring>(const std::string &amp;first, const fc::optional&lt; std::string &gt; &amp;second, const fc::optional&lt; std::string &gt; &amp;third)</argsstring>
        <name>foo</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt; &amp;</type>
          <declname>second</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt; &amp;</type>
          <declname>third</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/api_tests.cpp" line="38" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classoptionals__api_1aa3d5092856a1e9014dd3b78b1efb8520" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string optionals_api::bar</definition>
        <argsstring>(fc::optional&lt; std::string &gt; first, fc::optional&lt; std::string &gt; second, fc::optional&lt; std::string &gt; third)</argsstring>
        <name>bar</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt;</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt;</type>
          <declname>second</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt;</type>
          <declname>third</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/api_tests.cpp" line="42" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/api_tests.cpp" line="36" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="35" bodyend="46"/>
    <listofallmembers>
      <member refid="classoptionals__api_1aa3d5092856a1e9014dd3b78b1efb8520" prot="public" virt="non-virtual"><scope>optionals_api</scope><name>bar</name></member>
      <member refid="classoptionals__api_1a0484bd6f056ca4984e92385cfac6ee3d" prot="public" virt="non-virtual"><scope>optionals_api</scope><name>foo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
