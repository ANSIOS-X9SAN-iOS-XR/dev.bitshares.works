<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1precomputable__transaction" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::precomputable_transaction</compoundname>
    <basecompoundref refid="classgraphene_1_1chain_1_1signed__transaction" prot="public" virt="non-virtual">graphene::chain::signed_transaction</basecompoundref>
    <derivedcompoundref refid="structgraphene_1_1chain_1_1processed__transaction" prot="public" virt="non-virtual">graphene::chain::processed_transaction</derivedcompoundref>
    <includes refid="transaction_8hpp" local="no">transaction.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1precomputable__transaction_1a0b0a8d65da51d3f73f2c3660c61cf7b1" prot="protected" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool graphene::chain::precomputable_transaction::_validated</definition>
        <argsstring></argsstring>
        <name>_validated</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="232" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/transaction.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1precomputable__transaction_1a0014c0d590c58b7fe3dfdd63775e6e60" prot="protected" static="no" mutable="yes">
        <type>uint64_t</type>
        <definition>uint64_t graphene::chain::precomputable_transaction::_packed_size</definition>
        <argsstring></argsstring>
        <name>_packed_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="233" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/transaction.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1precomputable__transaction_1a5c07d3dfc37d16bd6baefee50cf8e493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::precomputable_transaction::precomputable_transaction</definition>
        <argsstring>()</argsstring>
        <name>precomputable_transaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="223" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/transaction.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1precomputable__transaction_1aab35047671d35c4e3513389fd031aecb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::precomputable_transaction::precomputable_transaction</definition>
        <argsstring>(const signed_transaction &amp;tx)</argsstring>
        <name>precomputable_transaction</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1signed__transaction" kindref="compound">signed_transaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="224" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/transaction.hpp" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1precomputable__transaction_1ad1df98870e8c6a9d35b2ca01de5fc5b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::precomputable_transaction::precomputable_transaction</definition>
        <argsstring>(signed_transaction &amp;&amp;tx)</argsstring>
        <name>precomputable_transaction</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1signed__transaction" kindref="compound">signed_transaction</ref> &amp;&amp;</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="225" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/transaction.hpp" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1precomputable__transaction_1a2850123fb5c0cb5db1b99eb66cbbc2ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="namespacegraphene_1_1chain_1adc38ef0a36d8b8dfcef2cbbcacb6d1e8" kindref="member">transaction_id_type</ref> &amp;</type>
        <definition>const transaction_id_type &amp; graphene::chain::precomputable_transaction::id</definition>
        <argsstring>() const override</argsstring>
        <name>id</name>
        <reimplements refid="classgraphene_1_1chain_1_1transaction_1ac94648b40635194bcbaf4a94cedda568">id</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="227" column="1" bodyfile="libraries/chain/protocol/transaction.cpp" bodystart="399" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1precomputable__transaction_1a672016ee1e7b6e017a8bde54c3ffaab6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::chain::precomputable_transaction::validate</definition>
        <argsstring>() const override</argsstring>
        <name>validate</name>
        <reimplements refid="classgraphene_1_1chain_1_1transaction_1adbd10db7270e459e93daf28da33010c8">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="228" column="1" bodyfile="libraries/chain/protocol/transaction.cpp" bodystart="406" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1precomputable__transaction_1adff7e99faa08a57ec1780f2005b4171c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const flat_set&lt; <ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">public_key_type</ref> &gt; &amp;</type>
        <definition>const flat_set&lt; public_key_type &gt; &amp; graphene::chain::precomputable_transaction::get_signature_keys</definition>
        <argsstring>(const chain_id_type &amp;chain_id) const override</argsstring>
        <name>get_signature_keys</name>
        <reimplements refid="classgraphene_1_1chain_1_1signed__transaction_1a302d7ddd18b6861ad80dd7b3cc7361ab">get_signature_keys</reimplements>
        <param>
          <type>const <ref refid="namespacegraphene_1_1chain_1a8182991954496b517776f06844cf2d93" kindref="member">chain_id_type</ref> &amp;</type>
          <declname>chain_id</declname>
        </param>
        <briefdescription>
<para>Extract public keys from signatures with given chain ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain_id</parametername>
</parameternamelist>
<parameterdescription>
<para>A chain ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Public keys </para></simplesect>
<simplesect kind="note"><para>If signees is empty, E.G. when it&apos;s the first time calling this function for the signed transaction, public keys will be extracted with given chain ID, and be stored into the mutable signees field, then signees will be returned; otherwise, the chain_id parameter will be ignored, and signees will be returned directly. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="229" column="1" bodyfile="libraries/chain/protocol/transaction.cpp" bodystart="420" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1precomputable__transaction_1ab6c3fafa499117e3b81a9acbb7c73c80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t graphene::chain::precomputable_transaction::get_packed_size</definition>
        <argsstring>() const override</argsstring>
        <name>get_packed_size</name>
        <reimplements refid="classgraphene_1_1chain_1_1transaction_1ab41ae96311081467912e6722d3fe8592">get_packed_size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="230" column="1" bodyfile="libraries/chain/protocol/transaction.cpp" bodystart="413" bodyend="418"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This represents a signed transaction that will never have its operations, signatures etc. modified again, after initial creation. It is therefore safe to cache results from various calls. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2983">
        <label>graphene::chain::processed_transaction</label>
        <link refid="structgraphene_1_1chain_1_1processed__transaction"/>
        <childnode refid="2980" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2981">
        <label>graphene::chain::signed_transaction</label>
        <link refid="classgraphene_1_1chain_1_1signed__transaction"/>
        <childnode refid="2982" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2982">
        <label>graphene::chain::transaction</label>
        <link refid="classgraphene_1_1chain_1_1transaction"/>
      </node>
      <node id="2980">
        <label>graphene::chain::precomputable_transaction</label>
        <link refid="classgraphene_1_1chain_1_1precomputable__transaction"/>
        <childnode refid="2981" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2988">
        <label>time_point_sec</label>
      </node>
      <node id="2987">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="2990">
        <label>vector&lt; signature_type &gt;</label>
      </node>
      <node id="2985">
        <label>graphene::chain::signed_transaction</label>
        <link refid="classgraphene_1_1chain_1_1signed__transaction"/>
        <childnode refid="2986" relation="public-inheritance">
        </childnode>
        <childnode refid="2990" relation="usage">
          <edgelabel>signatures</edgelabel>
        </childnode>
        <childnode refid="2991" relation="usage">
          <edgelabel>_signees</edgelabel>
        </childnode>
      </node>
      <node id="2989">
        <label>vector&lt; operation &gt;</label>
      </node>
      <node id="2991">
        <label>flat_set&lt; graphene::chain::public_key_type &gt;</label>
      </node>
      <node id="2986">
        <label>graphene::chain::transaction</label>
        <link refid="classgraphene_1_1chain_1_1transaction"/>
        <childnode refid="2987" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="2988" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
        <childnode refid="2989" relation="usage">
          <edgelabel>operations</edgelabel>
        </childnode>
      </node>
      <node id="2984">
        <label>graphene::chain::precomputable_transaction</label>
        <link refid="classgraphene_1_1chain_1_1precomputable__transaction"/>
        <childnode refid="2985" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/transaction.hpp" line="221" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/transaction.hpp" bodystart="221" bodyend="234"/>
    <listofallmembers>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1a0014c0d590c58b7fe3dfdd63775e6e60" prot="protected" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>_packed_size</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1a4202c6b4b8afba37daac2456326acee2" prot="protected" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>_signees</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1aa052dde8bcc9bb2b94b67c5cb97cc995" prot="protected" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>_tx_id_buffer</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1a0b0a8d65da51d3f73f2c3660c61cf7b1" prot="protected" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>_validated</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1ab99f3eb4824b38719f2158f0d256a321" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>clear</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1aba3c20ff4ff61413667a205d08960bf5" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>clear_signatures</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1aba25fb0435684c2088b0d0ae5e0d27d2" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>digest</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a31fbf0cfaa89497d13fc35fb51319a32" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>expiration</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a4f405d9c07b4655ef38e4388852caf38" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>extensions</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1ab6c3fafa499117e3b81a9acbb7c73c80" prot="public" virt="virtual"><scope>graphene::chain::precomputable_transaction</scope><name>get_packed_size</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a3d4d00f25924c74f600064951a83f5e1" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>get_required_authorities</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1a8eda0ee8c815cfd8328dc2b92a91f8f6" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>get_required_signatures</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1adff7e99faa08a57ec1780f2005b4171c" prot="public" virt="virtual"><scope>graphene::chain::precomputable_transaction</scope><name>get_signature_keys</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1a2850123fb5c0cb5db1b99eb66cbbc2ab" prot="public" virt="virtual"><scope>graphene::chain::precomputable_transaction</scope><name>id</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1ac1ae250b90c65312a6c919174dbf584d" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>minimize_required_signatures</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a8013003bb366e3a6a7f61eae96cd1281" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>operations</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1a5c07d3dfc37d16bd6baefee50cf8e493" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>precomputable_transaction</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1aab35047671d35c4e3513389fd031aecb" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>precomputable_transaction</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1ad1df98870e8c6a9d35b2ca01de5fc5b8" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>precomputable_transaction</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a3c3667e1bb02ad8f694f41206436e9cf" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>ref_block_num</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1afcebf54b05d6254e6ea53aecdd075975" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>ref_block_prefix</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a6d70681972cbabd916c52fb63b6091c6" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>set_expiration</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a8571a6eb56aad9899093eb15fa18b43d" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>set_reference_block</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a5b988fc8d032e5d8c9ef4b605834cf07" prot="protected" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>sig_digest</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1a99cd8014861f5371b466b2dba00551f2" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>sign</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1a96b0d1c656b2c480d5f2ddd627a34e45" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>sign</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1a11b7f1817059ccae1ea5f176a505834e" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>signatures</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1a9be0388e8af36733e314ac2793452984" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>signed_transaction</name></member>
      <member refid="classgraphene_1_1chain_1_1precomputable__transaction_1a672016ee1e7b6e017a8bde54c3ffaab6" prot="public" virt="virtual"><scope>graphene::chain::precomputable_transaction</scope><name>validate</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__transaction_1a99688f54e20dded0b80441d9ee2e390f" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>verify_authority</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a870f3054c7403dbce2b21a7253b2a1d1" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>visit</name></member>
      <member refid="classgraphene_1_1chain_1_1transaction_1a927bed92680e17e9790a598a64f79943" prot="public" virt="non-virtual"><scope>graphene::chain::precomputable_transaction</scope><name>visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
