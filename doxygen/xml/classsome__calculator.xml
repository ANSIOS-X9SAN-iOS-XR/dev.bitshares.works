<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsome__calculator" kind="class" language="C++" prot="public">
    <compoundname>some_calculator</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsome__calculator_1a5582be740a8d7bca0df0ee04dc00f021" prot="public" static="no" mutable="no">
        <type>std::function&lt; void(int32_t)&gt;</type>
        <definition>std::function&lt;void(int32_t)&gt; some_calculator::_cb</definition>
        <argsstring></argsstring>
        <name>_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/api_tests.cpp" line="58" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsome__calculator_1abd236f08f78c81f63d437ab701e0482f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t some_calculator::add</definition>
        <argsstring>(int32_t a, int32_t b)</argsstring>
        <name>add</name>
        <param>
          <type>int32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/api_tests.cpp" line="54" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classsome__calculator_1ae07bd2eb5bbd4a0cf1330ec51aa926c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t some_calculator::sub</definition>
        <argsstring>(int32_t a, int32_t b)</argsstring>
        <name>sub</name>
        <param>
          <type>int32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/api_tests.cpp" line="55" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsome__calculator_1af28d8b9113c33a29b3676df10cbd62b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void some_calculator::on_result</definition>
        <argsstring>(const std::function&lt; void(int32_t)&gt; &amp;cb)</argsstring>
        <name>on_result</name>
        <param>
          <type>const std::function&lt; void(int32_t)&gt; &amp;</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/api_tests.cpp" line="56" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classsome__calculator_1a40e02d7862a8041e7a89e94371205e27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void some_calculator::on_result2</definition>
        <argsstring>(const std::function&lt; void(int32_t)&gt; &amp;cb, int test)</argsstring>
        <name>on_result2</name>
        <param>
          <type>const std::function&lt; void(int32_t)&gt; &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/api_tests.cpp" line="57" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/api_tests.cpp" line="52" column="1" bodyfile="libraries/fc/tests/api_tests.cpp" bodystart="51" bodyend="59"/>
    <listofallmembers>
      <member refid="classsome__calculator_1a5582be740a8d7bca0df0ee04dc00f021" prot="public" virt="non-virtual"><scope>some_calculator</scope><name>_cb</name></member>
      <member refid="classsome__calculator_1abd236f08f78c81f63d437ab701e0482f" prot="public" virt="non-virtual"><scope>some_calculator</scope><name>add</name></member>
      <member refid="classsome__calculator_1af28d8b9113c33a29b3676df10cbd62b0" prot="public" virt="non-virtual"><scope>some_calculator</scope><name>on_result</name></member>
      <member refid="classsome__calculator_1a40e02d7862a8041e7a89e94371205e27" prot="public" virt="non-virtual"><scope>some_calculator</scope><name>on_result2</name></member>
      <member refid="classsome__calculator_1ae07bd2eb5bbd4a0cf1330ec51aa926c3" prot="public" virt="non-virtual"><scope>some_calculator</scope><name>sub</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
