<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1signed__block__header" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::signed_block_header</compoundname>
    <basecompoundref refid="classgraphene_1_1chain_1_1block__header" prot="public" virt="non-virtual">graphene::chain::block_header</basecompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1signed__block" prot="public" virt="non-virtual">graphene::chain::signed_block</derivedcompoundref>
    <includes refid="block_8hpp" local="no">block.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1signed__block__header_1a4280fac9bac0ea22d2fb063efc964674" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1aed41249e2d1e1e56e91d68da30cbddad" kindref="member">signature_type</ref></type>
        <definition>signature_type graphene::chain::signed_block_header::witness_signature</definition>
        <argsstring></argsstring>
        <name>witness_signature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="53" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/block.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1signed__block__header_1ab5aab016f63b376f7040598dff0c9307" prot="protected" static="no" mutable="yes">
        <type>fc::ecc::public_key</type>
        <definition>fc::ecc::public_key graphene::chain::signed_block_header::_signee</definition>
        <argsstring></argsstring>
        <name>_signee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="55" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/block.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1signed__block__header_1a4a24bc61df6f524d5038c8e8e204a37b" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespacegraphene_1_1chain_1a314b030d7a6107c5641fd9945da7f568" kindref="member">block_id_type</ref></type>
        <definition>block_id_type graphene::chain::signed_block_header::_block_id</definition>
        <argsstring></argsstring>
        <name>_block_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="56" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/block.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1signed__block__header_1a35c290ec06916ffda24cb9d725eae76f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacegraphene_1_1chain_1a314b030d7a6107c5641fd9945da7f568" kindref="member">block_id_type</ref> &amp;</type>
        <definition>const block_id_type &amp; graphene::chain::signed_block_header::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="48" column="1" bodyfile="libraries/chain/protocol/block.cpp" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1signed__block__header_1a50334db58f0594c3dddd55c24fd98187" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const fc::ecc::public_key &amp;</type>
        <definition>const fc::ecc::public_key &amp; graphene::chain::signed_block_header::signee</definition>
        <argsstring>() const</argsstring>
        <name>signee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="49" column="1" bodyfile="libraries/chain/protocol/block.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1signed__block__header_1a58ae9b51b87579db2aabe5c16097e8e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::signed_block_header::sign</definition>
        <argsstring>(const fc::ecc::private_key &amp;signer)</argsstring>
        <name>sign</name>
        <param>
          <type>const fc::ecc::private_key &amp;</type>
          <declname>signer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="50" column="1" bodyfile="libraries/chain/protocol/block.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1signed__block__header_1ab6ca7fc7bf0e2c291b8baa76a9b1d511" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::signed_block_header::validate_signee</definition>
        <argsstring>(const fc::ecc::public_key &amp;expected_signee) const</argsstring>
        <name>validate_signee</name>
        <param>
          <type>const fc::ecc::public_key &amp;</type>
          <declname>expected_signee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="51" column="1" bodyfile="libraries/chain/protocol/block.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3256">
        <label>graphene::chain::signed_block_header</label>
        <link refid="classgraphene_1_1chain_1_1signed__block__header"/>
        <childnode refid="3257" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3259">
        <label>graphene::wallet::signed_block_with_info</label>
        <link refid="structgraphene_1_1wallet_1_1signed__block__with__info"/>
        <childnode refid="3258" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3258">
        <label>graphene::chain::signed_block</label>
        <link refid="classgraphene_1_1chain_1_1signed__block"/>
        <childnode refid="3256" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3257">
        <label>graphene::chain::block_header</label>
        <link refid="classgraphene_1_1chain_1_1block__header"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3260">
        <label>graphene::chain::signed_block_header</label>
        <link refid="classgraphene_1_1chain_1_1signed__block__header"/>
        <childnode refid="3261" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3263">
        <label>time_point_sec</label>
      </node>
      <node id="3262">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="3261">
        <label>graphene::chain::block_header</label>
        <link refid="classgraphene_1_1chain_1_1block__header"/>
        <childnode refid="3262" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="3263" relation="usage">
          <edgelabel>timestamp</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/block.hpp" line="46" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/block.hpp" bodystart="45" bodyend="57"/>
    <listofallmembers>
      <member refid="classgraphene_1_1chain_1_1signed__block__header_1a4a24bc61df6f524d5038c8e8e204a37b" prot="protected" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>_block_id</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__block__header_1ab5aab016f63b376f7040598dff0c9307" prot="protected" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>_signee</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1abf9982ab6dc7e1a20d006ab7a5642324" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>block_num</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1a8fb1588edbc4ff2e7b5867aac435f984" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>digest</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1ae14913bd512fc9decb34cac18c380bbc" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>extensions</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__block__header_1a35c290ec06916ffda24cb9d725eae76f" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>id</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1ad8cbe66dbf2ac03fc7cfd904330c7c56" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>num_from_id</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1ac1add9bcab9cab798f6f24c94b6b42ff" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>previous</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__block__header_1a58ae9b51b87579db2aabe5c16097e8e1" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>sign</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__block__header_1a50334db58f0594c3dddd55c24fd98187" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>signee</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1a245f55d0853dfcb3ff539b6597d7eecd" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>timestamp</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1a7c2a912e0238df3e45ab3af5366702cb" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>transaction_merkle_root</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__block__header_1ab6ca7fc7bf0e2c291b8baa76a9b1d511" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>validate_signee</name></member>
      <member refid="classgraphene_1_1chain_1_1block__header_1a270e6e6c8ba607ea2ba8ac23c2302c9f" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>witness</name></member>
      <member refid="classgraphene_1_1chain_1_1signed__block__header_1a4280fac9bac0ea22d2fb063efc964674" prot="public" virt="non-virtual"><scope>graphene::chain::signed_block_header</scope><name>witness_signature</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
