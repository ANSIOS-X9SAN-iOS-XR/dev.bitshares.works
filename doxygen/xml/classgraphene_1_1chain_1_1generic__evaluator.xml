<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1generic__evaluator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>graphene::chain::generic_evaluator</compoundname>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; account_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; account_update_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; account_upgrade_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; account_whitelist_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; assert_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_claim_fees_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_claim_pool_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_fund_fee_pool_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_global_settle_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_issue_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_publish_feeds_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_reserve_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_settle_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_update_bitasset_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_update_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_update_feed_producers_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; asset_update_issuer_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; balance_claim_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; bid_collateral_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; blind_transfer_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; call_order_update_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; committee_member_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; committee_member_update_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; committee_member_update_global_parameters_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; custom_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; htlc_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; htlc_extend_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; htlc_redeem_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; limit_order_cancel_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; limit_order_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; override_transfer_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; proposal_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; proposal_delete_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; proposal_update_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; transfer_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; transfer_from_blind_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; transfer_to_blind_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; vesting_balance_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; vesting_balance_withdraw_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; withdraw_permission_claim_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; withdraw_permission_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; withdraw_permission_delete_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; withdraw_permission_update_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; witness_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; witness_update_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; worker_create_evaluator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; DerivedEvaluator &gt;</derivedcompoundref>
    <includes refid="evaluator_8hpp" local="no">evaluator.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1generic__evaluator_1aeced28daa14ff4a07b9eadf14f782b5a" prot="protected" static="no" mutable="no">
        <type>asset</type>
        <definition>asset graphene::chain::generic_evaluator::fee_from_account</definition>
        <argsstring></argsstring>
        <name>fee_from_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="114" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1generic__evaluator_1aa7e2ca176a3ce6690e17536549fb4c5b" prot="protected" static="no" mutable="no">
        <type>share_type</type>
        <definition>share_type graphene::chain::generic_evaluator::core_fee_paid</definition>
        <argsstring></argsstring>
        <name>core_fee_paid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="115" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1generic__evaluator_1a1ad16d69e89d5e9c04299b92e324bf7d" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref> *</type>
        <definition>const account_object* graphene::chain::generic_evaluator::fee_paying_account</definition>
        <argsstring></argsstring>
        <name>fee_paying_account</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="116" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1generic__evaluator_1a9f7422a38474ca4ede2f9bd82ac6cf91" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref> *</type>
        <definition>const account_statistics_object* graphene::chain::generic_evaluator::fee_paying_account_statistics</definition>
        <argsstring></argsstring>
        <name>fee_paying_account_statistics</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="117" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1generic__evaluator_1a07efd4fa9493389424fdaa38e626ebd4" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> *</type>
        <definition>const asset_object* graphene::chain::generic_evaluator::fee_asset</definition>
        <argsstring></argsstring>
        <name>fee_asset</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="118" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1generic__evaluator_1ad602d55adcb7229b91397a514c27a1c7" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1asset__dynamic__data__object" kindref="compound">asset_dynamic_data_object</ref> *</type>
        <definition>const asset_dynamic_data_object* graphene::chain::generic_evaluator::fee_asset_dyn_data</definition>
        <argsstring></argsstring>
        <name>fee_asset_dyn_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="119" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1generic__evaluator_1a7f87a32183ec768a0402913e0e64d881" prot="protected" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1chain_1_1transaction__evaluation__state" kindref="compound">transaction_evaluation_state</ref> *</type>
        <definition>transaction_evaluation_state* graphene::chain::generic_evaluator::trx_state</definition>
        <argsstring></argsstring>
        <name>trx_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="120" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1ad716bd9ef32c10ba2a136cb0d7e24c1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual graphene::chain::generic_evaluator::~generic_evaluator</definition>
        <argsstring>()</argsstring>
        <name>~generic_evaluator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="42" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1adfbfe3f65ee5a2e72865dc8e8c38f83b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int graphene::chain::generic_evaluator::get_type</definition>
        <argsstring>() const =0</argsstring>
        <name>get_type</name>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6">get_type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1ad62bf969f43cfd4900a0f4fdadc2b780" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>operation_result</type>
        <definition>operation_result graphene::chain::generic_evaluator::start_evaluate</definition>
        <argsstring>(transaction_evaluation_state &amp;eval_state, const operation &amp;op, bool apply)</argsstring>
        <name>start_evaluate</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1transaction__evaluation__state" kindref="compound">transaction_evaluation_state</ref> &amp;</type>
          <declname>eval_state</declname>
        </param>
        <param>
          <type>const operation &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>apply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="45" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1abdba7bfbacff8b598c7e284250e0ebbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>operation_result</type>
        <definition>virtual operation_result graphene::chain::generic_evaluator::evaluate</definition>
        <argsstring>(const operation &amp;op)=0</argsstring>
        <name>evaluate</name>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151">evaluate</reimplementedby>
        <param>
          <type>const operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>derived classes should ASSUME that the default validation that is indepenent of chain state should be performed by op.validate() and should not perform these extra checks. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1a904097c372b2a7291340366c0194ad19" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>operation_result</type>
        <definition>virtual operation_result graphene::chain::generic_evaluator::apply</definition>
        <argsstring>(const operation &amp;op)=0</argsstring>
        <name>apply</name>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c">apply</reimplementedby>
        <param>
          <type>const operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::chain::generic_evaluator::pay_fee</definition>
        <argsstring>()</argsstring>
        <name>pay_fee</name>
        <reimplementedby refid="classgraphene_1_1chain_1_1transfer__to__blind__evaluator_1a8fb4e46e3ead3f434c109c2756ebe077">pay_fee</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1asset__create__evaluator_1a224f112d77492205c8966a847f5016b7">pay_fee</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1transfer__from__blind__evaluator_1a616dce9066853f65e721cef8cf78879b">pay_fee</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1limit__order__create__evaluator_1a5f9fdc83237577fd61d4bec74d850549">pay_fee</reimplementedby>
        <reimplementedby refid="classgraphene_1_1chain_1_1blind__transfer__evaluator_1a32d8100705b651906b284f7eadaec37b">pay_fee</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Routes the fee to where it needs to go. The default implementation routes the fee to the <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref> of the fee_paying_account.</para><para>Before <ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" kindref="member">pay_fee()</ref> is called, the fee is computed by <ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a90ff8169dbff062373ea5fdc98e6c484" kindref="member">prepare_fee()</ref> and has been moved out of the fee_paying_account and (if paid in a non-CORE asset) converted by the asset&apos;s fee pool.</para><para>Therefore, when <ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" kindref="member">pay_fee()</ref> is called, the fee only exists in this-&gt;core_fee_paid. So <ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" kindref="member">pay_fee()</ref> need only increment the receiving balance.</para><para>The default implementation simply calls account_statistics_object-&gt;<ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" kindref="member">pay_fee()</ref> to increment pending_fees or pending_vested_fees. </para>        </detaileddescription>
        <inbodydescription>
<para>TODO: <ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a9f906a5670b56865a2e9b4029a67ba81" kindref="member">db()</ref>.pay_fee( account_id, core_fee ); </para>        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="69" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1a9f906a5670b56865a2e9b4029a67ba81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
        <definition>database &amp; graphene::chain::generic_evaluator::db</definition>
        <argsstring>() const</argsstring>
        <name>db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="71" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1a90ff8169dbff062373ea5fdc98e6c484" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::generic_evaluator::prepare_fee</definition>
        <argsstring>(account_id_type account_id, asset fee)</argsstring>
        <name>prepare_fee</name>
        <param>
          <type>account_id_type</type>
          <declname>account_id</declname>
        </param>
        <param>
          <type>asset</type>
          <declname>fee</declname>
        </param>
        <briefdescription>
<para>Fetch objects relevant to fee payer and set pointer members. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Account which is paying the fee </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fee</parametername>
</parameternamelist>
<parameterdescription>
<para>The fee being paid. May be in assets other than core.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method verifies that the fee is valid and sets the object pointer members and the fee fields. It should be called during do_evaluate.</para><para>In particular, core_fee_paid field is set by <ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a90ff8169dbff062373ea5fdc98e6c484" kindref="member">prepare_fee()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="85" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="53" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1a65bd5bfc5112f84b364ec43c1c17a699" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::chain::generic_evaluator::convert_fee</definition>
        <argsstring>()</argsstring>
        <name>convert_fee</name>
        <reimplementedby refid="classgraphene_1_1chain_1_1limit__order__create__evaluator_1a171fc9feff35d610dc0669c02c00db2c">convert_fee</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert the fee into BTS through the exchange pool.</para><para>Reads core_fee_paid field for how much CORE is deducted from the exchange pool, and fee_from_account for how much USD is added to the pool.</para><para>Since <ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a90ff8169dbff062373ea5fdc98e6c484" kindref="member">prepare_fee()</ref> does the validation checks ensuring the account and fee pool have sufficient balance and the exchange rate is correct, those validation checks are not replicated here.</para><para>Rather than returning a value, this method fills in core_fee_paid field. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="99" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1ab6ad5b670242e3dbcde741a5cc9ddad8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>object_id_type</type>
        <definition>object_id_type graphene::chain::generic_evaluator::get_relative_id</definition>
        <argsstring>(object_id_type rel_id) const</argsstring>
        <name>get_relative_id</name>
        <param>
          <type>object_id_type</type>
          <declname>rel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1a6ef4f7c04d0d0289cf95a9d18d5142cb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::generic_evaluator::pay_fba_fee</definition>
        <argsstring>(uint64_t fba_id)</argsstring>
        <name>pay_fba_fee</name>
        <param>
          <type>uint64_t</type>
          <declname>fba_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" kindref="member">pay_fee()</ref> for FBA subclass should simply call this method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="106" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="107" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1ab9da3acadc46e1d4a87ea91457de9a91" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>share_type</type>
        <definition>share_type graphene::chain::generic_evaluator::calculate_fee_for_operation</definition>
        <argsstring>(const operation &amp;op) const</argsstring>
        <name>calculate_fee_for_operation</name>
        <param>
          <type>const operation &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="111" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1generic__evaluator_1a945e2f8e31ad68bd802618fff3a3d5d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::generic_evaluator::db_adjust_balance</definition>
        <argsstring>(const account_id_type &amp;fee_payer, asset fee_from_account)</argsstring>
        <name>db_adjust_balance</name>
        <param>
          <type>const account_id_type &amp;</type>
          <declname>fee_payer</declname>
        </param>
        <param>
          <type>asset</type>
          <declname>fee_from_account</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="112" column="1" bodyfile="libraries/chain/evaluator.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="899">
        <label>graphene::chain::worker_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1worker__create__evaluator"/>
        <childnode refid="898" relation="public-inheritance">
        </childnode>
      </node>
      <node id="872">
        <label>graphene::chain::evaluator&lt; proposal_delete_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="814">
        <label>graphene::chain::evaluator&lt; assert_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="870">
        <label>graphene::chain::evaluator&lt; proposal_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="838">
        <label>graphene::chain::evaluator&lt; asset_update_feed_producers_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="835">
        <label>graphene::chain::asset_update_bitasset_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__update__bitasset__evaluator"/>
        <childnode refid="834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="876">
        <label>graphene::chain::evaluator&lt; transfer_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="813">
        <label>graphene::chain::account_whitelist_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1account__whitelist__evaluator"/>
        <childnode refid="812" relation="public-inheritance">
        </childnode>
      </node>
      <node id="878">
        <label>graphene::chain::evaluator&lt; transfer_from_blind_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="844">
        <label>graphene::chain::evaluator&lt; bid_collateral_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="863">
        <label>graphene::chain::htlc_redeem_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1htlc__redeem__evaluator"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="807">
        <label>graphene::chain::account_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1account__create__evaluator"/>
        <childnode refid="806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="826">
        <label>graphene::chain::evaluator&lt; asset_issue_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="864">
        <label>graphene::chain::evaluator&lt; limit_order_cancel_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="806">
        <label>graphene::chain::evaluator&lt; account_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="816">
        <label>graphene::chain::evaluator&lt; asset_claim_fees_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="877">
        <label>graphene::chain::transfer_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1transfer__evaluator"/>
        <childnode refid="876" relation="public-inheritance">
        </childnode>
      </node>
      <node id="884">
        <label>graphene::chain::evaluator&lt; vesting_balance_withdraw_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="859">
        <label>graphene::chain::htlc_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1htlc__create__evaluator"/>
        <childnode refid="858" relation="public-inheritance">
        </childnode>
      </node>
      <node id="881">
        <label>graphene::chain::transfer_to_blind_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1transfer__to__blind__evaluator"/>
        <childnode refid="880" relation="public-inheritance">
        </childnode>
      </node>
      <node id="809">
        <label>graphene::chain::account_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1account__update__evaluator"/>
        <childnode refid="808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="895">
        <label>graphene::chain::witness_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1witness__create__evaluator"/>
        <childnode refid="894" relation="public-inheritance">
        </childnode>
      </node>
      <node id="839">
        <label>graphene::chain::asset_update_feed_producers_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__update__feed__producers__evaluator"/>
        <childnode refid="838" relation="public-inheritance">
        </childnode>
      </node>
      <node id="893">
        <label>graphene::chain::withdraw_permission_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1withdraw__permission__update__evaluator"/>
        <childnode refid="892" relation="public-inheritance">
        </childnode>
      </node>
      <node id="840">
        <label>graphene::chain::evaluator&lt; asset_update_issuer_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="817">
        <label>graphene::chain::asset_claim_fees_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__claim__fees__evaluator"/>
        <childnode refid="816" relation="public-inheritance">
        </childnode>
      </node>
      <node id="833">
        <label>graphene::chain::asset_settle_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__settle__evaluator"/>
        <childnode refid="832" relation="public-inheritance">
        </childnode>
      </node>
      <node id="824">
        <label>graphene::chain::evaluator&lt; asset_global_settle_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="849">
        <label>graphene::chain::call_order_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1call__order__update__evaluator"/>
        <childnode refid="848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="885">
        <label>graphene::chain::vesting_balance_withdraw_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1vesting__balance__withdraw__evaluator"/>
        <childnode refid="884" relation="public-inheritance">
        </childnode>
      </node>
      <node id="836">
        <label>graphene::chain::evaluator&lt; asset_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="818">
        <label>graphene::chain::evaluator&lt; asset_claim_pool_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="830">
        <label>graphene::chain::evaluator&lt; asset_reserve_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="850">
        <label>graphene::chain::evaluator&lt; committee_member_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="880">
        <label>graphene::chain::evaluator&lt; transfer_to_blind_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="886">
        <label>graphene::chain::evaluator&lt; withdraw_permission_claim_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="862">
        <label>graphene::chain::evaluator&lt; htlc_redeem_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="811">
        <label>graphene::chain::account_upgrade_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1account__upgrade__evaluator"/>
        <childnode refid="810" relation="public-inheritance">
        </childnode>
      </node>
      <node id="890">
        <label>graphene::chain::evaluator&lt; withdraw_permission_delete_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="871">
        <label>graphene::chain::proposal_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1proposal__create__evaluator"/>
        <childnode refid="870" relation="public-inheritance">
        </childnode>
      </node>
      <node id="847">
        <label>graphene::chain::blind_transfer_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1blind__transfer__evaluator"/>
        <childnode refid="846" relation="public-inheritance">
        </childnode>
      </node>
      <node id="822">
        <label>graphene::chain::evaluator&lt; asset_fund_fee_pool_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="819">
        <label>graphene::chain::asset_claim_pool_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__claim__pool__evaluator"/>
        <childnode refid="818" relation="public-inheritance">
        </childnode>
      </node>
      <node id="888">
        <label>graphene::chain::evaluator&lt; withdraw_permission_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="887">
        <label>graphene::chain::withdraw_permission_claim_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1withdraw__permission__claim__evaluator"/>
        <childnode refid="886" relation="public-inheritance">
        </childnode>
      </node>
      <node id="900">
        <label>graphene::chain::evaluator&lt; DerivedEvaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="874">
        <label>graphene::chain::evaluator&lt; proposal_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="854">
        <label>graphene::chain::evaluator&lt; committee_member_update_global_parameters_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="831">
        <label>graphene::chain::asset_reserve_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__reserve__evaluator"/>
        <childnode refid="830" relation="public-inheritance">
        </childnode>
      </node>
      <node id="805">
        <label>graphene::chain::generic_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1generic__evaluator"/>
      </node>
      <node id="812">
        <label>graphene::chain::evaluator&lt; account_whitelist_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="867">
        <label>graphene::chain::limit_order_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1limit__order__create__evaluator"/>
        <childnode refid="866" relation="public-inheritance">
        </childnode>
      </node>
      <node id="894">
        <label>graphene::chain::evaluator&lt; witness_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="853">
        <label>graphene::chain::committee_member_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1committee__member__update__evaluator"/>
        <childnode refid="852" relation="public-inheritance">
        </childnode>
      </node>
      <node id="896">
        <label>graphene::chain::evaluator&lt; witness_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="834">
        <label>graphene::chain::evaluator&lt; asset_update_bitasset_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="808">
        <label>graphene::chain::evaluator&lt; account_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="841">
        <label>graphene::chain::asset_update_issuer_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__update__issuer__evaluator"/>
        <childnode refid="840" relation="public-inheritance">
        </childnode>
      </node>
      <node id="897">
        <label>graphene::chain::witness_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1witness__update__evaluator"/>
        <childnode refid="896" relation="public-inheritance">
        </childnode>
      </node>
      <node id="825">
        <label>graphene::chain::asset_global_settle_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__global__settle__evaluator"/>
        <childnode refid="824" relation="public-inheritance">
        </childnode>
      </node>
      <node id="815">
        <label>graphene::chain::assert_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1assert__evaluator"/>
        <childnode refid="814" relation="public-inheritance">
        </childnode>
      </node>
      <node id="858">
        <label>graphene::chain::evaluator&lt; htlc_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="846">
        <label>graphene::chain::evaluator&lt; blind_transfer_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="856">
        <label>graphene::chain::evaluator&lt; custom_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="851">
        <label>graphene::chain::committee_member_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1committee__member__create__evaluator"/>
        <childnode refid="850" relation="public-inheritance">
        </childnode>
      </node>
      <node id="865">
        <label>graphene::chain::limit_order_cancel_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1limit__order__cancel__evaluator"/>
        <childnode refid="864" relation="public-inheritance">
        </childnode>
      </node>
      <node id="891">
        <label>graphene::chain::withdraw_permission_delete_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1withdraw__permission__delete__evaluator"/>
        <childnode refid="890" relation="public-inheritance">
        </childnode>
      </node>
      <node id="852">
        <label>graphene::chain::evaluator&lt; committee_member_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="823">
        <label>graphene::chain::asset_fund_fee_pool_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__fund__fee__pool__evaluator"/>
        <childnode refid="822" relation="public-inheritance">
        </childnode>
      </node>
      <node id="892">
        <label>graphene::chain::evaluator&lt; withdraw_permission_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="879">
        <label>graphene::chain::transfer_from_blind_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1transfer__from__blind__evaluator"/>
        <childnode refid="878" relation="public-inheritance">
        </childnode>
      </node>
      <node id="857">
        <label>graphene::chain::custom_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1custom__evaluator"/>
        <childnode refid="856" relation="public-inheritance">
        </childnode>
      </node>
      <node id="868">
        <label>graphene::chain::evaluator&lt; override_transfer_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="860">
        <label>graphene::chain::evaluator&lt; htlc_extend_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="810">
        <label>graphene::chain::evaluator&lt; account_upgrade_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="829">
        <label>graphene::chain::asset_publish_feeds_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__publish__feeds__evaluator"/>
        <childnode refid="828" relation="public-inheritance">
        </childnode>
      </node>
      <node id="837">
        <label>graphene::chain::asset_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__update__evaluator"/>
        <childnode refid="836" relation="public-inheritance">
        </childnode>
      </node>
      <node id="866">
        <label>graphene::chain::evaluator&lt; limit_order_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="861">
        <label>graphene::chain::htlc_extend_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1htlc__extend__evaluator"/>
        <childnode refid="860" relation="public-inheritance">
        </childnode>
      </node>
      <node id="845">
        <label>graphene::chain::bid_collateral_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1bid__collateral__evaluator"/>
        <childnode refid="844" relation="public-inheritance">
        </childnode>
      </node>
      <node id="820">
        <label>graphene::chain::evaluator&lt; asset_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="889">
        <label>graphene::chain::withdraw_permission_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1withdraw__permission__create__evaluator"/>
        <childnode refid="888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="875">
        <label>graphene::chain::proposal_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1proposal__update__evaluator"/>
        <childnode refid="874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="855">
        <label>graphene::chain::committee_member_update_global_parameters_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1committee__member__update__global__parameters__evaluator"/>
        <childnode refid="854" relation="public-inheritance">
        </childnode>
      </node>
      <node id="883">
        <label>graphene::chain::vesting_balance_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1vesting__balance__create__evaluator"/>
        <childnode refid="882" relation="public-inheritance">
        </childnode>
      </node>
      <node id="821">
        <label>graphene::chain::asset_create_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__create__evaluator"/>
        <childnode refid="820" relation="public-inheritance">
        </childnode>
      </node>
      <node id="827">
        <label>graphene::chain::asset_issue_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1asset__issue__evaluator"/>
        <childnode refid="826" relation="public-inheritance">
        </childnode>
      </node>
      <node id="898">
        <label>graphene::chain::evaluator&lt; worker_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="848">
        <label>graphene::chain::evaluator&lt; call_order_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="843">
        <label>graphene::chain::balance_claim_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1balance__claim__evaluator"/>
        <childnode refid="842" relation="public-inheritance">
        </childnode>
      </node>
      <node id="869">
        <label>graphene::chain::override_transfer_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1override__transfer__evaluator"/>
        <childnode refid="868" relation="public-inheritance">
        </childnode>
      </node>
      <node id="842">
        <label>graphene::chain::evaluator&lt; balance_claim_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="832">
        <label>graphene::chain::evaluator&lt; asset_settle_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="882">
        <label>graphene::chain::evaluator&lt; vesting_balance_create_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="828">
        <label>graphene::chain::evaluator&lt; asset_publish_feeds_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="873">
        <label>graphene::chain::proposal_delete_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1proposal__delete__evaluator"/>
        <childnode refid="872" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="903">
        <label>graphene::db::abstract_object&lt; asset_object &gt;</label>
      </node>
      <node id="907">
        <label>db::object_database</label>
      </node>
      <node id="904">
        <label>string</label>
      </node>
      <node id="913">
        <label>graphene::db::abstract_object&lt; asset_dynamic_data_object &gt;</label>
      </node>
      <node id="914">
        <label>graphene::chain::account_object</label>
        <link refid="classgraphene_1_1chain_1_1account__object"/>
        <childnode refid="915" relation="public-inheritance">
        </childnode>
        <childnode refid="904" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="916" relation="usage">
          <edgelabel>whitelisting_accounts</edgelabel>
          <edgelabel>blacklisting_accounts</edgelabel>
        </childnode>
      </node>
      <node id="915">
        <label>graphene::db::abstract_object&lt; account_object &gt;</label>
      </node>
      <node id="909">
        <label>signed_transaction</label>
      </node>
      <node id="916">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="901">
        <label>graphene::chain::generic_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1generic__evaluator"/>
        <childnode refid="902" relation="usage">
          <edgelabel>fee_asset</edgelabel>
        </childnode>
        <childnode refid="905" relation="usage">
          <edgelabel>trx_state</edgelabel>
        </childnode>
        <childnode refid="910" relation="usage">
          <edgelabel>fee_paying_account_statistics</edgelabel>
        </childnode>
        <childnode refid="912" relation="usage">
          <edgelabel>fee_asset_dyn_data</edgelabel>
        </childnode>
        <childnode refid="914" relation="usage">
          <edgelabel>fee_paying_account</edgelabel>
        </childnode>
      </node>
      <node id="908">
        <label>vector&lt; operation_result &gt;</label>
      </node>
      <node id="902">
        <label>graphene::chain::asset_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__object"/>
        <childnode refid="903" relation="public-inheritance">
        </childnode>
        <childnode refid="904" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
      <node id="906">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="907" relation="public-inheritance">
        </childnode>
      </node>
      <node id="905">
        <label>graphene::chain::transaction_evaluation_state</label>
        <link refid="classgraphene_1_1chain_1_1transaction__evaluation__state"/>
        <childnode refid="906" relation="usage">
          <edgelabel>_db</edgelabel>
        </childnode>
        <childnode refid="908" relation="usage">
          <edgelabel>operation_results</edgelabel>
        </childnode>
        <childnode refid="909" relation="usage">
          <edgelabel>_trx</edgelabel>
        </childnode>
      </node>
      <node id="910">
        <label>graphene::chain::account_statistics_object</label>
        <link refid="classgraphene_1_1chain_1_1account__statistics__object"/>
        <childnode refid="911" relation="public-inheritance">
        </childnode>
        <childnode refid="904" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="912">
        <label>graphene::chain::asset_dynamic_data_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__dynamic__data__object"/>
        <childnode refid="913" relation="public-inheritance">
        </childnode>
      </node>
      <node id="911">
        <label>graphene::db::abstract_object&lt; account_statistics_object &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="40" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="39" bodyend="121"/>
    <listofallmembers>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a904097c372b2a7291340366c0194ad19" prot="public" virt="pure-virtual"><scope>graphene::chain::generic_evaluator</scope><name>apply</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ab9da3acadc46e1d4a87ea91457de9a91" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>calculate_fee_for_operation</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a65bd5bfc5112f84b364ec43c1c17a699" prot="protected" virt="virtual"><scope>graphene::chain::generic_evaluator</scope><name>convert_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1aa7e2ca176a3ce6690e17536549fb4c5b" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>core_fee_paid</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a9f906a5670b56865a2e9b4029a67ba81" prot="public" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>db</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a945e2f8e31ad68bd802618fff3a3d5d3" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>db_adjust_balance</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1abdba7bfbacff8b598c7e284250e0ebbe" prot="public" virt="pure-virtual"><scope>graphene::chain::generic_evaluator</scope><name>evaluate</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a07efd4fa9493389424fdaa38e626ebd4" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>fee_asset</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad602d55adcb7229b91397a514c27a1c7" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>fee_asset_dyn_data</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1aeced28daa14ff4a07b9eadf14f782b5a" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>fee_from_account</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a1ad16d69e89d5e9c04299b92e324bf7d" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>fee_paying_account</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a9f7422a38474ca4ede2f9bd82ac6cf91" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>fee_paying_account_statistics</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ab6ad5b670242e3dbcde741a5cc9ddad8" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>get_relative_id</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1adfbfe3f65ee5a2e72865dc8e8c38f83b" prot="public" virt="pure-virtual"><scope>graphene::chain::generic_evaluator</scope><name>get_type</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a6ef4f7c04d0d0289cf95a9d18d5142cb" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>pay_fba_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" prot="public" virt="virtual"><scope>graphene::chain::generic_evaluator</scope><name>pay_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a90ff8169dbff062373ea5fdc98e6c484" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>prepare_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad62bf969f43cfd4900a0f4fdadc2b780" prot="public" virt="virtual"><scope>graphene::chain::generic_evaluator</scope><name>start_evaluate</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a7f87a32183ec768a0402913e0e64d881" prot="protected" virt="non-virtual"><scope>graphene::chain::generic_evaluator</scope><name>trx_state</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad716bd9ef32c10ba2a136cb0d7e24c1f" prot="public" virt="virtual"><scope>graphene::chain::generic_evaluator</scope><name>~generic_evaluator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
