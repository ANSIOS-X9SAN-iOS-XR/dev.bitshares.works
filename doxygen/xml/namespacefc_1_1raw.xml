<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc_1_1raw" kind="namespace" language="C++">
    <compoundname>fc::raw</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1raw_1a0459ae1dab930c32a8d16dbf24d4a342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;stream, const graphene::chain::extension&lt; T &gt; &amp;value, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extension" kindref="compound">graphene::chain::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval>FC_PACK_MAX_DEPTH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/ext.hpp" line="207" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/ext.hpp" bodystart="207" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aea32f12afa168b804f56efd15e0f23fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, graphene::chain::extension&lt; T &gt; &amp;value, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1extension" kindref="compound">graphene::chain::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval>FC_PACK_MAX_DEPTH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/ext.hpp" line="220" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/ext.hpp" bodystart="220" bodyend="228"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/include/graphene/chain/protocol/ext.hpp" line="204" column="1"/>
  </compounddef>
</doxygen>
