<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc_1_1raw" kind="namespace" language="C++">
    <compoundname>fc::raw</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1raw_1ae203fcff2601478bcfb3d241c9a9a54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;stream, const graphene::protocol::extension&lt; T &gt; &amp;value, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">graphene::protocol::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval>FC_PACK_MAX_DEPTH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/ext.hpp" line="209" column="1" bodyfile="libraries/protocol/include/graphene/protocol/ext.hpp" bodystart="209" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a0b0b7520308593827677d1e430c5fdd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, graphene::protocol::extension&lt; T &gt; &amp;value, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">graphene::protocol::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval>FC_PACK_MAX_DEPTH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/ext.hpp" line="222" column="1" bodyfile="libraries/protocol/include/graphene/protocol/ext.hpp" bodystart="222" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a32a199697045525fbca469dfeeb161c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; size_t &gt; &amp;s, const graphene::protocol::pts_address &amp;tx, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>datastream&lt; size_t &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1pts__address" kindref="compound">graphene::protocol::pts_address</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a0661099108a86db1bbbbe87d3b4fcf23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; char *&gt; &amp;s, const graphene::protocol::pts_address &amp;tx, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>datastream&lt; char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1pts__address" kindref="compound">graphene::protocol::pts_address</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a9f26174b9936275643d584dc50f0f0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::unpack</definition>
        <argsstring>(datastream&lt; const char *&gt; &amp;s, graphene::protocol::pts_address &amp;tx, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>datastream&lt; const char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1pts__address" kindref="compound">graphene::protocol::pts_address</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1abc75bf53849c3eca153e7b43f7ef7e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; size_t &gt; &amp;s, const graphene::protocol::public_key_type &amp;tx, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>datastream&lt; size_t &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">graphene::protocol::public_key_type</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval>FC_PACK_MAX_DEPTH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/types.cpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a026c54b0882f93c9f9b6e3a8e0e69fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; char *&gt; &amp;s, const graphene::protocol::public_key_type &amp;tx, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>datastream&lt; char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">graphene::protocol::public_key_type</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval>FC_PACK_MAX_DEPTH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/types.cpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a844eae7e15c9b4a41f93cba66c73d548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::unpack</definition>
        <argsstring>(datastream&lt; const char *&gt; &amp;s, graphene::protocol::public_key_type &amp;tx, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>datastream&lt; const char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">graphene::protocol::public_key_type</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval>FC_PACK_MAX_DEPTH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/types.cpp" line="120" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/protocol/include/graphene/protocol/ext.hpp" line="206" column="1"/>
  </compounddef>
</doxygen>
