<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1asset__update__bitasset__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::asset_update_bitasset_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1_1fee__parameters__type" prot="public">graphene::chain::asset_update_bitasset_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a956ffa4887ce88d9962a54e733c1b73b" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::asset_update_bitasset_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="318" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ab65f19393dd396c153a110a0191f0879" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_update_bitasset_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="319" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a7d472018d5f545895a1230b8ff2fcf95" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
        <definition>asset_id_type graphene::chain::asset_update_bitasset_operation::asset_to_update</definition>
        <argsstring></argsstring>
        <name>asset_to_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="320" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1af7cf85893d7a15cd5e53ae8d15ada915" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1bitasset__options" kindref="compound">bitasset_options</ref></type>
        <definition>bitasset_options graphene::chain::asset_update_bitasset_operation::new_options</definition>
        <argsstring></argsstring>
        <name>new_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="322" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ae3220075cac5991f571d65262a93c931" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gae0096750377f6e9d61dba5765284de99" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::chain::asset_update_bitasset_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="323" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ad8813cc7c1782d501e8e0de53e9b89c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::asset_update_bitasset_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="325" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1afe86db37ac101663e9752fea9d977ad6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::asset_update_bitasset_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="326" column="1" bodyfile="libraries/chain/protocol/asset_ops.cpp" bodystart="189" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Update options specific to BitAssets</para><para>BitAssets have some options which are not relevant to other asset types. This operation is used to update those options an an existing BitAsset. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ab65f19393dd396c153a110a0191f0879" kindref="member">issuer</ref> MUST be an existing account and MUST match <ref refid="classgraphene_1_1chain_1_1asset__object_1ad5274b71ad420b57da53c3ef80b95577" kindref="member">asset_object::issuer</ref> on <ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a7d472018d5f545895a1230b8ff2fcf95" kindref="member">asset_to_update</ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a7d472018d5f545895a1230b8ff2fcf95" kindref="member">asset_to_update</ref> MUST be a BitAsset, i.e. <ref refid="classgraphene_1_1chain_1_1asset__object_1a5cd681e6cc216f87d99f60c1de63eba8" kindref="member">asset_object::is_market_issued()</ref> returns true </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a956ffa4887ce88d9962a54e733c1b73b" kindref="member">fee</ref> MUST be nonnegative, and <ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ab65f19393dd396c153a110a0191f0879" kindref="member">issuer</ref> MUST have a sufficient balance to pay it </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1af7cf85893d7a15cd5e53ae8d15ada915" kindref="member">new_options</ref> SHALL be internally consistent, as verified by <ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1afe86db37ac101663e9752fea9d977ad6" kindref="member">validate()</ref> </para></simplesect>
<simplesect kind="post"><para><ref refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a7d472018d5f545895a1230b8ff2fcf95" kindref="member">asset_to_update</ref> will have BitAsset-specific options matching those of new_options </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1004">
        <label>graphene::chain::asset_update_bitasset_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation"/>
        <childnode refid="1005" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1005">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1011">
        <label>graphene::chain::bitasset_options</label>
        <link refid="structgraphene_1_1chain_1_1bitasset__options"/>
        <childnode refid="1008" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
      </node>
      <node id="1008">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="1006">
        <label>graphene::chain::asset_update_bitasset_operation</label>
        <link refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation"/>
        <childnode refid="1007" relation="public-inheritance">
        </childnode>
        <childnode refid="1008" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1009" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="1011" relation="usage">
          <edgelabel>new_options</edgelabel>
        </childnode>
      </node>
      <node id="1007">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="1009">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="1010" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1010">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" line="315" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/asset_ops.hpp" bodystart="314" bodyend="327"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a7d472018d5f545895a1230b8ff2fcf95" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>asset_to_update</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ae3220075cac5991f571d65262a93c931" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1a956ffa4887ce88d9962a54e733c1b73b" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ad8813cc7c1782d501e8e0de53e9b89c7" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1ab65f19393dd396c153a110a0191f0879" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1af7cf85893d7a15cd5e53ae8d15ada915" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>new_options</name></member>
      <member refid="structgraphene_1_1chain_1_1asset__update__bitasset__operation_1afe86db37ac101663e9752fea9d977ad6" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aba2bfdabb6d782e8b7843a363e85c69e" prot="public" virt="non-virtual"><scope>graphene::chain::asset_update_bitasset_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
