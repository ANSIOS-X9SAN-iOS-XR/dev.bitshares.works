<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="utf8__test_8cpp" kind="file" language="C++">
    <compoundname>utf8_test.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="utf8_8hpp" local="no">fc/utf8.hpp</includes>
    <incdepgraph>
      <node id="39708">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="39709">
        <label>fc/utf8.hpp</label>
        <link refid="utf8_8hpp"/>
        <childnode refid="39710" relation="include">
        </childnode>
      </node>
      <node id="39710">
        <label>string</label>
      </node>
      <node id="39707">
        <label>libraries/fc/tests/utf8_test.cpp</label>
        <link refid="utf8__test_8cpp"/>
        <childnode refid="39708" relation="include">
        </childnode>
        <childnode refid="39709" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="utf8__test_8cpp_1a368cef6b6f1cd05fbed27ac7fb4015ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_1</definition>
        <argsstring>(&quot;\5\1\1\1\1\1\1&quot;)</argsstring>
        <name>TEST_INVALID_1</name>
        <param>
          <type>&quot;\\\\</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a44b61693a9212da54191621f24ec4d92" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_2</definition>
        <argsstring>(&quot;\1\1\1\1\1\1&quot;)</argsstring>
        <name>TEST_INVALID_2</name>
        <param>
          <type>&quot;\\\&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a4979f63a20c42b4ff0ed901fbadaf162" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_VALID_1</definition>
        <argsstring>(&quot;\1\1\1\1\1&quot;)</argsstring>
        <name>TEST_VALID_1</name>
        <param>
          <type>&quot;\\\</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a70735f9046b69944ffc0cbb705cfa782" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_VALID_2</definition>
        <argsstring>(&quot;\1\1\1\1&quot;)</argsstring>
        <name>TEST_VALID_2</name>
        <param>
          <type>&quot;\\&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a881b7f440924560fd6e562932edb9eb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_3</definition>
        <argsstring>(&quot;\1\1\1&quot;)</argsstring>
        <name>TEST_INVALID_3</name>
        <param>
          <type>&quot;\\</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a17afb751665134f53120f277f909f43b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_4</definition>
        <argsstring>(&quot;\1\1\1\1&quot;)</argsstring>
        <name>TEST_INVALID_4</name>
        <param>
          <type>&quot;\\&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1aeab2ce1a18ff3f18664a832ff89fc4be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_5</definition>
        <argsstring>(&quot;\1\1&quot;)</argsstring>
        <name>TEST_INVALID_5</name>
        <param>
          <type>&quot;\&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a10c7c342136e4f763334671d45278290" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_6</definition>
        <argsstring>(&quot;\1\1\1&quot;)</argsstring>
        <name>TEST_INVALID_6</name>
        <param>
          <type>&quot;\\</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1aa5a8450ec020e918b6eaa22ff1a64f68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_7</definition>
        <argsstring>(&quot;\1&quot;)</argsstring>
        <name>TEST_INVALID_7</name>
        <param>
          <type>&quot;\</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a152a9578951eb68ec02c3f900c408b71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_8</definition>
        <argsstring>(&quot;\1\1&quot;)</argsstring>
        <name>TEST_INVALID_8</name>
        <param>
          <type>&quot;\&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a07ef9edabd33d282fca731270c33afe1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_9</definition>
        <argsstring>(&quot;\5\4\0&quot;)</argsstring>
        <name>TEST_INVALID_9</name>
        <param>
          <type>&quot;\\</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a8969e3719a29e724518242d0cd6e6878" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_10</definition>
        <argsstring>(&quot;\5\4\0\1&quot;)</argsstring>
        <name>TEST_INVALID_10</name>
        <param>
          <type>&quot;\\&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1ab5e2b10a0018f033da4dee356361786e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_11</definition>
        <argsstring>(&quot;\0\4\0&quot;)</argsstring>
        <name>TEST_INVALID_11</name>
        <param>
          <type>&quot;\\</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1ac50c7f29be4a4d1e9334e64adbd6f500" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST_INVALID_12</definition>
        <argsstring>(&quot;\0\4\0\1&quot;)</argsstring>
        <name>TEST_INVALID_12</name>
        <param>
          <type>&quot;\\&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utf8__test_8cpp_1a058dd3cd9a9ca5342028711a12431d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(utf8_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>utf8_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/utf8_test.cpp" line="24" column="1" bodyfile="libraries/fc/tests/utf8_test.cpp" bodystart="24" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/utf8_test.cpp"/>
  </compounddef>
</doxygen>
