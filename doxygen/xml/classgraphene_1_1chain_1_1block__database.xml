<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgraphene_1_1chain_1_1block__database" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::block_database</compoundname>
    <includes refid="block__database_8hpp" local="no">block_database.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1block__database_1ad481561fc0c16041606d5fb9f83ccea0" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path graphene::chain::block_database::_index_filename</definition>
        <argsstring></argsstring>
        <name>_index_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="55" column="1" bodyfile="libraries/chain/include/graphene/chain/block_database.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1block__database_1a124fbd1a9b9cf397cc5876ef92c0aac4" prot="private" static="no" mutable="yes">
        <type>std::fstream</type>
        <definition>std::fstream graphene::chain::block_database::_blocks</definition>
        <argsstring></argsstring>
        <name>_blocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="56" column="1" bodyfile="libraries/chain/include/graphene/chain/block_database.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1block__database_1ade0175210ec50ec08ae26ce37e29d2dc" prot="private" static="no" mutable="yes">
        <type>std::fstream</type>
        <definition>std::fstream graphene::chain::block_database::_block_num_to_pos</definition>
        <argsstring></argsstring>
        <name>_block_num_to_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="57" column="1" bodyfile="libraries/chain/include/graphene/chain/block_database.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1aed048c18ca30b52e49a4af776f02fa75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::block_database::open</definition>
        <argsstring>(const fc::path &amp;dbdir)</argsstring>
        <name>open</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>dbdir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="37" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="46" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1ae271510939794f957406e791ceef50d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::block_database::is_open</definition>
        <argsstring>() const </argsstring>
        <name>is_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="38" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1ae0e519fadc9ef4ddc156e23fa8bc97ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::block_database::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="39" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a0d5a09ed71172b6ac21dc94171293371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::block_database::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="40" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a5fa9a2b7800f9feb4e3793810d63d1ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::block_database::store</definition>
        <argsstring>(const block_id_type &amp;id, const signed_block &amp;b)</argsstring>
        <name>store</name>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1protocol_1_1signed__block" kindref="compound">signed_block</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="42" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="82" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1ab2a62854a2c2634575fc91ce9092ebba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::block_database::remove</definition>
        <argsstring>(const block_id_type &amp;id)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="43" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="101" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a4140021d03baead2922c71c2e45c12bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::block_database::contains</definition>
        <argsstring>(const block_id_type &amp;id) const </argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="45" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="120" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a56e589ae0ce413969c4622e94d0ae9b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref></type>
        <definition>block_id_type graphene::chain::block_database::fetch_block_id</definition>
        <argsstring>(uint32_t block_num) const </argsstring>
        <name>fetch_block_id</name>
        <param>
          <type>uint32_t</type>
          <declname>block_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="46" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="136" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a45ba385eb23bf250ed5231f261e7cab5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="classgraphene_1_1protocol_1_1signed__block" kindref="compound">signed_block</ref> &gt;</type>
        <definition>optional&lt; signed_block &gt; graphene::chain::block_database::fetch_optional</definition>
        <argsstring>(const block_id_type &amp;id) const </argsstring>
        <name>fetch_optional</name>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="47" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="152" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1ad04bb86b70233641c5d69d5c4915c4be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="classgraphene_1_1protocol_1_1signed__block" kindref="compound">signed_block</ref> &gt;</type>
        <definition>optional&lt; signed_block &gt; graphene::chain::block_database::fetch_by_number</definition>
        <argsstring>(uint32_t block_num) const </argsstring>
        <name>fetch_by_number</name>
        <param>
          <type>uint32_t</type>
          <declname>block_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="48" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="184" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a704499f5d23b5b20a0ab7f03fc5da1a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="classgraphene_1_1protocol_1_1signed__block" kindref="compound">signed_block</ref> &gt;</type>
        <definition>optional&lt; signed_block &gt; graphene::chain::block_database::last</definition>
        <argsstring>() const </argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="49" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="264" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a0a3997e84728c2f609467d5a2dba58b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> &gt;</type>
        <definition>optional&lt; block_id_type &gt; graphene::chain::block_database::last_id</definition>
        <argsstring>() const </argsstring>
        <name>last_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="50" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="271" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1a783a6766116d20956a2220dca64b4399" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t graphene::chain::block_database::blocks_current_position</definition>
        <argsstring>() const </argsstring>
        <name>blocks_current_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="51" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1afddb06ead08a0a14d2539a5991ceb9f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t graphene::chain::block_database::total_block_size</definition>
        <argsstring>() const </argsstring>
        <name>total_block_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="52" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="283" bodyend="287"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1block__database_1aaee8c43e5a4c561e0c7e7239b6d4a6b7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1chain_1_1index__entry" kindref="compound">index_entry</ref> &gt;</type>
        <definition>optional&lt; index_entry &gt; graphene::chain::block_database::last_index_entry</definition>
        <argsstring>() const </argsstring>
        <name>last_index_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="54" column="1" bodyfile="libraries/chain/block_database.cpp" bodystart="213" bodyend="262"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/include/graphene/chain/block_database.hpp" line="35" column="1" bodyfile="libraries/chain/include/graphene/chain/block_database.hpp" bodystart="34" bodyend="58"/>
    <listofallmembers>
      <member refid="classgraphene_1_1chain_1_1block__database_1ade0175210ec50ec08ae26ce37e29d2dc" prot="private" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>_block_num_to_pos</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a124fbd1a9b9cf397cc5876ef92c0aac4" prot="private" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>_blocks</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1ad481561fc0c16041606d5fb9f83ccea0" prot="private" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>_index_filename</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a783a6766116d20956a2220dca64b4399" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>blocks_current_position</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a0d5a09ed71172b6ac21dc94171293371" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>close</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a4140021d03baead2922c71c2e45c12bc" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>contains</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a56e589ae0ce413969c4622e94d0ae9b7" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>fetch_block_id</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1ad04bb86b70233641c5d69d5c4915c4be" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>fetch_by_number</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a45ba385eb23bf250ed5231f261e7cab5" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>fetch_optional</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1ae0e519fadc9ef4ddc156e23fa8bc97ff" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>flush</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1ae271510939794f957406e791ceef50d9" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>is_open</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a704499f5d23b5b20a0ab7f03fc5da1a7" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>last</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a0a3997e84728c2f609467d5a2dba58b1" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>last_id</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1aaee8c43e5a4c561e0c7e7239b6d4a6b7" prot="private" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>last_index_entry</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1aed048c18ca30b52e49a4af776f02fa75" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>open</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1ab2a62854a2c2634575fc91ce9092ebba" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>remove</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1a5fa9a2b7800f9feb4e3793810d63d1ed" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>store</name></member>
      <member refid="classgraphene_1_1chain_1_1block__database_1afddb06ead08a0a14d2539a5991ceb9f5" prot="public" virt="non-virtual"><scope>graphene::chain::block_database</scope><name>total_block_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
