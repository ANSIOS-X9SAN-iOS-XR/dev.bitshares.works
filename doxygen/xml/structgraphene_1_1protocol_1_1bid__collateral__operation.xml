<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1bid__collateral__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::bid_collateral_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="market_8hpp" local="no">market.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1_1fee__parameters__type" prot="public">graphene::protocol::bid_collateral_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1bid__collateral__operation_1a833679320977540f036c9b1b4a4b41ba" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::bid_collateral_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="183" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1bid__collateral__operation_1a34e33d162b9365be671a93a144b5dc99" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::bid_collateral_operation::bidder</definition>
        <argsstring></argsstring>
        <name>bidder</name>
        <briefdescription>
<para>pays fee and additional collateral </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="184" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1bid__collateral__operation_1a766522b98e88ba0b333578c772b9a610" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::bid_collateral_operation::additional_collateral</definition>
        <argsstring></argsstring>
        <name>additional_collateral</name>
        <briefdescription>
<para>the amount of collateral to bid for the debt </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="185" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1bid__collateral__operation_1aa4fd5df4cadfd98398bc5d50d39f8eb7" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::bid_collateral_operation::debt_covered</definition>
        <argsstring></argsstring>
        <name>debt_covered</name>
        <briefdescription>
<para>the amount of debt to take over </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="186" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1bid__collateral__operation_1a3d29393f0723a867b4a72c830b0c92fd" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1ga10cfb9bd22260c851c06b3b33ac0c512" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::bid_collateral_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="187" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1bid__collateral__operation_1a85e435ee202c425cc14a33d94799401e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::bid_collateral_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="189" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1bid__collateral__operation_1a14aaf55b909a0264664484b943f28cbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::bid_collateral_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="190" column="1" bodyfile="libraries/protocol/market.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This operation can be used after a black swan to bid collateral for taking over part of the debt and the settlement_fund (see BSIP-0018). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1690">
        <label>graphene::protocol::bid_collateral_operation</label>
        <link refid="structgraphene_1_1protocol_1_1bid__collateral__operation"/>
        <childnode refid="1691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1691">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1692">
        <label>graphene::protocol::bid_collateral_operation</label>
        <link refid="structgraphene_1_1protocol_1_1bid__collateral__operation"/>
        <childnode refid="1693" relation="public-inheritance">
        </childnode>
        <childnode refid="1694" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1695" relation="usage">
          <edgelabel>debt_covered</edgelabel>
          <edgelabel>fee</edgelabel>
          <edgelabel>additional_collateral</edgelabel>
        </childnode>
      </node>
      <node id="1694">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="1696">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="1693">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1695">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="1696" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="179" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="178" bodyend="191"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1a766522b98e88ba0b333578c772b9a610" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>additional_collateral</name></member>
      <member refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1a34e33d162b9365be671a93a144b5dc99" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>bidder</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1aa4fd5df4cadfd98398bc5d50d39f8eb7" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>debt_covered</name></member>
      <member refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1a3d29393f0723a867b4a72c830b0c92fd" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1a833679320977540f036c9b1b4a4b41ba" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1a85e435ee202c425cc14a33d94799401e" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a4bde0a7317ece463a0c386315d303b35" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a720b8a8ac46c96ef92714110404f65de" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a1882c3b453e9c2021b41827e56005aac" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1bid__collateral__operation_1a14aaf55b909a0264664484b943f28cbe" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::bid_collateral_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
