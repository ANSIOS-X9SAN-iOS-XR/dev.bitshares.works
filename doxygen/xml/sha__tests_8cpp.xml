<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sha__tests_8cpp" kind="file" language="C++">
    <compoundname>sha_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="digest_8hpp" local="no">fc/crypto/digest.hpp</includes>
    <includes refid="ripemd160_8hpp" local="no">fc/crypto/ripemd160.hpp</includes>
    <includes refid="sha1_8hpp" local="no">fc/crypto/sha1.hpp</includes>
    <includes refid="sha224_8hpp" local="no">fc/crypto/sha224.hpp</includes>
    <includes refid="sha256_8hpp" local="no">fc/crypto/sha256.hpp</includes>
    <includes refid="sha512_8hpp" local="no">fc/crypto/sha512.hpp</includes>
    <includes refid="exception_8hpp" local="no">fc/exception/exception.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="38818">
        <label>boost/endian/buffers.hpp</label>
      </node>
      <node id="38865">
        <label>functional</label>
      </node>
      <node id="38837">
        <label>boost/preprocessor/seq/seq.hpp</label>
      </node>
      <node id="38869">
        <label>limits</label>
      </node>
      <node id="38828">
        <label>assert.h</label>
      </node>
      <node id="38819">
        <label>fc/io/raw_variant.hpp</label>
        <link refid="raw__variant_8hpp"/>
        <childnode refid="38820" relation="include">
        </childnode>
        <childnode refid="38821" relation="include">
        </childnode>
        <childnode refid="38866" relation="include">
        </childnode>
        <childnode refid="38854" relation="include">
        </childnode>
        <childnode refid="38855" relation="include">
        </childnode>
      </node>
      <node id="38827">
        <label>fc/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="38828" relation="include">
        </childnode>
        <childnode refid="38829" relation="include">
        </childnode>
      </node>
      <node id="38833">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="38814">
        <label>libraries/fc/tests/crypto/sha_tests.cpp</label>
        <link refid="sha__tests_8cpp"/>
        <childnode refid="38815" relation="include">
        </childnode>
        <childnode refid="38816" relation="include">
        </childnode>
        <childnode refid="38873" relation="include">
        </childnode>
        <childnode refid="38874" relation="include">
        </childnode>
        <childnode refid="38875" relation="include">
        </childnode>
        <childnode refid="38872" relation="include">
        </childnode>
        <childnode refid="38876" relation="include">
        </childnode>
        <childnode refid="38821" relation="include">
        </childnode>
        <childnode refid="38877" relation="include">
        </childnode>
      </node>
      <node id="38815">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="38831">
        <label>fc/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="38832" relation="include">
        </childnode>
        <childnode refid="38827" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
      </node>
      <node id="38823">
        <label>fc/config.hpp</label>
        <link refid="fc_2include_2fc_2config_8hpp"/>
      </node>
      <node id="38871">
        <label>fc/filesystem.hpp</label>
        <link refid="filesystem_8hpp"/>
        <childnode refid="38829" relation="include">
        </childnode>
        <childnode refid="38852" relation="include">
        </childnode>
        <childnode refid="38841" relation="include">
        </childnode>
        <childnode refid="38827" relation="include">
        </childnode>
        <childnode refid="38832" relation="include">
        </childnode>
      </node>
      <node id="38870">
        <label>fc/io/datastream.hpp</label>
        <link refid="datastream_8hpp"/>
        <childnode refid="38839" relation="include">
        </childnode>
        <childnode refid="38825" relation="include">
        </childnode>
      </node>
      <node id="38825">
        <label>stdint.h</label>
      </node>
      <node id="38817">
        <label>fc/io/raw.hpp</label>
        <link refid="raw_8hpp"/>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38819" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
        <childnode refid="38870" relation="include">
        </childnode>
        <childnode refid="38827" relation="include">
        </childnode>
        <childnode refid="38832" relation="include">
        </childnode>
        <childnode refid="38824" relation="include">
        </childnode>
        <childnode refid="38871" relation="include">
        </childnode>
        <childnode refid="38821" relation="include">
        </childnode>
        <childnode refid="38866" relation="include">
        </childnode>
        <childnode refid="38820" relation="include">
        </childnode>
        <childnode refid="38844" relation="include">
        </childnode>
        <childnode refid="38843" relation="include">
        </childnode>
      </node>
      <node id="38847">
        <label>fc/container/flat_fwd.hpp</label>
        <link refid="flat__fwd_8hpp"/>
        <childnode refid="38848" relation="include">
        </childnode>
        <childnode refid="38849" relation="include">
        </childnode>
        <childnode refid="38850" relation="include">
        </childnode>
        <childnode refid="38823" relation="include">
        </childnode>
      </node>
      <node id="38822">
        <label>fc/log/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="38823" relation="include">
        </childnode>
        <childnode refid="38824" relation="include">
        </childnode>
        <childnode refid="38851" relation="include">
        </childnode>
        <childnode refid="38853" relation="include">
        </childnode>
        <childnode refid="38856" relation="include">
        </childnode>
        <childnode refid="38852" relation="include">
        </childnode>
        <childnode refid="38834" relation="include">
        </childnode>
        <childnode refid="38835" relation="include">
        </childnode>
        <childnode refid="38836" relation="include">
        </childnode>
        <childnode refid="38837" relation="include">
        </childnode>
        <childnode refid="38838" relation="include">
        </childnode>
        <childnode refid="38863" relation="include">
        </childnode>
      </node>
      <node id="38826">
        <label>string</label>
      </node>
      <node id="38844">
        <label>map</label>
      </node>
      <node id="38858">
        <label>unordered_set</label>
      </node>
      <node id="38851">
        <label>fc/log/appender.hpp</label>
        <link refid="appender_8hpp"/>
        <childnode refid="38852" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
      </node>
      <node id="38863">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="38864">
        <label>exception</label>
      </node>
      <node id="38853">
        <label>fc/log/log_message.hpp</label>
        <link refid="log__message_8hpp"/>
        <childnode refid="38823" relation="include">
        </childnode>
        <childnode refid="38824" relation="include">
        </childnode>
        <childnode refid="38854" relation="include">
        </childnode>
        <childnode refid="38852" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
      </node>
      <node id="38862">
        <label>boost/multi_index_container_fwd.hpp</label>
      </node>
      <node id="38855">
        <label>fc/variant.hpp</label>
        <link refid="variant_8hpp"/>
        <childnode refid="38842" relation="include">
        </childnode>
        <childnode refid="38856" relation="include">
        </childnode>
        <childnode refid="38843" relation="include">
        </childnode>
        <childnode refid="38844" relation="include">
        </childnode>
        <childnode refid="38852" relation="include">
        </childnode>
        <childnode refid="38845" relation="include">
        </childnode>
        <childnode refid="38857" relation="include">
        </childnode>
        <childnode refid="38858" relation="include">
        </childnode>
        <childnode refid="38846" relation="include">
        </childnode>
        <childnode refid="38839" relation="include">
        </childnode>
        <childnode refid="38827" relation="include">
        </childnode>
        <childnode refid="38859" relation="include">
        </childnode>
        <childnode refid="38847" relation="include">
        </childnode>
        <childnode refid="38861" relation="include">
        </childnode>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38862" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
      </node>
      <node id="38874">
        <label>fc/crypto/sha1.hpp</label>
        <link refid="sha1_8hpp"/>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38832" relation="include">
        </childnode>
        <childnode refid="38865" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
      </node>
      <node id="38824">
        <label>fc/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="38825" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
        <childnode refid="38827" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
      </node>
      <node id="38838">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="38836">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="38859">
        <label>fc/uint128.hpp</label>
        <link refid="uint128_8hpp"/>
        <childnode refid="38860" relation="include">
        </childnode>
      </node>
      <node id="38861">
        <label>fc/crypto/hex.hpp</label>
        <link refid="hex_8hpp"/>
        <childnode refid="38825" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
        <childnode refid="38846" relation="include">
        </childnode>
      </node>
      <node id="38850">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="38832">
        <label>fc/fwd.hpp</label>
        <link refid="fwd_8hpp"/>
      </node>
      <node id="38839">
        <label>string.h</label>
      </node>
      <node id="38849">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="38854">
        <label>fc/variant_object.hpp</label>
        <link refid="variant__object_8hpp"/>
        <childnode refid="38855" relation="include">
        </childnode>
        <childnode refid="38852" relation="include">
        </childnode>
      </node>
      <node id="38841">
        <label>fc/reflect/typename.hpp</label>
        <link refid="typename_8hpp"/>
        <childnode refid="38842" relation="include">
        </childnode>
        <childnode refid="38843" relation="include">
        </childnode>
        <childnode refid="38844" relation="include">
        </childnode>
        <childnode refid="38845" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
        <childnode refid="38846" relation="include">
        </childnode>
        <childnode refid="38827" relation="include">
        </childnode>
        <childnode refid="38831" relation="include">
        </childnode>
        <childnode refid="38847" relation="include">
        </childnode>
      </node>
      <node id="38846">
        <label>vector</label>
      </node>
      <node id="38821">
        <label>fc/exception/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="38822" relation="include">
        </childnode>
        <childnode refid="38827" relation="include">
        </childnode>
        <childnode refid="38864" relation="include">
        </childnode>
        <childnode refid="38865" relation="include">
        </childnode>
        <childnode refid="38857" relation="include">
        </childnode>
      </node>
      <node id="38867">
        <label>fc/io/varint.hpp</label>
        <link refid="varint_8hpp"/>
        <childnode refid="38825" relation="include">
        </childnode>
        <childnode refid="38857" relation="include">
        </childnode>
      </node>
      <node id="38829">
        <label>utility</label>
      </node>
      <node id="38842">
        <label>array</label>
      </node>
      <node id="38876">
        <label>fc/crypto/sha512.hpp</label>
        <link refid="sha512_8hpp"/>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38866" relation="include">
        </childnode>
        <childnode refid="38832" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
      </node>
      <node id="38873">
        <label>fc/crypto/ripemd160.hpp</label>
        <link refid="ripemd160_8hpp"/>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38832" relation="include">
        </childnode>
        <childnode refid="38866" relation="include">
        </childnode>
        <childnode refid="38841" relation="include">
        </childnode>
      </node>
      <node id="38860">
        <label>boost/multiprecision/integer.hpp</label>
      </node>
      <node id="38816">
        <label>fc/crypto/digest.hpp</label>
        <link refid="digest_8hpp"/>
        <childnode refid="38817" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
        <childnode refid="38872" relation="include">
        </childnode>
      </node>
      <node id="38877">
        <label>iostream</label>
      </node>
      <node id="38856">
        <label>cstddef</label>
      </node>
      <node id="38843">
        <label>deque</label>
      </node>
      <node id="38857">
        <label>unordered_map</label>
      </node>
      <node id="38872">
        <label>fc/crypto/sha256.hpp</label>
        <link refid="sha256_8hpp"/>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38832" relation="include">
        </childnode>
        <childnode refid="38831" relation="include">
        </childnode>
        <childnode refid="38866" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
      </node>
      <node id="38835">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="38848">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="38868">
        <label>fc/safe.hpp</label>
        <link refid="safe_8hpp"/>
        <childnode refid="38821" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
        <childnode refid="38869" relation="include">
        </childnode>
      </node>
      <node id="38830">
        <label>fc/reflect/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="38831" relation="include">
        </childnode>
        <childnode refid="38833" relation="include">
        </childnode>
        <childnode refid="38834" relation="include">
        </childnode>
        <childnode refid="38835" relation="include">
        </childnode>
        <childnode refid="38836" relation="include">
        </childnode>
        <childnode refid="38837" relation="include">
        </childnode>
        <childnode refid="38838" relation="include">
        </childnode>
        <childnode refid="38825" relation="include">
        </childnode>
        <childnode refid="38839" relation="include">
        </childnode>
        <childnode refid="38840" relation="include">
        </childnode>
        <childnode refid="38841" relation="include">
        </childnode>
      </node>
      <node id="38840">
        <label>type_traits</label>
      </node>
      <node id="38845">
        <label>set</label>
      </node>
      <node id="38875">
        <label>fc/crypto/sha224.hpp</label>
        <link refid="sha224_8hpp"/>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38832" relation="include">
        </childnode>
        <childnode refid="38866" relation="include">
        </childnode>
        <childnode refid="38830" relation="include">
        </childnode>
      </node>
      <node id="38820">
        <label>algorithm</label>
      </node>
      <node id="38852">
        <label>memory</label>
      </node>
      <node id="38834">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="38866">
        <label>fc/io/raw_fwd.hpp</label>
        <link refid="raw__fwd_8hpp"/>
        <childnode refid="38818" relation="include">
        </childnode>
        <childnode refid="38823" relation="include">
        </childnode>
        <childnode refid="38847" relation="include">
        </childnode>
        <childnode refid="38867" relation="include">
        </childnode>
        <childnode refid="38868" relation="include">
        </childnode>
        <childnode refid="38859" relation="include">
        </childnode>
        <childnode refid="38842" relation="include">
        </childnode>
        <childnode refid="38843" relation="include">
        </childnode>
        <childnode refid="38852" relation="include">
        </childnode>
        <childnode refid="38846" relation="include">
        </childnode>
        <childnode refid="38826" relation="include">
        </childnode>
        <childnode refid="38858" relation="include">
        </childnode>
        <childnode refid="38857" relation="include">
        </childnode>
        <childnode refid="38845" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sha__tests_8cpp_1a95630d4f6680d61a0462815e1371951e" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char TEST5[1000001]</definition>
        <argsstring>[1000001]</argsstring>
        <name>TEST5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="18" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sha__tests_8cpp_1a4d488994d8a0004548b6d20cbe087723" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST1</definition>
        <argsstring>(&quot;abc&quot;)</argsstring>
        <name>TEST1</name>
        <param>
          <type>&quot;abc&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1ac47825c595fe65853587cab62ccf0dfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST2</definition>
        <argsstring>(&quot;&quot;)</argsstring>
        <name>TEST2</name>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a38d92d5521a9037496b8c7f8400c83c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST3</definition>
        <argsstring>(&quot;abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq&quot;)</argsstring>
        <name>TEST3</name>
        <param>
          <type>&quot;abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a444b7a685d8313097596867bfb0ede8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST4</definition>
        <argsstring>(&quot;abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu&quot;)</argsstring>
        <name>TEST4</name>
        <param>
          <type>&quot;abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1afcb63dac525128e6c102c31dc743cd1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string TEST6</definition>
        <argsstring>(&quot;abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno&quot;)</argsstring>
        <name>TEST6</name>
        <param>
          <type>&quot;abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1af85b0516354c99a8282254d3d831dbab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_5</definition>
        <argsstring>()</argsstring>
        <name>init_5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="21" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a5fac8c8eef95b200d0dfc0cce347a9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename H</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void test</definition>
        <argsstring>(const char *to_hash, const std::string &amp;expected)</argsstring>
        <name>test</name>
        <param>
          <type>const char *</type>
          <declname>to_hash</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="27" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1afb9f6d90359ca8b72d1922bf388f9948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename H</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void test</definition>
        <argsstring>(const std::string &amp;to_hash, const std::string &amp;expected)</argsstring>
        <name>test</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>to_hash</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="35" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a8731e2e88a9e95db9a3a979f2163db3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename H</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void test_big</definition>
        <argsstring>(const std::string &amp;expected)</argsstring>
        <name>test_big</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="42" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="42" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1aa3f1439e7f0e845b636ac093da3948c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename H</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void test_stream</definition>
        <argsstring>()</argsstring>
        <name>test_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="77" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="77" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a4b80270903b6882b2455fab1b1952ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_big&lt; fc::ripemd160 &gt;</definition>
        <argsstring>(const std::string &amp;expected)</argsstring>
        <name>test_big&lt; fc::ripemd160 &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a084e1baeff3b4e238a92f89782d1bf41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_big&lt; fc::sha1 &gt;</definition>
        <argsstring>(const std::string &amp;expected)</argsstring>
        <name>test_big&lt; fc::sha1 &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a5cfcc41afbac33587ea462966be8be9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_big&lt; fc::sha224 &gt;</definition>
        <argsstring>(const std::string &amp;expected)</argsstring>
        <name>test_big&lt; fc::sha224 &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a9c4137ca8e31597c648d59c2c2b407d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_big&lt; fc::sha256 &gt;</definition>
        <argsstring>(const std::string &amp;expected)</argsstring>
        <name>test_big&lt; fc::sha256 &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a02c8f711f0ce71368c3f819240218081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_big&lt; fc::sha512 &gt;</definition>
        <argsstring>(const std::string &amp;expected)</argsstring>
        <name>test_big&lt; fc::sha512 &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a3e17f3dc0ac61578abbe73bad28f7dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_stream&lt; fc::ripemd160 &gt;</definition>
        <argsstring>()</argsstring>
        <name>test_stream&lt; fc::ripemd160 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a4213805a006f0528b6066cf3bd74c34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_stream&lt; fc::sha256 &gt;</definition>
        <argsstring>()</argsstring>
        <name>test_stream&lt; fc::sha256 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a43895a791d3aeb12843e1be025a89b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void test_stream&lt; fc::sha512 &gt;</definition>
        <argsstring>()</argsstring>
        <name>test_stream&lt; fc::sha512 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1ad4606891e0502c7ca6a67c610c0eb906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(ripemd160_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>ripemd160_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="99" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="99" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1affcbbe62d62cbc81854aeb7f98cfa88c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(sha1_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>sha1_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="111" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="111" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1ae0393695229ad54835512a36c63b98a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(sha224_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>sha224_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="122" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="122" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1ae28c2caa30e9322f9ea2b5b83596f4a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(sha256_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>sha256_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="133" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="133" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="sha__tests_8cpp_1a8b8f73318999951ffcbfbaf7c3b64125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(sha512_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>sha512_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/sha_tests.cpp" line="160" column="1" bodyfile="libraries/fc/tests/crypto/sha_tests.cpp" bodystart="160" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/crypto/sha_tests.cpp"/>
  </compounddef>
</doxygen>
