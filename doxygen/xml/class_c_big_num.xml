<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_c_big_num" kind="class" language="C++" prot="public">
    <compoundname>CBigNum</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_big_num_1a5fd9ec75f6d3f90a3a26b92edf65ae00" prot="private" static="no" mutable="no">
        <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>BIGNUM* CBigNum::bn</definition>
        <argsstring></argsstring>
        <name>bn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="70" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_big_num_1a272ed55454635b770e181bddc1a9c071" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>()</argsstring>
        <name>CBigNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="72" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="72" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a50fcecb7d672c2b7d0a89e641a0682ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="75" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a575e705d2120b0a43d74d798eaef48ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="85" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a0cf323763ff64c47cac7ababd2f23683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::~CBigNum</definition>
        <argsstring>()</argsstring>
        <name>~CBigNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="92" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a318644830d41471cd2bbcd702975bbb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(signed char n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>signed char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="98" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a0f4e34dcc48e9089e9f20c06418755c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(short n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="99" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a930e53591ce24f650f7ddd1076bd4efe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(int n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="100" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1acf7db72d557a485847c5ed99d6707bc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="101" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1afe63a4eb433e69687fad44193390dc1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned char n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="102" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a3745ad1eb1bd53c9535f8620515d3ae3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned short n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="103" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a87ff912ff941f4bc4ba10482c502757d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned int n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="104" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1af4cfba2743d8366f355573b75c75e7ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="105" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ad3c2843e6755a612b8734eb6e0f03ced" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="107" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setulong</definition>
        <argsstring>(unsigned long n)</argsstring>
        <name>setulong</name>
        <param>
          <type>unsigned long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="113" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a035dfd4984c0dfb5400e83afa11e0d21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CBigNum::getulong</definition>
        <argsstring>() const</argsstring>
        <name>getulong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="119" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a50e032d16c3d6a4c7a12e21b55ef8ae5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CBigNum::getuint</definition>
        <argsstring>() const</argsstring>
        <name>getuint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="124" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1afc4744c69da2e73b6e6a8941abf6d244" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBigNum::getint</definition>
        <argsstring>() const</argsstring>
        <name>getint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="129" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a9658fb91853022de403e7f08030e6300" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setint64</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>setint64</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="138" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="138" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ae61a86bfe3b286a2cfda45ffba1c1310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setuint64</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>setuint64</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="173" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="173" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aa9236c14e34519e9b173a9a4b80f5621" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setvch</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>setvch</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="201" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="201" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a305a57111c97172c76a6145ec840bd74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CBigNum::getvch</definition>
        <argsstring>() const</argsstring>
        <name>getvch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="216" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="216" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::SetCompact</definition>
        <argsstring>(unsigned int nCompact)</argsstring>
        <name>SetCompact</name>
        <param>
          <type>unsigned int</type>
          <declname>nCompact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="228" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="228" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aa874461cf2cfb497f2c9f20e66106d0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CBigNum::GetCompact</definition>
        <argsstring>() const</argsstring>
        <name>GetCompact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="240" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="240" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a9d4f7c42f141e45410af96e6804c54fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::SetHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SetHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="253" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="253" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a10da7a8b4984feee0bb0f01ef2e74da8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CBigNum::ToString</definition>
        <argsstring>(int nBase=10) const</argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>nBase</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="283" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="283" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a7b3bda0e9860ce67d99ea6e229cdd648" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CBigNum::GetHex</definition>
        <argsstring>() const</argsstring>
        <name>GetHex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="309" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a913c8446faf36d6cfebf5dc88a7fef9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBigNum::operator!</definition>
        <argsstring>() const</argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="316" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac3da33626c8ab06d6a049b310c086dd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator+=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="321" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="321" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a4fe724fd22129eefc4e1f34d95505381" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator-=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="328" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="328" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aedd26ffda5c04c4765ba8e18d25d9ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator*=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="335" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="335" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a213f7dc5a2d8212d3e7402a06ee5d5b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator/=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="343" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="343" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac5bec8d967502c15e2dffc8600c933e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator%=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator%=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="351" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="351" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a784951e3a24199fa6b994a951453d156" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator&lt;&lt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="359" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="359" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a7d2759e104a02502891b185dfb704ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator&gt;&gt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="366" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="366" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac9421f22614796d8520be7e6ade71ee8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="384" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="384" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aa69e12c7f330374b2d86df0da0627e58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum CBigNum::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="392" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="392" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a47920287946fb3a55e84af70e953e78f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="400" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="400" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a13d365561d5407fc624eacb6378db4d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum CBigNum::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="410" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="410" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ada3a3cb24f627ba51d5e93065f4665dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>const BIGNUM* CBigNum::to_bignum</definition>
        <argsstring>() const</argsstring>
        <name>to_bignum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="418" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="418" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a23b2a54aa1e6e9e01b155b45cecd7610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>BIGNUM* CBigNum::to_bignum</definition>
        <argsstring>()</argsstring>
        <name>to_bignum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="421" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="421" bodyend="423"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>C++ wrapper for BIGNUM (OpenSSL bignum) </para>    </detaileddescription>
    <location file="libraries/fc/src/crypto/base58.cpp" line="69" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="68" bodyend="424"/>
    <listofallmembers>
      <member refid="class_c_big_num_1a5fd9ec75f6d3f90a3a26b92edf65ae00" prot="private" virt="non-virtual"><scope>CBigNum</scope><name>bn</name></member>
      <member refid="class_c_big_num_1a272ed55454635b770e181bddc1a9c071" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a50fcecb7d672c2b7d0a89e641a0682ca" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a318644830d41471cd2bbcd702975bbb1" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a0f4e34dcc48e9089e9f20c06418755c9" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a930e53591ce24f650f7ddd1076bd4efe" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1acf7db72d557a485847c5ed99d6707bc0" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1afe63a4eb433e69687fad44193390dc1b" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a3745ad1eb1bd53c9535f8620515d3ae3" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a87ff912ff941f4bc4ba10482c502757d" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1af4cfba2743d8366f355573b75c75e7ef" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1ad3c2843e6755a612b8734eb6e0f03ced" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1aa874461cf2cfb497f2c9f20e66106d0b" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>GetCompact</name></member>
      <member refid="class_c_big_num_1a7b3bda0e9860ce67d99ea6e229cdd648" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>GetHex</name></member>
      <member refid="class_c_big_num_1afc4744c69da2e73b6e6a8941abf6d244" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getint</name></member>
      <member refid="class_c_big_num_1a50e032d16c3d6a4c7a12e21b55ef8ae5" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getuint</name></member>
      <member refid="class_c_big_num_1a035dfd4984c0dfb5400e83afa11e0d21" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getulong</name></member>
      <member refid="class_c_big_num_1a305a57111c97172c76a6145ec840bd74" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getvch</name></member>
      <member refid="class_c_big_num_1a913c8446faf36d6cfebf5dc88a7fef9a" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator!</name></member>
      <member refid="class_c_big_num_1ac5bec8d967502c15e2dffc8600c933e6" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator%=</name></member>
      <member refid="class_c_big_num_1aedd26ffda5c04c4765ba8e18d25d9ff0" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator*=</name></member>
      <member refid="class_c_big_num_1ac9421f22614796d8520be7e6ade71ee8" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator++</name></member>
      <member refid="class_c_big_num_1aa69e12c7f330374b2d86df0da0627e58" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator++</name></member>
      <member refid="class_c_big_num_1ac3da33626c8ab06d6a049b310c086dd5" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator+=</name></member>
      <member refid="class_c_big_num_1a47920287946fb3a55e84af70e953e78f" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator--</name></member>
      <member refid="class_c_big_num_1a13d365561d5407fc624eacb6378db4d3" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator--</name></member>
      <member refid="class_c_big_num_1a4fe724fd22129eefc4e1f34d95505381" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator-=</name></member>
      <member refid="class_c_big_num_1a213f7dc5a2d8212d3e7402a06ee5d5b9" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator/=</name></member>
      <member refid="class_c_big_num_1a784951e3a24199fa6b994a951453d156" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator&lt;&lt;=</name></member>
      <member refid="class_c_big_num_1a575e705d2120b0a43d74d798eaef48ee" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator=</name></member>
      <member refid="class_c_big_num_1a7d2759e104a02502891b185dfb704ad1" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator&gt;&gt;=</name></member>
      <member refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>SetCompact</name></member>
      <member refid="class_c_big_num_1a9d4f7c42f141e45410af96e6804c54fe" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>SetHex</name></member>
      <member refid="class_c_big_num_1a9658fb91853022de403e7f08030e6300" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setint64</name></member>
      <member refid="class_c_big_num_1ae61a86bfe3b286a2cfda45ffba1c1310" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setuint64</name></member>
      <member refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setulong</name></member>
      <member refid="class_c_big_num_1aa9236c14e34519e9b173a9a4b80f5621" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setvch</name></member>
      <member refid="class_c_big_num_1ada3a3cb24f627ba51d5e93065f4665dd" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>to_bignum</name></member>
      <member refid="class_c_big_num_1a23b2a54aa1e6e9e01b155b45cecd7610" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>to_bignum</name></member>
      <member refid="class_c_big_num_1a10da7a8b4984feee0bb0f01ef2e74da8" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>ToString</name></member>
      <member refid="class_c_big_num_1a0cf323763ff64c47cac7ababd2f23683" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>~CBigNum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
