<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ecc__test_8cpp" kind="file" language="C++">
    <compoundname>ecc_test.cpp</compoundname>
    <includes refid="elliptic_8hpp" local="no">fc/crypto/elliptic.hpp</includes>
    <includes refid="exception_8hpp" local="no">fc/exception/exception.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <incdepgraph>
      <node id="38758">
        <label>boost/endian/buffers.hpp</label>
      </node>
      <node id="38803">
        <label>functional</label>
      </node>
      <node id="38781">
        <label>boost/preprocessor/seq/seq.hpp</label>
      </node>
      <node id="38804">
        <label>limits</label>
      </node>
      <node id="38762">
        <label>assert.h</label>
      </node>
      <node id="38761">
        <label>fc/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="38762" relation="include">
        </childnode>
        <childnode refid="38763" relation="include">
        </childnode>
      </node>
      <node id="38777">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="38760">
        <label>fc/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="38759" relation="include">
        </childnode>
        <childnode refid="38761" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
      </node>
      <node id="38765">
        <label>fc/config.hpp</label>
        <link refid="fc_2include_2fc_2config_8hpp"/>
      </node>
      <node id="38754">
        <label>openssl/ecdh.h</label>
      </node>
      <node id="38744">
        <label>stdint.h</label>
      </node>
      <node id="38749">
        <label>openssl/crypto.h</label>
      </node>
      <node id="38756">
        <label>openssl/obj_mac.h</label>
      </node>
      <node id="38755">
        <label>openssl/sha.h</label>
      </node>
      <node id="38766">
        <label>fc/container/flat_fwd.hpp</label>
        <link refid="flat__fwd_8hpp"/>
        <childnode refid="38767" relation="include">
        </childnode>
        <childnode refid="38768" relation="include">
        </childnode>
        <childnode refid="38769" relation="include">
        </childnode>
        <childnode refid="38765" relation="include">
        </childnode>
      </node>
      <node id="38774">
        <label>fc/log/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="38765" relation="include">
        </childnode>
        <childnode refid="38775" relation="include">
        </childnode>
        <childnode refid="38790" relation="include">
        </childnode>
        <childnode refid="38792" relation="include">
        </childnode>
        <childnode refid="38795" relation="include">
        </childnode>
        <childnode refid="38791" relation="include">
        </childnode>
        <childnode refid="38778" relation="include">
        </childnode>
        <childnode refid="38779" relation="include">
        </childnode>
        <childnode refid="38780" relation="include">
        </childnode>
        <childnode refid="38781" relation="include">
        </childnode>
        <childnode refid="38782" relation="include">
        </childnode>
        <childnode refid="38801" relation="include">
        </childnode>
      </node>
      <node id="38745">
        <label>string</label>
      </node>
      <node id="38788">
        <label>map</label>
      </node>
      <node id="38741">
        <label>libraries/fc/tests/crypto/ecc_test.cpp</label>
        <link refid="ecc__test_8cpp"/>
        <childnode refid="38742" relation="include">
        </childnode>
        <childnode refid="38773" relation="include">
        </childnode>
        <childnode refid="38806" relation="include">
        </childnode>
        <childnode refid="38807" relation="include">
        </childnode>
      </node>
      <node id="38796">
        <label>unordered_set</label>
      </node>
      <node id="38790">
        <label>fc/log/appender.hpp</label>
        <link refid="appender_8hpp"/>
        <childnode refid="38791" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
      </node>
      <node id="38801">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="38802">
        <label>exception</label>
      </node>
      <node id="38807">
        <label>fstream</label>
      </node>
      <node id="38792">
        <label>fc/log/log_message.hpp</label>
        <link refid="log__message_8hpp"/>
        <childnode refid="38765" relation="include">
        </childnode>
        <childnode refid="38775" relation="include">
        </childnode>
        <childnode refid="38793" relation="include">
        </childnode>
        <childnode refid="38791" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
      </node>
      <node id="38800">
        <label>boost/multi_index_container_fwd.hpp</label>
      </node>
      <node id="38794">
        <label>fc/variant.hpp</label>
        <link refid="variant_8hpp"/>
        <childnode refid="38786" relation="include">
        </childnode>
        <childnode refid="38795" relation="include">
        </childnode>
        <childnode refid="38787" relation="include">
        </childnode>
        <childnode refid="38788" relation="include">
        </childnode>
        <childnode refid="38791" relation="include">
        </childnode>
        <childnode refid="38789" relation="include">
        </childnode>
        <childnode refid="38771" relation="include">
        </childnode>
        <childnode refid="38796" relation="include">
        </childnode>
        <childnode refid="38746" relation="include">
        </childnode>
        <childnode refid="38783" relation="include">
        </childnode>
        <childnode refid="38761" relation="include">
        </childnode>
        <childnode refid="38797" relation="include">
        </childnode>
        <childnode refid="38766" relation="include">
        </childnode>
        <childnode refid="38799" relation="include">
        </childnode>
        <childnode refid="38758" relation="include">
        </childnode>
        <childnode refid="38800" relation="include">
        </childnode>
        <childnode refid="38776" relation="include">
        </childnode>
      </node>
      <node id="38775">
        <label>fc/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="38744" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
        <childnode refid="38761" relation="include">
        </childnode>
        <childnode refid="38776" relation="include">
        </childnode>
      </node>
      <node id="38782">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="38780">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="38752">
        <label>openssl/err.h</label>
      </node>
      <node id="38797">
        <label>fc/uint128.hpp</label>
        <link refid="uint128_8hpp"/>
        <childnode refid="38798" relation="include">
        </childnode>
      </node>
      <node id="38799">
        <label>fc/crypto/hex.hpp</label>
        <link refid="hex_8hpp"/>
        <childnode refid="38744" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
        <childnode refid="38746" relation="include">
        </childnode>
      </node>
      <node id="38769">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="38759">
        <label>fc/fwd.hpp</label>
        <link refid="fwd_8hpp"/>
      </node>
      <node id="38783">
        <label>string.h</label>
      </node>
      <node id="38768">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="38793">
        <label>fc/variant_object.hpp</label>
        <link refid="variant__object_8hpp"/>
        <childnode refid="38794" relation="include">
        </childnode>
        <childnode refid="38791" relation="include">
        </childnode>
      </node>
      <node id="38785">
        <label>fc/reflect/typename.hpp</label>
        <link refid="typename_8hpp"/>
        <childnode refid="38786" relation="include">
        </childnode>
        <childnode refid="38787" relation="include">
        </childnode>
        <childnode refid="38788" relation="include">
        </childnode>
        <childnode refid="38789" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
        <childnode refid="38746" relation="include">
        </childnode>
        <childnode refid="38761" relation="include">
        </childnode>
        <childnode refid="38760" relation="include">
        </childnode>
        <childnode refid="38766" relation="include">
        </childnode>
      </node>
      <node id="38743">
        <label>fc/crypto/bigint.hpp</label>
        <link refid="bigint_8hpp"/>
        <childnode refid="38744" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
        <childnode refid="38746" relation="include">
        </childnode>
      </node>
      <node id="38746">
        <label>vector</label>
      </node>
      <node id="38773">
        <label>fc/exception/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="38774" relation="include">
        </childnode>
        <childnode refid="38761" relation="include">
        </childnode>
        <childnode refid="38802" relation="include">
        </childnode>
        <childnode refid="38803" relation="include">
        </childnode>
        <childnode refid="38771" relation="include">
        </childnode>
      </node>
      <node id="38770">
        <label>fc/io/varint.hpp</label>
        <link refid="varint_8hpp"/>
        <childnode refid="38744" relation="include">
        </childnode>
        <childnode refid="38771" relation="include">
        </childnode>
      </node>
      <node id="38763">
        <label>utility</label>
      </node>
      <node id="38786">
        <label>array</label>
      </node>
      <node id="38805">
        <label>fc/crypto/sha512.hpp</label>
        <link refid="sha512_8hpp"/>
        <childnode refid="38758" relation="include">
        </childnode>
        <childnode refid="38764" relation="include">
        </childnode>
        <childnode refid="38759" relation="include">
        </childnode>
        <childnode refid="38776" relation="include">
        </childnode>
      </node>
      <node id="38798">
        <label>boost/multiprecision/integer.hpp</label>
      </node>
      <node id="38750">
        <label>openssl/evp.h</label>
      </node>
      <node id="38748">
        <label>openssl/ec.h</label>
      </node>
      <node id="38806">
        <label>iostream</label>
      </node>
      <node id="38795">
        <label>cstddef</label>
      </node>
      <node id="38787">
        <label>deque</label>
      </node>
      <node id="38771">
        <label>unordered_map</label>
      </node>
      <node id="38757">
        <label>fc/crypto/sha256.hpp</label>
        <link refid="sha256_8hpp"/>
        <childnode refid="38758" relation="include">
        </childnode>
        <childnode refid="38759" relation="include">
        </childnode>
        <childnode refid="38760" relation="include">
        </childnode>
        <childnode refid="38764" relation="include">
        </childnode>
        <childnode refid="38776" relation="include">
        </childnode>
      </node>
      <node id="38779">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="38751">
        <label>openssl/conf.h</label>
      </node>
      <node id="38767">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="38772">
        <label>fc/safe.hpp</label>
        <link refid="safe_8hpp"/>
        <childnode refid="38773" relation="include">
        </childnode>
        <childnode refid="38776" relation="include">
        </childnode>
        <childnode refid="38804" relation="include">
        </childnode>
      </node>
      <node id="38776">
        <label>fc/reflect/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="38760" relation="include">
        </childnode>
        <childnode refid="38777" relation="include">
        </childnode>
        <childnode refid="38778" relation="include">
        </childnode>
        <childnode refid="38779" relation="include">
        </childnode>
        <childnode refid="38780" relation="include">
        </childnode>
        <childnode refid="38781" relation="include">
        </childnode>
        <childnode refid="38782" relation="include">
        </childnode>
        <childnode refid="38744" relation="include">
        </childnode>
        <childnode refid="38783" relation="include">
        </childnode>
        <childnode refid="38784" relation="include">
        </childnode>
        <childnode refid="38785" relation="include">
        </childnode>
      </node>
      <node id="38784">
        <label>type_traits</label>
      </node>
      <node id="38789">
        <label>set</label>
      </node>
      <node id="38742">
        <label>fc/crypto/elliptic.hpp</label>
        <link refid="elliptic_8hpp"/>
        <childnode refid="38743" relation="include">
        </childnode>
        <childnode refid="38747" relation="include">
        </childnode>
        <childnode refid="38757" relation="include">
        </childnode>
        <childnode refid="38805" relation="include">
        </childnode>
        <childnode refid="38759" relation="include">
        </childnode>
        <childnode refid="38764" relation="include">
        </childnode>
        <childnode refid="38786" relation="include">
        </childnode>
        <childnode refid="38776" relation="include">
        </childnode>
      </node>
      <node id="38753">
        <label>openssl/ecdsa.h</label>
      </node>
      <node id="38791">
        <label>memory</label>
      </node>
      <node id="38778">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="38764">
        <label>fc/io/raw_fwd.hpp</label>
        <link refid="raw__fwd_8hpp"/>
        <childnode refid="38758" relation="include">
        </childnode>
        <childnode refid="38765" relation="include">
        </childnode>
        <childnode refid="38766" relation="include">
        </childnode>
        <childnode refid="38770" relation="include">
        </childnode>
        <childnode refid="38772" relation="include">
        </childnode>
        <childnode refid="38797" relation="include">
        </childnode>
        <childnode refid="38786" relation="include">
        </childnode>
        <childnode refid="38787" relation="include">
        </childnode>
        <childnode refid="38791" relation="include">
        </childnode>
        <childnode refid="38746" relation="include">
        </childnode>
        <childnode refid="38745" relation="include">
        </childnode>
        <childnode refid="38796" relation="include">
        </childnode>
        <childnode refid="38771" relation="include">
        </childnode>
        <childnode refid="38789" relation="include">
        </childnode>
      </node>
      <node id="38747">
        <label>fc/crypto/openssl.hpp</label>
        <link refid="openssl_8hpp"/>
        <childnode refid="38748" relation="include">
        </childnode>
        <childnode refid="38749" relation="include">
        </childnode>
        <childnode refid="38750" relation="include">
        </childnode>
        <childnode refid="38751" relation="include">
        </childnode>
        <childnode refid="38752" relation="include">
        </childnode>
        <childnode refid="38753" relation="include">
        </childnode>
        <childnode refid="38754" relation="include">
        </childnode>
        <childnode refid="38755" relation="include">
        </childnode>
        <childnode refid="38756" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ecc__test_8cpp_1a2cd6456a1e0803e3354089db271cc8e7" prot="public" static="yes" mutable="no">
        <type>std::fstream</type>
        <definition>std::fstream interop_data</definition>
        <argsstring></argsstring>
        <name>interop_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="6" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ecc__test_8cpp_1a1ab2f976354f18bc2c344826274fbab9" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool write_mode</definition>
        <argsstring></argsstring>
        <name>write_mode</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="7" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ecc__test_8cpp_1a6863d5cc20ab9672d101248614ffcbad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_do</definition>
        <argsstring>(const char *const data, size_t len)</argsstring>
        <name>interop_do</name>
        <param>
          <type>const char *const</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="9" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="9" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1a06884382d2625c8a99560ccbb9e966d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_do</definition>
        <argsstring>(const fc::ecc::public_key_data &amp;data)</argsstring>
        <name>interop_do</name>
        <param>
          <type>const <ref refid="namespacefc_1_1ecc_1af1dc74a983548f8f8f167644826acced" kindref="member">fc::ecc::public_key_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="25" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1a64028a3551331dec7d94d79fe42ffdae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_do</definition>
        <argsstring>(const fc::ecc::private_key_secret &amp;data)</argsstring>
        <name>interop_do</name>
        <param>
          <type>const <ref refid="namespacefc_1_1ecc_1aac05b92a409a08d0d6b06ce2d07eb54b" kindref="member">fc::ecc::private_key_secret</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="29" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1a0e563f19538c4939750c7cdebd42957f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_do</definition>
        <argsstring>(const fc::ecc::public_key_point_data &amp;data)</argsstring>
        <name>interop_do</name>
        <param>
          <type>const <ref refid="namespacefc_1_1ecc_1aaa24efab885be0448294c8ac00d3b1ab" kindref="member">fc::ecc::public_key_point_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="33" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1a202f241e42402e4f5930f4f614bf9422" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_do</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>interop_do</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="37" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1a4c573466129206d7e4f64ce4fddbdd66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_do</definition>
        <argsstring>(const fc::sha512 &amp;data)</argsstring>
        <name>interop_do</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">fc::sha512</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="41" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1aa7776e5e486fb3496870f4af4a562e75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_do</definition>
        <argsstring>(fc::ecc::compact_signature &amp;data)</argsstring>
        <name>interop_do</name>
        <param>
          <type><ref refid="namespacefc_1_1ecc_1a38a548547320ad8e9bf07b7dbc875e9d" kindref="member">fc::ecc::compact_signature</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="45" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1aa4ba3fe8cf743e36c07a7dfa36b31011" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void interop_file</definition>
        <argsstring>(const char *const name)</argsstring>
        <name>interop_file</name>
        <param>
          <type>const char *const</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="54" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="ecc__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/crypto/ecc_test.cpp" line="65" column="1" bodyfile="libraries/fc/tests/crypto/ecc_test.cpp" bodystart="65" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/crypto/ecc_test.cpp"/>
  </compounddef>
</doxygen>
