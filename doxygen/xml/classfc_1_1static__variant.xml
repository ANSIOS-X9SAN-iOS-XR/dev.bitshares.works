<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1static__variant" kind="class" language="C++" prot="public">
    <compoundname>fc::static_variant</compoundname>
    <includes refid="raw__fwd_8hpp" local="no">raw_fwd.hpp</includes>
    <innerclass refid="structfc_1_1static__variant_1_1tag" prot="public">fc::static_variant::tag</innerclass>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Types</declname>
        <defname>Types</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" prot="public" static="no">
        <type>int64_t</type>
        <definition>using fc::static_variant&lt; Types &gt;::tag_type =  int64_t</definition>
        <argsstring></argsstring>
        <name>tag_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="252" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" prot="protected" static="no">
        <type>typename std::enable_if&lt; <ref refid="structfc_1_1impl_1_1position" kindref="compound">impl::position</ref>&lt; X, Types... &gt;::pos !=-1, X &gt;::type</type>
        <definition>using fc::static_variant&lt; Types &gt;::type_in_typelist =  typename std::enable_if&lt;impl::position&lt;X, Types...&gt;::pos != -1, X&gt;::type</definition>
        <argsstring></argsstring>
        <name>type_in_typelist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="259" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classfc_1_1static__variant_1af7bccf217a452e1673051f613c6f844a" prot="protected" static="no" mutable="no">
        <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
        <definition>tag_type fc::static_variant&lt; Types &gt;::_tag</definition>
        <argsstring></argsstring>
        <name>_tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="261" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1static__variant_1a48520140372c08b994d3ca27a683f9c9" prot="protected" static="no" mutable="no">
        <type><ref refid="classfc_1_1impl_1_1dynamic__storage" kindref="compound">impl::dynamic_storage</ref></type>
        <definition>impl::dynamic_storage fc::static_variant&lt; Types &gt;::storage</definition>
        <argsstring></argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="262" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1static__variant_1a6010df8092a905016b6bf328ef0b2274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StaticVariant</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct impl::copy_construct</definition>
        <argsstring></argsstring>
        <name>impl::copy_construct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="295" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1static__variant_1ae3385fa2f5b46bf5d07c0024550bdf75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StaticVariant</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct impl::move_construct</definition>
        <argsstring></argsstring>
        <name>impl::move_construct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="297" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1static__variant_1a4f8bf4c32a2bf2ce7c91a81a1fcd3b8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const static_variant &amp;a, const static_variant &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="355" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1static__variant_1a7930994fcdde21ebc7429a20aff0ffb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const static_variant &amp;a, const static_variant &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="359" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="359" bodyend="362"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classfc_1_1static__variant_1abd3a3e46a8f4558e5b0893a662415bf7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" kindref="member">type_in_typelist</ref>&lt;X&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::static_variant&lt; Types &gt;::init</definition>
        <argsstring>(const X &amp;x)</argsstring>
        <name>init</name>
        <param>
          <type>const X &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="265" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a92f1fb0160ff6e8649a3da77ff4774a8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" kindref="member">type_in_typelist</ref>&lt;X&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::static_variant&lt; Types &gt;::init</definition>
        <argsstring>(X &amp;&amp;x)</argsstring>
        <name>init</name>
        <param>
          <type>X &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="272" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a7e3fa4109db2099c03f2ab3b954b8660" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::static_variant&lt; Types &gt;::init_from_tag</definition>
        <argsstring>(tag_type tag)</argsstring>
        <name>init_from_tag</name>
        <param>
          <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="278" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="278" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a53f125b737e8ea2c32e11b9614baebc5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::static_variant&lt; Types &gt;::clean</definition>
        <argsstring>()</argsstring>
        <name>clean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="287" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="287" bodyend="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1static__variant_1af150f40b5b3860e28be1ef0710dc9718" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::static_variant&lt; Types &gt;::static_variant</definition>
        <argsstring>()</argsstring>
        <name>static_variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="305" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a2b4e0ec9f3fa4383f9030e92281388ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Other</declname>
            <defname>Other</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::static_variant&lt; Types &gt;::static_variant</definition>
        <argsstring>(const static_variant&lt; Other... &gt; &amp;cpy)</argsstring>
        <name>static_variant</name>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref>&lt; Other... &gt; &amp;</type>
          <declname>cpy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="311" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1ad8841f15bfeead64a55d4cb01a6d93bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::static_variant&lt; Types &gt;::static_variant</definition>
        <argsstring>(const static_variant &amp;cpy)</argsstring>
        <name>static_variant</name>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
          <declname>cpy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="316" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a163c0efde242bed98389f8e47a95284c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::static_variant&lt; Types &gt;::static_variant</definition>
        <argsstring>(static_variant &amp;&amp;mv)</argsstring>
        <name>static_variant</name>
        <param>
          <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;&amp;</type>
          <declname>mv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="321" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="321" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a38f834c72dfffa8f6f2b9cd75ab0a289" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" kindref="member">type_in_typelist</ref>&lt;X&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::static_variant&lt; Types &gt;::static_variant</definition>
        <argsstring>(const X &amp;v)</argsstring>
        <name>static_variant</name>
        <param>
          <type>const X &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="327" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a5d668b4e7e178afd9d7c83fa2776b9b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::static_variant&lt; Types &gt;::~static_variant</definition>
        <argsstring>()</argsstring>
        <name>~static_variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="331" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="331" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a32f2b7544df5c070ac8d4c935fe9036c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" kindref="member">type_in_typelist</ref>&lt;X&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
        <definition>static_variant&amp; fc::static_variant&lt; Types &gt;::operator=</definition>
        <argsstring>(const X &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const X &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="336" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="336" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1aba7bff21c84651e5c173e83970e89068" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
        <definition>static_variant&amp; fc::static_variant&lt; Types &gt;::operator=</definition>
        <argsstring>(const static_variant &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="341" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="341" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1abd8fecdd03a65f1045cdac2875eddd88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;</type>
        <definition>static_variant&amp; fc::static_variant&lt; Types &gt;::operator=</definition>
        <argsstring>(static_variant &amp;&amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref> &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="348" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a9dc9edbccc8adc738c5f86dff8fdfc62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" kindref="member">type_in_typelist</ref>&lt;X&gt;</defval>
          </param>
        </templateparamlist>
        <type>X &amp;</type>
        <definition>X&amp; fc::static_variant&lt; Types &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="365" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="365" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a483073cdc1ddcb54c05cb05685356be0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" kindref="member">type_in_typelist</ref>&lt;X&gt;</defval>
          </param>
        </templateparamlist>
        <type>const X &amp;</type>
        <definition>const X&amp; fc::static_variant&lt; Types &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="373" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="373" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a925e65f1cb62cb92e017aa720b66697a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(visitor &amp;v)</argsstring>
        <name>visit</name>
        <param>
          <type>visitor &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="381" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="381" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1ada2479eb3f11e2067bb81766864faede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(const visitor &amp;v)</argsstring>
        <name>visit</name>
        <param>
          <type>const visitor &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="386" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="386" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1ab55fdf4f0a8aa9959af125b8b857fd6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(visitor &amp;v) const</argsstring>
        <name>visit</name>
        <param>
          <type>visitor &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="391" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a1a26a7e9eea0491e7e4d8a0eaf049c31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(const visitor &amp;v) const</argsstring>
        <name>visit</name>
        <param>
          <type>const visitor &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="396" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="396" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1ac6bbf0562854761c863161839b699155" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::static_variant&lt; Types &gt;::set_which</definition>
        <argsstring>(tag_type w)</argsstring>
        <name>set_which</name>
        <param>
          <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="433" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="433" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a40403826f654825ed6081aff5c50624f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
        <definition>tag_type fc::static_variant&lt; Types &gt;::which</definition>
        <argsstring>() const</argsstring>
        <name>which</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="440" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="440" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a38c5425760ec21725f8fb9c2018b3cb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool fc::static_variant&lt; Types &gt;::is_type</definition>
        <argsstring>() const</argsstring>
        <name>is_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="443" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="443" bodyend="443"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1static__variant_1aea20045d8096843fb3680349e07ac93d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>static visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(tag_type tag, visitor &amp;v, void *data)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type>visitor &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="401" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="401" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1adc071b36a163f5b7ac22e084d7724681" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>static visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(tag_type tag, const visitor &amp;v, void *data)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const visitor &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="409" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="409" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a95ba0f5aed51c46206170e64eba38ec7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>static visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(tag_type tag, visitor &amp;v, const void *data)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type>visitor &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="417" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="417" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a9c41da3c7d5aa4c09b46eaa7ead9a8c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename visitor</type>
          </param>
        </templateparamlist>
        <type>visitor::result_type</type>
        <definition>static visitor::result_type fc::static_variant&lt; Types &gt;::visit</definition>
        <argsstring>(tag_type tag, const visitor &amp;v, const void *data)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" kindref="member">tag_type</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const visitor &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="425" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="425" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1static__variant_1a6f26aa8783eaa45c7032ab03ba538da2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int fc::static_variant&lt; Types &gt;::count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="432" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="432" bodyend="432"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5068">
        <label>fc::static_variant&lt; Types &gt;</label>
        <link refid="classfc_1_1static__variant"/>
        <childnode refid="5069" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
      <node id="5069">
        <label>fc::impl::dynamic_storage</label>
        <link refid="classfc_1_1impl_1_1dynamic__storage"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="27" column="1" bodyfile="libraries/fc/include/fc/io/raw_fwd.hpp" bodystart="27" bodyend="-1"/>
    <listofallmembers>
      <member refid="classfc_1_1static__variant_1af7bccf217a452e1673051f613c6f844a" prot="protected" virt="non-virtual"><scope>fc::static_variant</scope><name>_tag</name></member>
      <member refid="classfc_1_1static__variant_1a53f125b737e8ea2c32e11b9614baebc5" prot="protected" virt="non-virtual"><scope>fc::static_variant</scope><name>clean</name></member>
      <member refid="classfc_1_1static__variant_1a6f26aa8783eaa45c7032ab03ba538da2" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>count</name></member>
      <member refid="classfc_1_1static__variant_1a9dc9edbccc8adc738c5f86dff8fdfc62" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>get</name></member>
      <member refid="classfc_1_1static__variant_1a483073cdc1ddcb54c05cb05685356be0" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>get</name></member>
      <member refid="classfc_1_1static__variant_1a6010df8092a905016b6bf328ef0b2274" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>impl::copy_construct</name></member>
      <member refid="classfc_1_1static__variant_1ae3385fa2f5b46bf5d07c0024550bdf75" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>impl::move_construct</name></member>
      <member refid="classfc_1_1static__variant_1abd3a3e46a8f4558e5b0893a662415bf7" prot="protected" virt="non-virtual"><scope>fc::static_variant</scope><name>init</name></member>
      <member refid="classfc_1_1static__variant_1a92f1fb0160ff6e8649a3da77ff4774a8" prot="protected" virt="non-virtual"><scope>fc::static_variant</scope><name>init</name></member>
      <member refid="classfc_1_1static__variant_1a7e3fa4109db2099c03f2ab3b954b8660" prot="protected" virt="non-virtual"><scope>fc::static_variant</scope><name>init_from_tag</name></member>
      <member refid="classfc_1_1static__variant_1a38c5425760ec21725f8fb9c2018b3cb7" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>is_type</name></member>
      <member refid="classfc_1_1static__variant_1a7930994fcdde21ebc7429a20aff0ffb0" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>operator&lt;</name></member>
      <member refid="classfc_1_1static__variant_1a32f2b7544df5c070ac8d4c935fe9036c" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>operator=</name></member>
      <member refid="classfc_1_1static__variant_1aba7bff21c84651e5c173e83970e89068" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>operator=</name></member>
      <member refid="classfc_1_1static__variant_1abd8fecdd03a65f1045cdac2875eddd88" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>operator=</name></member>
      <member refid="classfc_1_1static__variant_1a4f8bf4c32a2bf2ce7c91a81a1fcd3b8c" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>operator==</name></member>
      <member refid="classfc_1_1static__variant_1ac6bbf0562854761c863161839b699155" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>set_which</name></member>
      <member refid="classfc_1_1static__variant_1af150f40b5b3860e28be1ef0710dc9718" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>static_variant</name></member>
      <member refid="classfc_1_1static__variant_1a2b4e0ec9f3fa4383f9030e92281388ff" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>static_variant</name></member>
      <member refid="classfc_1_1static__variant_1ad8841f15bfeead64a55d4cb01a6d93bc" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>static_variant</name></member>
      <member refid="classfc_1_1static__variant_1a163c0efde242bed98389f8e47a95284c" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>static_variant</name></member>
      <member refid="classfc_1_1static__variant_1a38f834c72dfffa8f6f2b9cd75ab0a289" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>static_variant</name></member>
      <member refid="classfc_1_1static__variant_1a48520140372c08b994d3ca27a683f9c9" prot="protected" virt="non-virtual"><scope>fc::static_variant</scope><name>storage</name></member>
      <member refid="classfc_1_1static__variant_1aba87b38cb3bcf33da8b38323211fdcb7" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>tag_type</name></member>
      <member refid="classfc_1_1static__variant_1a7cd70536ee7e05b71213f17b17e6d6c2" prot="protected" virt="non-virtual"><scope>fc::static_variant</scope><name>type_in_typelist</name></member>
      <member refid="classfc_1_1static__variant_1a925e65f1cb62cb92e017aa720b66697a" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1ada2479eb3f11e2067bb81766864faede" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1ab55fdf4f0a8aa9959af125b8b857fd6d" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1a1a26a7e9eea0491e7e4d8a0eaf049c31" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1aea20045d8096843fb3680349e07ac93d" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1adc071b36a163f5b7ac22e084d7724681" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1a95ba0f5aed51c46206170e64eba38ec7" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1a9c41da3c7d5aa4c09b46eaa7ead9a8c5" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>visit</name></member>
      <member refid="classfc_1_1static__variant_1a40403826f654825ed6081aff5c50624f" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>which</name></member>
      <member refid="classfc_1_1static__variant_1a5d668b4e7e178afd9d7c83fa2776b9b0" prot="public" virt="non-virtual"><scope>fc::static_variant</scope><name>~static_variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
