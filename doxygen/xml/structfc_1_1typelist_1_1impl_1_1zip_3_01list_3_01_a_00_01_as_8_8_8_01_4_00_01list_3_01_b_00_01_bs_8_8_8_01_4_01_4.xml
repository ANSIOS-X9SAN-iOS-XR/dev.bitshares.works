<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structfc_1_1typelist_1_1impl_1_1zip_3_01list_3_01_a_00_01_as_8_8_8_01_4_00_01list_3_01_b_00_01_bs_8_8_8_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>fc::typelist::impl::zip&lt; list&lt; A, As... &gt;, list&lt; B, Bs... &gt; &gt;</compoundname>
    <includes refid="typelist_8hpp" local="no">typelist.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename A</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>As</declname>
        <defname>As</defname>
      </param>
      <param>
        <type>typename B</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Bs</declname>
        <defname>Bs</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfc_1_1typelist_1_1impl_1_1zip_3_01list_3_01_a_00_01_as_8_8_8_01_4_00_01list_3_01_b_00_01_bs_8_8_8_01_4_01_4_1a0eb41f1bd3fd0742916ca803e3504512" prot="public" static="no">
        <type>typename <ref refid="structfc_1_1typelist_1_1impl_1_1concat" kindref="compound">concat</ref>&lt; list&lt; list&lt; A, B &gt;&gt;, typename <ref refid="structfc_1_1typelist_1_1impl_1_1zip" kindref="compound">zip</ref>&lt; list&lt; As... &gt;, list&lt; Bs... &gt;&gt;::<ref refid="structfc_1_1typelist_1_1impl_1_1zip_3_01list_3_01_a_00_01_as_8_8_8_01_4_00_01list_3_01_b_00_01_bs_8_8_8_01_4_01_4_1a0eb41f1bd3fd0742916ca803e3504512" kindref="member">type</ref> &gt;::<ref refid="structfc_1_1typelist_1_1impl_1_1zip_3_01list_3_01_a_00_01_as_8_8_8_01_4_00_01list_3_01_b_00_01_bs_8_8_8_01_4_01_4_1a0eb41f1bd3fd0742916ca803e3504512" kindref="member">type</ref></type>
        <definition>using fc::typelist::impl::zip&lt; list&lt; A, As... &gt;, list&lt; B, Bs... &gt; &gt;::type =  typename concat&lt;list&lt;list&lt;A, B&gt;&gt;, typename zip&lt;list&lt;As...&gt;, list&lt;Bs...&gt;&gt;::type&gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/reflect/typelist.hpp" line="128" column="1" bodyfile="libraries/fc/include/fc/reflect/typelist.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/reflect/typelist.hpp" line="127" column="1" bodyfile="libraries/fc/include/fc/reflect/typelist.hpp" bodystart="127" bodyend="129"/>
    <listofallmembers>
      <member refid="structfc_1_1typelist_1_1impl_1_1zip_3_01list_3_01_a_00_01_as_8_8_8_01_4_00_01list_3_01_b_00_01_bs_8_8_8_01_4_01_4_1a0eb41f1bd3fd0742916ca803e3504512" prot="public" virt="non-virtual"><scope>fc::typelist::impl::zip&lt; list&lt; A, As... &gt;, list&lt; B, Bs... &gt; &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
