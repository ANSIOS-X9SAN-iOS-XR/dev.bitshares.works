<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="json__tests_8cpp" kind="file" language="C++">
    <compoundname>json_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="variant_8hpp" local="no">fc/variant.hpp</includes>
    <includes refid="variant__object_8hpp" local="no">fc/variant_object.hpp</includes>
    <includes refid="exception_8hpp" local="no">fc/exception/exception.hpp</includes>
    <includes refid="buffered__iostream_8hpp" local="no">fc/io/buffered_iostream.hpp</includes>
    <includes refid="fstream_8hpp" local="no">fc/io/fstream.hpp</includes>
    <includes refid="iostream_8hpp" local="no">fc/io/iostream.hpp</includes>
    <includes refid="json_8hpp" local="no">fc/io/json.hpp</includes>
    <includes refid="sstream_8hpp" local="no">fc/io/sstream.hpp</includes>
    <includes local="no">fstream</includes>
    <incdepgraph>
      <node id="38962">
        <label>boost/endian/buffers.hpp</label>
      </node>
      <node id="38985">
        <label>fc/io/iostream.hpp</label>
        <link refid="iostream_8hpp"/>
        <childnode refid="38943" relation="include">
        </childnode>
        <childnode refid="38961" relation="include">
        </childnode>
      </node>
      <node id="38983">
        <label>functional</label>
      </node>
      <node id="38971">
        <label>boost/preprocessor/seq/seq.hpp</label>
      </node>
      <node id="38950">
        <label>assert.h</label>
      </node>
      <node id="38986">
        <label>fc/io/fstream.hpp</label>
        <link refid="fstream_8hpp"/>
        <childnode refid="38987" relation="include">
        </childnode>
        <childnode refid="38985" relation="include">
        </childnode>
        <childnode refid="38988" relation="include">
        </childnode>
        <childnode refid="38943" relation="include">
        </childnode>
      </node>
      <node id="38949">
        <label>fc/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="38950" relation="include">
        </childnode>
        <childnode refid="38951" relation="include">
        </childnode>
      </node>
      <node id="38990">
        <label>fc/io/sstream.hpp</label>
        <link refid="sstream_8hpp"/>
        <childnode refid="38985" relation="include">
        </childnode>
        <childnode refid="38966" relation="include">
        </childnode>
      </node>
      <node id="38967">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="38984">
        <label>fc/io/buffered_iostream.hpp</label>
        <link refid="buffered__iostream_8hpp"/>
        <childnode refid="38985" relation="include">
        </childnode>
      </node>
      <node id="38937">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="38965">
        <label>fc/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="38966" relation="include">
        </childnode>
        <childnode refid="38949" relation="include">
        </childnode>
        <childnode refid="38961" relation="include">
        </childnode>
      </node>
      <node id="38958">
        <label>fc/config.hpp</label>
        <link refid="fc_2include_2fc_2config_8hpp"/>
      </node>
      <node id="38987">
        <label>fc/filesystem.hpp</label>
        <link refid="filesystem_8hpp"/>
        <childnode refid="38951" relation="include">
        </childnode>
        <childnode refid="38943" relation="include">
        </childnode>
        <childnode refid="38974" relation="include">
        </childnode>
        <childnode refid="38949" relation="include">
        </childnode>
        <childnode refid="38966" relation="include">
        </childnode>
      </node>
      <node id="38960">
        <label>stdint.h</label>
      </node>
      <node id="38954">
        <label>fc/container/flat_fwd.hpp</label>
        <link refid="flat__fwd_8hpp"/>
        <childnode refid="38955" relation="include">
        </childnode>
        <childnode refid="38956" relation="include">
        </childnode>
        <childnode refid="38957" relation="include">
        </childnode>
        <childnode refid="38958" relation="include">
        </childnode>
      </node>
      <node id="38977">
        <label>fc/log/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="38958" relation="include">
        </childnode>
        <childnode refid="38978" relation="include">
        </childnode>
        <childnode refid="38979" relation="include">
        </childnode>
        <childnode refid="38980" relation="include">
        </childnode>
        <childnode refid="38940" relation="include">
        </childnode>
        <childnode refid="38943" relation="include">
        </childnode>
        <childnode refid="38968" relation="include">
        </childnode>
        <childnode refid="38969" relation="include">
        </childnode>
        <childnode refid="38970" relation="include">
        </childnode>
        <childnode refid="38971" relation="include">
        </childnode>
        <childnode refid="38972" relation="include">
        </childnode>
        <childnode refid="38981" relation="include">
        </childnode>
      </node>
      <node id="38961">
        <label>string</label>
      </node>
      <node id="38942">
        <label>map</label>
      </node>
      <node id="38946">
        <label>unordered_set</label>
      </node>
      <node id="38979">
        <label>fc/log/appender.hpp</label>
        <link refid="appender_8hpp"/>
        <childnode refid="38943" relation="include">
        </childnode>
        <childnode refid="38961" relation="include">
        </childnode>
      </node>
      <node id="38981">
        <label>boost/preprocessor/punctuation/paren.hpp</label>
      </node>
      <node id="38982">
        <label>exception</label>
      </node>
      <node id="38988">
        <label>fstream</label>
      </node>
      <node id="38980">
        <label>fc/log/log_message.hpp</label>
        <link refid="log__message_8hpp"/>
        <childnode refid="38958" relation="include">
        </childnode>
        <childnode refid="38978" relation="include">
        </childnode>
        <childnode refid="38975" relation="include">
        </childnode>
        <childnode refid="38943" relation="include">
        </childnode>
        <childnode refid="38961" relation="include">
        </childnode>
      </node>
      <node id="38963">
        <label>boost/multi_index_container_fwd.hpp</label>
      </node>
      <node id="38938">
        <label>fc/variant.hpp</label>
        <link refid="variant_8hpp"/>
        <childnode refid="38939" relation="include">
        </childnode>
        <childnode refid="38940" relation="include">
        </childnode>
        <childnode refid="38941" relation="include">
        </childnode>
        <childnode refid="38942" relation="include">
        </childnode>
        <childnode refid="38943" relation="include">
        </childnode>
        <childnode refid="38944" relation="include">
        </childnode>
        <childnode refid="38945" relation="include">
        </childnode>
        <childnode refid="38946" relation="include">
        </childnode>
        <childnode refid="38947" relation="include">
        </childnode>
        <childnode refid="38948" relation="include">
        </childnode>
        <childnode refid="38949" relation="include">
        </childnode>
        <childnode refid="38952" relation="include">
        </childnode>
        <childnode refid="38954" relation="include">
        </childnode>
        <childnode refid="38959" relation="include">
        </childnode>
        <childnode refid="38962" relation="include">
        </childnode>
        <childnode refid="38963" relation="include">
        </childnode>
        <childnode refid="38964" relation="include">
        </childnode>
      </node>
      <node id="38978">
        <label>fc/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="38960" relation="include">
        </childnode>
        <childnode refid="38961" relation="include">
        </childnode>
        <childnode refid="38949" relation="include">
        </childnode>
        <childnode refid="38964" relation="include">
        </childnode>
      </node>
      <node id="38972">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="38970">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="38952">
        <label>fc/uint128.hpp</label>
        <link refid="uint128_8hpp"/>
        <childnode refid="38953" relation="include">
        </childnode>
      </node>
      <node id="38959">
        <label>fc/crypto/hex.hpp</label>
        <link refid="hex_8hpp"/>
        <childnode refid="38960" relation="include">
        </childnode>
        <childnode refid="38961" relation="include">
        </childnode>
        <childnode refid="38947" relation="include">
        </childnode>
      </node>
      <node id="38957">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="38966">
        <label>fc/fwd.hpp</label>
        <link refid="fwd_8hpp"/>
      </node>
      <node id="38948">
        <label>string.h</label>
      </node>
      <node id="38956">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="38975">
        <label>fc/variant_object.hpp</label>
        <link refid="variant__object_8hpp"/>
        <childnode refid="38938" relation="include">
        </childnode>
        <childnode refid="38943" relation="include">
        </childnode>
      </node>
      <node id="38974">
        <label>fc/reflect/typename.hpp</label>
        <link refid="typename_8hpp"/>
        <childnode refid="38939" relation="include">
        </childnode>
        <childnode refid="38941" relation="include">
        </childnode>
        <childnode refid="38942" relation="include">
        </childnode>
        <childnode refid="38944" relation="include">
        </childnode>
        <childnode refid="38961" relation="include">
        </childnode>
        <childnode refid="38947" relation="include">
        </childnode>
        <childnode refid="38949" relation="include">
        </childnode>
        <childnode refid="38965" relation="include">
        </childnode>
        <childnode refid="38954" relation="include">
        </childnode>
      </node>
      <node id="38947">
        <label>vector</label>
      </node>
      <node id="38989">
        <label>fc/io/json.hpp</label>
        <link refid="json_8hpp"/>
        <childnode refid="38938" relation="include">
        </childnode>
        <childnode refid="38987" relation="include">
        </childnode>
      </node>
      <node id="38976">
        <label>fc/exception/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="38977" relation="include">
        </childnode>
        <childnode refid="38949" relation="include">
        </childnode>
        <childnode refid="38982" relation="include">
        </childnode>
        <childnode refid="38983" relation="include">
        </childnode>
        <childnode refid="38945" relation="include">
        </childnode>
      </node>
      <node id="38951">
        <label>utility</label>
      </node>
      <node id="38939">
        <label>array</label>
      </node>
      <node id="38953">
        <label>boost/multiprecision/integer.hpp</label>
      </node>
      <node id="38940">
        <label>cstddef</label>
      </node>
      <node id="38941">
        <label>deque</label>
      </node>
      <node id="38945">
        <label>unordered_map</label>
      </node>
      <node id="38969">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="38955">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="38964">
        <label>fc/reflect/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="38965" relation="include">
        </childnode>
        <childnode refid="38967" relation="include">
        </childnode>
        <childnode refid="38968" relation="include">
        </childnode>
        <childnode refid="38969" relation="include">
        </childnode>
        <childnode refid="38970" relation="include">
        </childnode>
        <childnode refid="38971" relation="include">
        </childnode>
        <childnode refid="38972" relation="include">
        </childnode>
        <childnode refid="38960" relation="include">
        </childnode>
        <childnode refid="38948" relation="include">
        </childnode>
        <childnode refid="38973" relation="include">
        </childnode>
        <childnode refid="38974" relation="include">
        </childnode>
      </node>
      <node id="38936">
        <label>libraries/fc/tests/io/json_tests.cpp</label>
        <link refid="json__tests_8cpp"/>
        <childnode refid="38937" relation="include">
        </childnode>
        <childnode refid="38938" relation="include">
        </childnode>
        <childnode refid="38975" relation="include">
        </childnode>
        <childnode refid="38976" relation="include">
        </childnode>
        <childnode refid="38984" relation="include">
        </childnode>
        <childnode refid="38986" relation="include">
        </childnode>
        <childnode refid="38985" relation="include">
        </childnode>
        <childnode refid="38989" relation="include">
        </childnode>
        <childnode refid="38990" relation="include">
        </childnode>
        <childnode refid="38988" relation="include">
        </childnode>
      </node>
      <node id="38973">
        <label>type_traits</label>
      </node>
      <node id="38944">
        <label>set</label>
      </node>
      <node id="38943">
        <label>memory</label>
      </node>
      <node id="38968">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="json__tests_8cpp_1afcd241b659c8d5c9ac37bb14bc03689e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void replace_some</definition>
        <argsstring>(std::string &amp;str)</argsstring>
        <name>replace_some</name>
        <param>
          <type>std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="17" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="17" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1afd1b64069d8571742e35bcb4bb916e40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_fail_string</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>test_fail_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="24" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="24" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1ae6871e16d82abfb62f5f445f4f8bab5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_fail_stream</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>test_fail_stream</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="34" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="34" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1a94bf153b80274419d7ca1db225e561a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_fail_file</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>test_fail_file</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="60" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="60" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1ae0b1934d640c610b2a0ca9aa42a90f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(imbalanced_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>imbalanced_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="76" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="76" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1ad11da545b639c9c75cef203fa07addbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool equal</definition>
        <argsstring>(const fc::variant &amp;a, const fc::variant &amp;b)</argsstring>
        <name>equal</name>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">fc::variant</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">fc::variant</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="127" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="127" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1a134fac862d9bbc1906ae9590f9b1e817" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_recursive</definition>
        <argsstring>(const fc::variant &amp;v)</argsstring>
        <name>test_recursive</name>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">fc::variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="178" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="178" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1ac791cf5957864765358b742be9b633a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(structured_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>structured_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="211" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="211" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1ab81b94f2e5c34bcc51edec94fb9cd4fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(precision_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>precision_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="312" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="312" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1a5a96693ad2cfbb7176ea3f0103534d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(recursion_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>recursion_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="324" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="324" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="json__tests_8cpp_1a98e11a191dff8dd4ad5133e97e406364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(rethrow_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>rethrow_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/io/json_tests.cpp" line="335" column="1" bodyfile="libraries/fc/tests/io/json_tests.cpp" bodystart="335" bodyend="374"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/io/json_tests.cpp"/>
  </compounddef>
</doxygen>
