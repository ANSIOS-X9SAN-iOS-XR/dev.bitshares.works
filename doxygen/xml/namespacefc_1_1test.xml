<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc_1_1test" kind="namespace" language="C++">
    <compoundname>fc::test</compoundname>
    <innerclass refid="structfc_1_1test_1_1item" prot="public">fc::test::item</innerclass>
    <innerclass refid="structfc_1_1test_1_1item__wrapper" prot="public">fc::test::item_wrapper</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1test_1a14b388c6351b78f467123bea425553ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::test::operator==</definition>
        <argsstring>(const item &amp;a, const item &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item" kindref="compound">item</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item" kindref="compound">item</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/serialization_test.cpp" line="10" column="1" bodyfile="libraries/fc/tests/serialization_test.cpp" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1test_1a93c7b2589bc07283550a05f3d8031336" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::test::operator&lt;</definition>
        <argsstring>(const item &amp;a, const item &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item" kindref="compound">item</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item" kindref="compound">item</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/serialization_test.cpp" line="11" column="1" bodyfile="libraries/fc/tests/serialization_test.cpp" bodystart="35" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1test_1a4dab65738d59bf779c14bf6d18490cfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::test::operator==</definition>
        <argsstring>(const item_wrapper &amp;a, const item_wrapper &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item__wrapper" kindref="compound">item_wrapper</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item__wrapper" kindref="compound">item_wrapper</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/serialization_test.cpp" line="20" column="1" bodyfile="libraries/fc/tests/serialization_test.cpp" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1test_1acfeeb241b551e5ed40df86931fb39c75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::test::operator&lt;</definition>
        <argsstring>(const item_wrapper &amp;a, const item_wrapper &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item__wrapper" kindref="compound">item_wrapper</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1test_1_1item__wrapper" kindref="compound">item_wrapper</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/tests/serialization_test.cpp" line="22" column="1" bodyfile="libraries/fc/tests/serialization_test.cpp" bodystart="22" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/tests/serialization_test.cpp" line="7" column="1"/>
  </compounddef>
</doxygen>
