<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1htlc__redeemed__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::htlc_redeemed_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="htlc_8hpp" local="no">htlc.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1_1fee__parameters__type" prot="public">graphene::chain::htlc_redeemed_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a873c27bdd351b1e917d9c1c3b2f9d111" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a4b58c1f668e22dcd9fe62fe18b3b0843" kindref="member">htlc_id_type</ref></type>
        <definition>htlc_id_type graphene::chain::htlc_redeemed_operation::htlc_id</definition>
        <argsstring></argsstring>
        <name>htlc_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="137" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a8d13d0c60e6070649bf15b8c1298dd08" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::htlc_redeemed_operation::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="138" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a9bcb0cf39d28ccca8dabca51571c980c" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::htlc_redeemed_operation::to</definition>
        <argsstring></argsstring>
        <name>to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="138" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1af0b3a726ab76cb2f0f83df02b3d0b400" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::htlc_redeemed_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="139" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a13be1d6635d486f8285c983f122c3fee" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::htlc_redeemed_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="140" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1ab8435798ef28153e6296928cd9c6a5c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::htlc_redeemed_operation::htlc_redeemed_operation</definition>
        <argsstring>()</argsstring>
        <name>htlc_redeemed_operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="128" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a88195e287f3b57847d8733647241683a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::htlc_redeemed_operation::htlc_redeemed_operation</definition>
        <argsstring>(htlc_id_type htlc_id, account_id_type from, account_id_type to, asset amount)</argsstring>
        <name>htlc_redeemed_operation</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a4b58c1f668e22dcd9fe62fe18b3b0843" kindref="member">htlc_id_type</ref></type>
          <declname>htlc_id</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="129" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="129" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1ac1190ca6ec5702f358187d05b2d49734" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::htlc_redeemed_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="132" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a6bf460149e9823afc058bf7758431adc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::htlc_redeemed_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="133" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1htlc__redeemed__operation_1aa222fd73a5c16c5bf371d3b2bcf5c59f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::htlc_redeemed_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="135" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>virtual op to assist with notifying related parties </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2594">
        <label>graphene::chain::htlc_redeemed_operation</label>
        <link refid="structgraphene_1_1chain_1_1htlc__redeemed__operation"/>
        <childnode refid="2595" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2595">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2596">
        <label>graphene::chain::htlc_redeemed_operation</label>
        <link refid="structgraphene_1_1chain_1_1htlc__redeemed__operation"/>
        <childnode refid="2597" relation="public-inheritance">
        </childnode>
        <childnode refid="2598" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="2597">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="2598">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="2599" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="2599">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/htlc.hpp" line="125" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/htlc.hpp" bodystart="124" bodyend="141"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1af0b3a726ab76cb2f0f83df02b3d0b400" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1aa222fd73a5c16c5bf371d3b2bcf5c59f" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::htlc_redeemed_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a13be1d6635d486f8285c983f122c3fee" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1ac1190ca6ec5702f358187d05b2d49734" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a8d13d0c60e6070649bf15b8c1298dd08" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>from</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a873c27bdd351b1e917d9c1c3b2f9d111" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>htlc_id</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1ab8435798ef28153e6296928cd9c6a5c5" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>htlc_redeemed_operation</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a88195e287f3b57847d8733647241683a" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>htlc_redeemed_operation</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a9bcb0cf39d28ccca8dabca51571c980c" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>to</name></member>
      <member refid="structgraphene_1_1chain_1_1htlc__redeemed__operation_1a6bf460149e9823afc058bf7758431adc" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aba2bfdabb6d782e8b7843a363e85c69e" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_redeemed_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
