<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1call__order__update__evaluator" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::call_order_update_evaluator</compoundname>
    <basecompoundref refid="classgraphene_1_1chain_1_1evaluator" prot="public" virt="non-virtual">graphene::chain::evaluator&lt; call_order_update_evaluator &gt;</basecompoundref>
    <includes refid="market__evaluator_8hpp" local="no">market_evaluator.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1aba9119e6163ceaa784de76a0f642a051" prot="public" static="no">
        <type><ref refid="structgraphene_1_1protocol_1_1call__order__update__operation" kindref="compound">call_order_update_operation</ref></type>
        <definition>typedef call_order_update_operation graphene::chain::call_order_update_evaluator::operation_type</definition>
        <argsstring></argsstring>
        <name>operation_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="78" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1a99e7a0e48a2f9135d61828fd321a5e96" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::chain::call_order_update_evaluator::_closing_order</definition>
        <argsstring></argsstring>
        <name>_closing_order</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="83" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1a698b868b095b2cf519ca25322cf6e643" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> *</type>
        <definition>const asset_object* graphene::chain::call_order_update_evaluator::_debt_asset</definition>
        <argsstring></argsstring>
        <name>_debt_asset</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="84" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1ad70fe7dd1b62c6565c7ffc11dc619d76" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref> *</type>
        <definition>const account_object* graphene::chain::call_order_update_evaluator::_paying_account</definition>
        <argsstring></argsstring>
        <name>_paying_account</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="85" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1a9a8399e3c847037ef34335819bb8ee35" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref> *</type>
        <definition>const call_order_object* graphene::chain::call_order_update_evaluator::_order</definition>
        <argsstring></argsstring>
        <name>_order</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="86" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1ac1098748c1ad9e5523f06542db808afa" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref> *</type>
        <definition>const asset_bitasset_data_object* graphene::chain::call_order_update_evaluator::_bitasset_data</definition>
        <argsstring></argsstring>
        <name>_bitasset_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="87" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1a4a3ef879bfc68b08b84465a570e3cf06" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1asset__dynamic__data__object" kindref="compound">asset_dynamic_data_object</ref> *</type>
        <definition>const asset_dynamic_data_object* graphene::chain::call_order_update_evaluator::_dynamic_data_obj</definition>
        <argsstring></argsstring>
        <name>_dynamic_data_obj</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="88" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1ac10eb9a0752e0d7482d51e01d447568a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1void__result" kindref="compound">void_result</ref></type>
        <definition>void_result graphene::chain::call_order_update_evaluator::do_evaluate</definition>
        <argsstring>(const call_order_update_operation &amp;o)</argsstring>
        <name>do_evaluate</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1call__order__update__operation" kindref="compound">call_order_update_operation</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>if there is a settlement for this asset, then no further margin positions may be taken and all existing margin positions should have been closed va <ref refid="classgraphene_1_1chain_1_1database_1a500db4fc078f64b18d99c19d45fe8b13" kindref="member">database::globally_settle_asset</ref> </para>        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="80" column="1" bodyfile="libraries/chain/market_evaluator.cpp" bodystart="158" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__update__evaluator_1af9a476d0e24980214e04228855b9e030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref></type>
        <definition>object_id_type graphene::chain::call_order_update_evaluator::do_apply</definition>
        <argsstring>(const call_order_update_operation &amp;o)</argsstring>
        <name>do_apply</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1call__order__update__operation" kindref="compound">call_order_update_operation</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="81" column="1" bodyfile="libraries/chain/market_evaluator.cpp" bodystart="214" bodyend="367"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1532">
        <label>graphene::chain::call_order_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1call__order__update__evaluator"/>
        <childnode refid="1533" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1534">
        <label>graphene::chain::generic_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1generic__evaluator"/>
      </node>
      <node id="1533">
        <label>graphene::chain::evaluator&lt; call_order_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="1534" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1541">
        <label>graphene::db::abstract_object&lt; asset_object &gt;</label>
      </node>
      <node id="1546">
        <label>flat_set&lt; asset_id_type &gt;</label>
      </node>
      <node id="1558">
        <label>time_point_sec</label>
      </node>
      <node id="1584">
        <label>graphene::protocol::bitasset_options</label>
        <link refid="structgraphene_1_1protocol_1_1bitasset__options"/>
        <childnode refid="1557" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
      </node>
      <node id="1586">
        <label>flat_map&lt; account_id_type, pair&lt; time_point_sec, graphene::protocol::price_feed &gt; &gt;</label>
      </node>
      <node id="1570">
        <label>optional&lt; vesting_balance_id_type &gt;</label>
      </node>
      <node id="1553">
        <label>db::object_database</label>
      </node>
      <node id="1571">
        <label>graphene::protocol::account_options</label>
        <link refid="structgraphene_1_1protocol_1_1account__options"/>
        <childnode refid="1557" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1572" relation="usage">
          <edgelabel>votes</edgelabel>
        </childnode>
        <childnode refid="1573" relation="usage">
          <edgelabel>memo_key</edgelabel>
        </childnode>
      </node>
      <node id="1582">
        <label>graphene::chain::asset_bitasset_data_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__bitasset__data__object"/>
        <childnode refid="1583" relation="public-inheritance">
        </childnode>
        <childnode refid="1558" relation="usage">
          <edgelabel>current_feed_publication_time</edgelabel>
        </childnode>
        <childnode refid="1584" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="1585" relation="usage">
          <edgelabel>current_feed</edgelabel>
        </childnode>
        <childnode refid="1539" relation="usage">
          <edgelabel>settlement_fund</edgelabel>
          <edgelabel>force_settled_volume</edgelabel>
        </childnode>
        <childnode refid="1586" relation="usage">
          <edgelabel>feeds</edgelabel>
        </childnode>
        <childnode refid="1548" relation="usage">
          <edgelabel>current_maintenance_collateralization</edgelabel>
          <edgelabel>settlement_price</edgelabel>
        </childnode>
      </node>
      <node id="1547">
        <label>string</label>
      </node>
      <node id="1535">
        <label>graphene::chain::call_order_update_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1call__order__update__evaluator"/>
        <childnode refid="1536" relation="public-inheritance">
        </childnode>
        <childnode refid="1540" relation="usage">
          <edgelabel>_debt_asset</edgelabel>
        </childnode>
        <childnode refid="1579" relation="usage">
          <edgelabel>_order</edgelabel>
        </childnode>
        <childnode refid="1564" relation="usage">
          <edgelabel>_dynamic_data_obj</edgelabel>
        </childnode>
        <childnode refid="1582" relation="usage">
          <edgelabel>_bitasset_data</edgelabel>
        </childnode>
        <childnode refid="1566" relation="usage">
          <edgelabel>_paying_account</edgelabel>
        </childnode>
      </node>
      <node id="1557">
        <label>flat_set&lt; future_extensions &gt;</label>
      </node>
      <node id="1548">
        <label>graphene::protocol::price</label>
        <link refid="structgraphene_1_1protocol_1_1price"/>
        <childnode refid="1538" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="1545">
        <label>graphene::protocol::additional_asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1additional__asset__options"/>
      </node>
      <node id="1577">
        <label>flat_map&lt; graphene::protocol::address, weight_type &gt;</label>
      </node>
      <node id="1565">
        <label>graphene::db::abstract_object&lt; asset_dynamic_data_object &gt;</label>
      </node>
      <node id="1566">
        <label>graphene::chain::account_object</label>
        <link refid="classgraphene_1_1chain_1_1account__object"/>
        <childnode refid="1567" relation="public-inheritance">
        </childnode>
        <childnode refid="1568" relation="usage">
          <edgelabel>allowed_assets</edgelabel>
        </childnode>
        <childnode refid="1569" relation="usage">
          <edgelabel>owner_special_authority</edgelabel>
          <edgelabel>active_special_authority</edgelabel>
        </childnode>
        <childnode refid="1570" relation="usage">
          <edgelabel>cashback_vb</edgelabel>
        </childnode>
        <childnode refid="1571" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="1558" relation="usage">
          <edgelabel>membership_expiration_date</edgelabel>
        </childnode>
        <childnode refid="1547" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="1574" relation="usage">
          <edgelabel>active</edgelabel>
          <edgelabel>owner</edgelabel>
        </childnode>
        <childnode refid="1578" relation="usage">
          <edgelabel>whitelisted_accounts</edgelabel>
          <edgelabel>blacklisted_accounts</edgelabel>
        </childnode>
        <childnode refid="1549" relation="usage">
          <edgelabel>whitelisting_accounts</edgelabel>
          <edgelabel>blacklisting_accounts</edgelabel>
        </childnode>
      </node>
      <node id="1578">
        <label>set&lt; account_id_type &gt;</label>
      </node>
      <node id="1567">
        <label>graphene::db::abstract_object&lt; account_object &gt;</label>
      </node>
      <node id="1575">
        <label>flat_map&lt; graphene::protocol::public_key_type, weight_type &gt;</label>
      </node>
      <node id="1549">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="1585">
        <label>graphene::protocol::price_feed</label>
        <link refid="structgraphene_1_1protocol_1_1price__feed"/>
        <childnode refid="1548" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
          <edgelabel>settlement_price</edgelabel>
        </childnode>
      </node>
      <node id="1560">
        <label>vector&lt; signature_type &gt;</label>
      </node>
      <node id="1543">
        <label>graphene::protocol::asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1asset__options"/>
        <childnode refid="1544" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1546" relation="usage">
          <edgelabel>whitelist_markets</edgelabel>
          <edgelabel>blacklist_markets</edgelabel>
        </childnode>
        <childnode refid="1539" relation="usage">
          <edgelabel>max_market_fee</edgelabel>
          <edgelabel>max_supply</edgelabel>
        </childnode>
        <childnode refid="1547" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="1548" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
        </childnode>
        <childnode refid="1549" relation="usage">
          <edgelabel>whitelist_authorities</edgelabel>
          <edgelabel>blacklist_authorities</edgelabel>
        </childnode>
      </node>
      <node id="1561">
        <label>flat_set&lt; graphene::protocol::public_key_type &gt;</label>
      </node>
      <node id="1537">
        <label>graphene::chain::generic_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1generic__evaluator"/>
        <childnode refid="1538" relation="usage">
          <edgelabel>fee_from_account</edgelabel>
        </childnode>
        <childnode refid="1540" relation="usage">
          <edgelabel>fee_asset</edgelabel>
        </childnode>
        <childnode refid="1539" relation="usage">
          <edgelabel>core_fee_paid</edgelabel>
        </childnode>
        <childnode refid="1551" relation="usage">
          <edgelabel>trx_state</edgelabel>
        </childnode>
        <childnode refid="1562" relation="usage">
          <edgelabel>fee_paying_account_statistics</edgelabel>
        </childnode>
        <childnode refid="1564" relation="usage">
          <edgelabel>fee_asset_dyn_data</edgelabel>
        </childnode>
        <childnode refid="1566" relation="usage">
          <edgelabel>fee_paying_account</edgelabel>
        </childnode>
      </node>
      <node id="1579">
        <label>graphene::chain::call_order_object</label>
        <link refid="classgraphene_1_1chain_1_1call__order__object"/>
        <childnode refid="1580" relation="public-inheritance">
        </childnode>
        <childnode refid="1581" relation="usage">
          <edgelabel>target_collateral_ratio</edgelabel>
        </childnode>
        <childnode refid="1539" relation="usage">
          <edgelabel>debt</edgelabel>
          <edgelabel>collateral</edgelabel>
        </childnode>
        <childnode refid="1548" relation="usage">
          <edgelabel>call_price</edgelabel>
        </childnode>
      </node>
      <node id="1559">
        <label>vector&lt; operation &gt;</label>
      </node>
      <node id="1554">
        <label>vector&lt; operation_result &gt;</label>
      </node>
      <node id="1569">
        <label>static_variant&lt; no_special_authority, top_holders_special_authority &gt;</label>
      </node>
      <node id="1550">
        <label>optional&lt; account_id_type &gt;</label>
      </node>
      <node id="1581">
        <label>optional&lt; uint16_t &gt;</label>
      </node>
      <node id="1538">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="1539" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1540">
        <label>graphene::chain::asset_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__object"/>
        <childnode refid="1541" relation="public-inheritance">
        </childnode>
        <childnode refid="1542" relation="usage">
          <edgelabel>bitasset_data_id</edgelabel>
        </childnode>
        <childnode refid="1543" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="1550" relation="usage">
          <edgelabel>buyback_account</edgelabel>
        </childnode>
        <childnode refid="1547" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
      <node id="1552">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="1553" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1539">
        <label>safe&lt; int64_t &gt;</label>
      </node>
      <node id="1573">
        <label>graphene::protocol::public_key_type</label>
        <link refid="structgraphene_1_1protocol_1_1public__key__type"/>
      </node>
      <node id="1544">
        <label>graphene::protocol::extension&lt; additional_asset_options &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="1545" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="1551">
        <label>graphene::chain::transaction_evaluation_state</label>
        <link refid="classgraphene_1_1chain_1_1transaction__evaluation__state"/>
        <childnode refid="1552" relation="usage">
          <edgelabel>_db</edgelabel>
        </childnode>
        <childnode refid="1554" relation="usage">
          <edgelabel>operation_results</edgelabel>
        </childnode>
        <childnode refid="1555" relation="usage">
          <edgelabel>_trx</edgelabel>
        </childnode>
      </node>
      <node id="1580">
        <label>graphene::db::abstract_object&lt; call_order_object &gt;</label>
      </node>
      <node id="1572">
        <label>flat_set&lt; graphene::protocol::vote_id_type &gt;</label>
      </node>
      <node id="1542">
        <label>optional&lt; asset_bitasset_data_id_type &gt;</label>
      </node>
      <node id="1562">
        <label>graphene::chain::account_statistics_object</label>
        <link refid="classgraphene_1_1chain_1_1account__statistics__object"/>
        <childnode refid="1563" relation="public-inheritance">
        </childnode>
        <childnode refid="1558" relation="usage">
          <edgelabel>last_vote_time</edgelabel>
        </childnode>
        <childnode refid="1539" relation="usage">
          <edgelabel>pending_fees</edgelabel>
          <edgelabel>core_in_balance</edgelabel>
          <edgelabel>lifetime_fees_paid</edgelabel>
          <edgelabel>pending_vested_fees</edgelabel>
          <edgelabel>total_core_in_orders</edgelabel>
        </childnode>
        <childnode refid="1547" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1583">
        <label>graphene::db::abstract_object&lt; asset_bitasset_data_object &gt;</label>
      </node>
      <node id="1568">
        <label>optional&lt; flat_set&lt; asset_id_type &gt; &gt;</label>
      </node>
      <node id="1574">
        <label>graphene::protocol::authority</label>
        <link refid="structgraphene_1_1protocol_1_1authority"/>
        <childnode refid="1575" relation="usage">
          <edgelabel>key_auths</edgelabel>
        </childnode>
        <childnode refid="1576" relation="usage">
          <edgelabel>account_auths</edgelabel>
        </childnode>
        <childnode refid="1577" relation="usage">
          <edgelabel>address_auths</edgelabel>
        </childnode>
      </node>
      <node id="1536">
        <label>graphene::chain::evaluator&lt; call_order_update_evaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="1537" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1555">
        <label>graphene::protocol::signed_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1signed__transaction"/>
        <childnode refid="1556" relation="public-inheritance">
        </childnode>
        <childnode refid="1560" relation="usage">
          <edgelabel>signatures</edgelabel>
        </childnode>
        <childnode refid="1561" relation="usage">
          <edgelabel>_signees</edgelabel>
        </childnode>
      </node>
      <node id="1576">
        <label>flat_map&lt; account_id_type, weight_type &gt;</label>
      </node>
      <node id="1556">
        <label>graphene::protocol::transaction</label>
        <link refid="classgraphene_1_1protocol_1_1transaction"/>
        <childnode refid="1557" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1558" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
        <childnode refid="1559" relation="usage">
          <edgelabel>operations</edgelabel>
        </childnode>
      </node>
      <node id="1564">
        <label>graphene::chain::asset_dynamic_data_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__dynamic__data__object"/>
        <childnode refid="1565" relation="public-inheritance">
        </childnode>
        <childnode refid="1539" relation="usage">
          <edgelabel>confidential_supply</edgelabel>
          <edgelabel>fee_pool</edgelabel>
          <edgelabel>current_supply</edgelabel>
          <edgelabel>accumulated_fees</edgelabel>
        </childnode>
      </node>
      <node id="1563">
        <label>graphene::db::abstract_object&lt; account_statistics_object &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/market_evaluator.hpp" line="76" column="1" bodyfile="libraries/chain/include/graphene/chain/market_evaluator.hpp" bodystart="75" bodyend="89"/>
    <listofallmembers>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1ac1098748c1ad9e5523f06542db808afa" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>_bitasset_data</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1a99e7a0e48a2f9135d61828fd321a5e96" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>_closing_order</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1a698b868b095b2cf519ca25322cf6e643" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>_debt_asset</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1a4a3ef879bfc68b08b84465a570e3cf06" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>_dynamic_data_obj</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1a9a8399e3c847037ef34335819bb8ee35" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>_order</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1ad70fe7dd1b62c6565c7ffc11dc619d76" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>_paying_account</name></member>
      <member refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c" prot="public" virt="virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>apply</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ab9da3acadc46e1d4a87ea91457de9a91" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>calculate_fee_for_operation</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a65bd5bfc5112f84b364ec43c1c17a699" prot="protected" virt="virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>convert_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1aa7e2ca176a3ce6690e17536549fb4c5b" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>core_fee_paid</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a9f906a5670b56865a2e9b4029a67ba81" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>db</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a945e2f8e31ad68bd802618fff3a3d5d3" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>db_adjust_balance</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1af9a476d0e24980214e04228855b9e030" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>do_apply</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1ac10eb9a0752e0d7482d51e01d447568a" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>do_evaluate</name></member>
      <member refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151" prot="public" virt="virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>evaluate</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a07efd4fa9493389424fdaa38e626ebd4" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>fee_asset</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad602d55adcb7229b91397a514c27a1c7" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>fee_asset_dyn_data</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1aeced28daa14ff4a07b9eadf14f782b5a" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>fee_from_account</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a1ad16d69e89d5e9c04299b92e324bf7d" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>fee_paying_account</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a9f7422a38474ca4ede2f9bd82ac6cf91" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>fee_paying_account_statistics</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ab6ad5b670242e3dbcde741a5cc9ddad8" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>get_relative_id</name></member>
      <member refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6" prot="public" virt="virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>get_type</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__update__evaluator_1aba9119e6163ceaa784de76a0f642a051" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>operation_type</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a6ef4f7c04d0d0289cf95a9d18d5142cb" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>pay_fba_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" prot="public" virt="virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>pay_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a90ff8169dbff062373ea5fdc98e6c484" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>prepare_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad62bf969f43cfd4900a0f4fdadc2b780" prot="public" virt="virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>start_evaluate</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a7f87a32183ec768a0402913e0e64d881" prot="protected" virt="non-virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>trx_state</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad716bd9ef32c10ba2a136cb0d7e24c1f" prot="public" virt="virtual"><scope>graphene::chain::call_order_update_evaluator</scope><name>~generic_evaluator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
