<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1asset__options" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_options</compoundname>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1ac94e394a228896487d50876b1d66bfbf" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::asset_options::max_supply</definition>
        <argsstring></argsstring>
        <name>max_supply</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a0097d4b8dab3cb6d7c7f275b054c2380" kindref="member">GRAPHENE_MAX_SHARE_SUPPLY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum supply of this asset which may exist at any given time. This can be as large as GRAPHENE_MAX_SHARE_SUPPLY </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="48" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1abe898425c59cb881bede857ec89ab599" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::asset_options::market_fee_percent</definition>
        <argsstring></argsstring>
        <name>market_fee_percent</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When this asset is traded on the markets, this percentage of the total traded will be exacted and paid to the issuer. This is a fixed point value, representing hundredths of a percent, i.e. a value of 100 in this field means a 1% fee is charged on market trades of this asset. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="52" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a12335bef1b9c33b9df5eeee1e6815d57" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::asset_options::max_market_fee</definition>
        <argsstring></argsstring>
        <name>max_market_fee</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a0097d4b8dab3cb6d7c7f275b054c2380" kindref="member">GRAPHENE_MAX_SHARE_SUPPLY</ref></initializer>
        <briefdescription>
<para>Market fees calculated as <ref refid="structgraphene_1_1protocol_1_1asset__options_1abe898425c59cb881bede857ec89ab599" kindref="member">market_fee_percent</ref> of the traded volume are capped to this value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="54" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1aa7eeee6df8b5c680a023073a84528d2c" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::asset_options::issuer_permissions</definition>
        <argsstring></argsstring>
        <name>issuer_permissions</name>
        <initializer>= UIA_ASSET_ISSUER_PERMISSION_MASK</initializer>
        <briefdescription>
<para>The flags which the issuer has permission to update. See <ref refid="namespacegraphene_1_1protocol_1a31f22f43ceabd14325d69281eda006d7" kindref="member">asset_issuer_permission_flags</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="57" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a74c282e91696d3026273eec02d0a8e4a" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::asset_options::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The currently active flags on this permission. See <ref refid="namespacegraphene_1_1protocol_1a31f22f43ceabd14325d69281eda006d7" kindref="member">asset_issuer_permission_flags</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="59" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a9a0580f33b28c3f62c40fcc1e3de8806" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref></type>
        <definition>price graphene::protocol::asset_options::core_exchange_rate</definition>
        <argsstring></argsstring>
        <name>core_exchange_rate</name>
        <initializer>= <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref>(<ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref>(), <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref>(0, asset_id_type(1)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a non-core asset is used to pay a fee, the blockchain must convert that asset to core asset in order to accept the fee. If this asset&apos;s fee pool is funded, the chain will automatically deposite fees in this asset to its accumulated fees, and withdraw from the fee pool the same amount as converted at the core exchange rate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="65" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1af6594e3bfce4ff7062f7150725c9eb71" prot="public" static="no" mutable="no">
        <type>flat_set&lt; account_id_type &gt;</type>
        <definition>flat_set&lt;account_id_type&gt; graphene::protocol::asset_options::whitelist_authorities</definition>
        <argsstring></argsstring>
        <name>whitelist_authorities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A set of accounts which maintain whitelists to consult for this asset. If whitelist_authorities is non-empty, then only accounts in whitelist_authorities are allowed to hold, use, or transfer the asset. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="69" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a9ab91dc19f333944f08f68e367b41c59" prot="public" static="no" mutable="no">
        <type>flat_set&lt; account_id_type &gt;</type>
        <definition>flat_set&lt;account_id_type&gt; graphene::protocol::asset_options::blacklist_authorities</definition>
        <argsstring></argsstring>
        <name>blacklist_authorities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A set of accounts which maintain blacklists to consult for this asset. If flags &amp; white_list is set, an account may only send, receive, trade, etc. in this asset if none of these accounts appears in its account_object::blacklisting_accounts field. If the account is blacklisted, it may not transact in this asset even if it is also whitelisted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="74" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a9c29d13ef622de8d5c039f469d3ddbc3" prot="public" static="no" mutable="no">
        <type>flat_set&lt; asset_id_type &gt;</type>
        <definition>flat_set&lt;asset_id_type&gt; graphene::protocol::asset_options::whitelist_markets</definition>
        <argsstring></argsstring>
        <name>whitelist_markets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>defines the assets that this asset may be traded against in the market </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="77" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a723c9030fb162a8f24ff9a2990cdbbec" prot="public" static="no" mutable="no">
        <type>flat_set&lt; asset_id_type &gt;</type>
        <definition>flat_set&lt;asset_id_type&gt; graphene::protocol::asset_options::blacklist_markets</definition>
        <argsstring></argsstring>
        <name>blacklist_markets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>defines the assets that this asset may not be traded against in the market, must not overlap whitelist </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="79" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a7be2b19e283c4aca404f2683e8534fd3" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string graphene::protocol::asset_options::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>data that describes the meaning/purpose of this asset, fee will be charged proportional to size of description. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="85" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__options_1a461c14cf2529d2bf320cccf213d8ed81" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a5d54f0af0b886cba542137f450bb6388" kindref="member">additional_asset_options_t</ref></type>
        <definition>additional_asset_options_t graphene::protocol::asset_options::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="86" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__options_1a4bdc7854fcc27b9fcfe398e5a4e6f111" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_options::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform internal consistency checks. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classfc_1_1exception" kindref="compound">fc::exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if any check fails </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="90" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="215" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="structgraphene_1_1protocol_1_1asset__options" kindref="compound">asset_options</ref> struct contains options available on all assets in the network. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Changes to this struct will break protocol compatibility </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1018">
        <label>flat_set&lt; asset_id_type &gt;</label>
      </node>
      <node id="1020">
        <label>string</label>
      </node>
      <node id="1021">
        <label>graphene::protocol::price</label>
        <link refid="structgraphene_1_1protocol_1_1price"/>
        <childnode refid="1022" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="1015">
        <label>graphene::protocol::additional_asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1additional__asset__options"/>
        <childnode refid="1016" relation="usage">
          <edgelabel>reward_percent</edgelabel>
        </childnode>
        <childnode refid="1017" relation="usage">
          <edgelabel>whitelist_market_fee_sharing</edgelabel>
        </childnode>
      </node>
      <node id="1017">
        <label>fc::optional&lt; flat_set&lt; account_id_type &gt; &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="1023">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="1019">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="1013">
        <label>graphene::protocol::asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1asset__options"/>
        <childnode refid="1014" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="1018" relation="usage">
          <edgelabel>whitelist_markets</edgelabel>
          <edgelabel>blacklist_markets</edgelabel>
        </childnode>
        <childnode refid="1019" relation="usage">
          <edgelabel>max_market_fee</edgelabel>
          <edgelabel>max_supply</edgelabel>
        </childnode>
        <childnode refid="1020" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="1021" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
        </childnode>
        <childnode refid="1023" relation="usage">
          <edgelabel>whitelist_authorities</edgelabel>
          <edgelabel>blacklist_authorities</edgelabel>
        </childnode>
      </node>
      <node id="1022">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="1019" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1014">
        <label>graphene::protocol::extension&lt; additional_asset_options &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="1015" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="1016">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="45" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="45" bodyend="91"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a9ab91dc19f333944f08f68e367b41c59" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>blacklist_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a723c9030fb162a8f24ff9a2990cdbbec" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>blacklist_markets</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a9a0580f33b28c3f62c40fcc1e3de8806" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>core_exchange_rate</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a7be2b19e283c4aca404f2683e8534fd3" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>description</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a461c14cf2529d2bf320cccf213d8ed81" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a74c282e91696d3026273eec02d0a8e4a" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>flags</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1aa7eeee6df8b5c680a023073a84528d2c" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>issuer_permissions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1abe898425c59cb881bede857ec89ab599" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>market_fee_percent</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a12335bef1b9c33b9df5eeee1e6815d57" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>max_market_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1ac94e394a228896487d50876b1d66bfbf" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>max_supply</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a4bdc7854fcc27b9fcfe398e5a4e6f111" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1af6594e3bfce4ff7062f7150725c9eb71" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>whitelist_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__options_1a9c29d13ef622de8d5c039f469d3ddbc3" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_options</scope><name>whitelist_markets</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
